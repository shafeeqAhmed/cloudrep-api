{
    "openapi": "3.0.0",
    "info": {
        "title": "Cloudrepai API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign up",
                "description": "Register User",
                "operationId": "authRegister",
                "requestBody": {
                    "description": "Pass user data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "role"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "format": "first_name",
                                        "example": "john"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "format": "last_name",
                                        "example": "doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password_confirmation",
                                        "example": "PassWord12345"
                                    },
                                    "role": {
                                        "type": "string",
                                        "format": "role",
                                        "example": "agent"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been Registered Successfully!',\r\n     *       'data': {\r\n     *          'userData': {\r\n     *              'id': 2,\r\n     *              'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *              'name': 'John Doe',\r\n     *              'first_name': 'John',\r\n     *              'last_name': Doe',\r\n     *              'email': 'johndoe@gmail.com',\r\n     *              'phone_no': '+11236547891',\r\n     *              'step': '3',\r\n     *              'profile_photo': 'https://ui-avatars.com/api/?name=j+j&color=7F9CF5&background=EBF4FF',\r\n     *              'ability': [\r\n     *                  {\r\n     *                      'action': 'all',\r\n     *                      'subject': 'agent'\r\n     *                  }\r\n     *              ],\r\n     *              'role': 'agent',\r\n     *              'is_verified_email': false\r\n     *         },\r\n     *         accessToken':  '18|x6Qlq7pZfG9TcOuFyZBR6PAZZZyHZjbs8h6Sa9Ar',\r\n     *         refreshToken': '18|x6Qlq7pZfG9TcOuFyZBR6PAZZZyHZjbs8h6Sa9Ar',\r\n     *         isVerified2fa': false,\r\n     *     }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been Login Successfully!',\r\n     *       'data': {\r\n     *          'userData': {\r\n     *              'id': 2,\r\n     *              'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *              'name': 'John Doe',\r\n     *              'first_name': 'John',\r\n     *              'last_name': Doe',\r\n     *              'email': 'johndoe@gmail.com',\r\n     *              'phone_no': '+11236547891',\r\n     *              'step': '3',\r\n     *              'profile_photo': 'https://ui-avatars.com/api/?name=j+j&color=7F9CF5&background=EBF4FF',\r\n     *              'ability': [\r\n     *                  {\r\n     *                      'action': 'all',\r\n     *                      'subject': 'agent'\r\n     *                  }\r\n     *              ],\r\n     *              'role': 'agent',\r\n     *              'is_verified_email': false\r\n     *         },\r\n     *         accessToken':  '18|x6Qlq7pZfG9TcOuFyZBR6PAZZZyHZjbs8h6Sa9Ar',\r\n     *         refreshToken': '18|x6Qlq7pZfG9TcOuFyZBR6PAZZZyHZjbs8h6Sa9Ar',\r\n     *         isVerified2fa': false,\r\n     *     }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Forgot Password",
                "description": "Forgot Password by email",
                "operationId": "forgotPassword",
                "requestBody": {
                    "description": "Pass email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A password reset link has been sent to this email successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "We can't find a user with that email address"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset Password",
                "description": "Reset Password email, password, token",
                "operationId": "resetPassword",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password_confirmation",
                                        "example": "PassWord12345"
                                    },
                                    "token": {
                                        "type": "string",
                                        "format": "token",
                                        "example": "7d87da871a3ac2a16856ef135ed870255dad10e1eec09c1d04c5bdfc2bfad3c7"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User password has been reset successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong credentials. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get Auth User",
                "description": "Get Auth User",
                "operationId": "getAuthUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "get user by auth user id",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "test user"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 2,\r\n     *          'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *          'name': 'John Doe',\r\n     *          'first_name': 'John',\r\n     *          'last_name': Doe',\r\n     *          'email': 'johndoe@gmail.com',\r\n     *          'phone_no': '+11236547891',\r\n     *          'role': null,\r\n     *          'profile_photo': {},\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-phone-no": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update Phone No",
                "description": "Update Phone No",
                "operationId": "updatePhone",
                "requestBody": {
                    "description": "Pass user phone no",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone_no"
                                ],
                                "properties": {
                                    "phone_no": {
                                        "type": "integer",
                                        "format": "phone",
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Your phone no has been Register and OPT send on it!",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bussines-categories": {
            "get": {
                "tags": [
                    "Bussines Category"
                ],
                "summary": "Get Bussines Categories",
                "description": "Get Bussines Categories",
                "operationId": "getBussinesCategories",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort bussines categories by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test bussines categories"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort bussines categories by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort bussines categories by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Business Categories has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test bussines categoy',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Business Category Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bussines categories": {
            "post": {
                "tags": [
                    "Bussines Category"
                ],
                "summary": "Create Bussines Category",
                "description": "Create Bussines Category",
                "operationId": "createBussinesCategory",
                "requestBody": {
                    "description": "Pass Bussines Category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test service"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Bussines Categories has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test bussines category',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Busines Category Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bussines-categories/{uuid}": {
            "get": {
                "tags": [
                    "Bussines Category"
                ],
                "summary": "Get Bussines Category",
                "description": "Get Bussines Category by uuid",
                "operationId": "getBussines CategoryById",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Bussines Category",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Bussines Category has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test Bussines Category',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bussines Category Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bussines Category"
                ],
                "summary": "Delete Bussines Category",
                "description": "Delete existing Bussines Category",
                "operationId": "deleteBussinesCategory",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Bussines Category",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Bussines Category has been Deleted Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test service',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bussines Category Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bussines-categories/uuid": {
            "put": {
                "tags": [
                    "Bussines Category"
                ],
                "summary": "Update Bussines Category",
                "description": "Update Bussines Category",
                "operationId": "updateBussinesCategory",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Bussines Category",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "requestBody": {
                    "description": "Pass Bussines Category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test service"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Bussines Category has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test bussines category',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Busines Category Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-agent-payout-settings": {
            "post": {
                "tags": [
                    "Agent Payout Setting"
                ],
                "summary": "Create Agent Payout Setting",
                "description": "Create Agent Payout Setting",
                "operationId": "createCampaignAgentPayoutSetting",
                "requestBody": {
                    "description": "Pass Publisher Payout Setting data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "per_call_earning": {
                                        "type": "integer",
                                        "format": "per_call_earning",
                                        "example": "$1.5"
                                    },
                                    "commission": {
                                        "type": "boolean",
                                        "format": "commission",
                                        "example": "true/false"
                                    },
                                    "commission_type": {
                                        "type": "enum",
                                        "format": "commission_type",
                                        "example": "fixed_amount/revshare_percentage"
                                    },
                                    "payout_amount": {
                                        "type": "integer",
                                        "format": "payout_amount",
                                        "example": "100"
                                    },
                                    "revshare_payout_limits": {
                                        "type": "boolean",
                                        "format": "revshare_payout_limits",
                                        "example": "true/false"
                                    },
                                    "min": {
                                        "type": "integer",
                                        "format": "min",
                                        "example": "0"
                                    },
                                    "max": {
                                        "type": "integer",
                                        "format": "max",
                                        "example": "1"
                                    },
                                    "duplicate_payouts": {
                                        "type": "enum",
                                        "format": "duplicate_payouts",
                                        "example": "Disable/Enable/Time Limits"
                                    },
                                    "days": {
                                        "type": "integer",
                                        "format": "days",
                                        "example": "5"
                                    },
                                    "hours": {
                                        "type": "integer",
                                        "format": "hours",
                                        "example": "5.5"
                                    },
                                    "payout_hours": {
                                        "type": "boolean",
                                        "format": "payout_hours",
                                        "example": "true/false"
                                    },
                                    "open_time": {
                                        "type": "time",
                                        "format": "open_time",
                                        "example": "10:45:00"
                                    },
                                    "close_time": {
                                        "type": "time",
                                        "format": "close_time",
                                        "example": "10:50:00"
                                    },
                                    "start_break_time": {
                                        "type": "time",
                                        "format": "start_break_time",
                                        "example": "12:30:02"
                                    },
                                    "break_duration": {
                                        "type": "string",
                                        "format": "break_duration",
                                        "example": "30 min"
                                    },
                                    "time_zone": {
                                        "type": "string",
                                        "format": "time_zone",
                                        "example": "+GMT Canada"
                                    },
                                    "limit_payout": {
                                        "type": "boolean",
                                        "format": "limit_payout",
                                        "example": "true/false"
                                    },
                                    "global_cap": {
                                        "type": "boolean",
                                        "format": "global_cap",
                                        "example": "true/false"
                                    },
                                    "global_payout_cap": {
                                        "type": "boolean",
                                        "format": "global_payout_cap",
                                        "example": "true/false"
                                    },
                                    "monthly_cap": {
                                        "type": "boolean",
                                        "format": "monthly_cap",
                                        "example": "true/false"
                                    },
                                    "monthly_payout_cap": {
                                        "type": "boolean",
                                        "format": "monthly_payout_cap",
                                        "example": "true/false"
                                    },
                                    "daily_cap": {
                                        "type": "boolean",
                                        "format": "daily_cap",
                                        "example": "true/false"
                                    },
                                    "daily_payout_cap": {
                                        "type": "boolean",
                                        "format": "daily_payout_cap",
                                        "example": "true/false"
                                    },
                                    "hourly_cap": {
                                        "type": "boolean",
                                        "format": "hourly_cap",
                                        "example": "true/false"
                                    },
                                    "hourly_payout_cap": {
                                        "type": "boolean",
                                        "format": "hourly_payout_cap",
                                        "example": "true/false"
                                    },
                                    "concurrency_cap": {
                                        "type": "boolean",
                                        "format": "concurrency_cap",
                                        "example": "true/false"
                                    },
                                    "tips": {
                                        "type": "boolean",
                                        "format": "tips",
                                        "example": "true/false"
                                    },
                                    "bounties_condition": {
                                        "type": "string",
                                        "format": "bounties_condition",
                                        "example": "10 sales"
                                    },
                                    "bounties_operator": {
                                        "type": "string",
                                        "format": "bounties_operator",
                                        "example": "Equal to"
                                    },
                                    "bounties_value": {
                                        "type": "integer",
                                        "format": "bounties_value",
                                        "example": "$100"
                                    },
                                    "bonus_type": {
                                        "type": "string",
                                        "format": "bonus_type",
                                        "example": "annual/sales/performance/dependability"
                                    },
                                    "bonus_value": {
                                        "type": "integer",
                                        "format": "bonus_value",
                                        "example": "$200"
                                    },
                                    "user_uuid": {
                                        "type": "string",
                                        "format": "user_uuid",
                                        "example": "135f33b5-841e-47de-9686-dfd0c3eda7fc"
                                    },
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "135f33b5-841e-47de-9686-dfd0c3eda7fc"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Agent Payout Setting has been Created Successfully!',\r\n     *       'data': {\r\n     *          'agent_payout_setting': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'per_call_earning': '1.5',\r\n     *             'commission': 'true',\r\n     *             'commission_type': 'fixed_amount',\r\n     *             'payout_amount', '10',\r\n     *             'revshare_payout_limits': true,\r\n     *             'min': 0,\r\n     *             'max': 1,\r\n     *             'duplicate_payouts': 'time limits',\r\n     *             'days': '10',\r\n     *             'hours': '5',\r\n     *             'payout_hours': 'true',\r\n     *             'open_time': '10:45:00',\r\n     *             'close_time': '10:50:00',\r\n     *             'start_break_time': '12:30:02',\r\n     *             'break_duration': '30 min',\r\n     *             'time_zone': '+GMT Canada',\r\n     *             'limit_payout': 'true',\r\n     *             'global_cap': 'false',\r\n     *             'global_payout_cap': 'false',\r\n     *             'monthly_cap': 'true',\r\n     *             'monthly_payout_cap': 'false',\r\n     *             'daily_cap': 'true',\r\n     *             'daily_payout_cap': 'true',\r\n     *             'hourly_cap': 'true',\r\n     *             'hourly_payout_cap': 'true',\r\n     *             'concurrency_cap': 'true',\r\n     *             'tips': true,\r\n     *             'bounties_condition': 10 sales,\r\n     *             'bounties_operator': Equals to,\r\n     *             'bounties_value': $100,\r\n     *             'bonus_type': annual,\r\n     *             'bonus_value': $200,\r\n     *             'user_id': '1',\r\n     *             'campaign_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Agent Payout Setting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-single-agent-payout-setting": {
            "get": {
                "tags": [
                    "Agent Payout Setting"
                ],
                "summary": "Get Agent Payout Setting by uuid",
                "description": "Get Agent Payout Setting by uuid",
                "operationId": "getAgentPayoutById",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "sort Agent Payout Setting by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Agent Payout Setting has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'agent_payout_setting': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'per_call_earning': '1.5',\r\n     *             'commission': 'true',\r\n     *             'commission_type': 'fixed_amount',\r\n     *             'payout_amount': '10',\r\n     *             'revshare_payout_limits': true,\r\n     *             'min': 0,\r\n     *             'max': 1,\r\n     *             'duplicate_payouts': 'time limits',\r\n     *             'days': '10',\r\n     *             'hours': '5',\r\n     *             'payout_hours': 'true',\r\n     *             'open_time': '10:45:00',\r\n     *             'close_time': '10:50:00',\r\n     *             'start_break_time': '12:30:02',\r\n     *             'break_duration': '30 min',\r\n     *             'time_zone': '+GMT Canada',\r\n     *             'limit_payout': 'true',\r\n     *             'global_cap': 'false',\r\n     *             'global_payout_cap': 'false',\r\n     *             'monthly_cap': 'true',\r\n     *             'monthly_payout_cap': 'false',\r\n     *             'daily_cap': 'true',\r\n     *             'daily_payout_cap': 'true',\r\n     *             'hourly_cap': 'true',\r\n     *             'hourly_payout_cap': 'true',\r\n     *             'concurrency_cap': 'true',\r\n     *             'tips': true,\r\n     *             'bounties_condition': 10 Sales,\r\n     *             'bounties_operator': Equals to,\r\n     *             'bounties_value': $200,\r\n     *             'bonus_type': annual,\r\n     *             'bonus_value': $200,\r\n     *             'user_id', '1',\r\n     *             'campaign_id': '1'\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Agent Payout Setting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/my-agent-payout-setting": {
            "get": {
                "tags": [
                    "Agent Payout Setting"
                ],
                "summary": "Get Agent Payout Setting by current user",
                "description": "Get Agent Payout Setting by current user",
                "operationId": "getAgentPayoutByuserId",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Agent Payout Setting has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'agent_payout_setting': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'per_call_earning': '1.5',\r\n     *             'commission': 'true',\r\n     *             'commission_type': 'revshare_percentage',\r\n     *             'payout_amount': '10',\r\n     *             'revshare_payout_limit': true,\r\n     *             'min': 0,\r\n     *             'max': 1,\r\n     *             'duplicate_payouts': 'time limits',\r\n     *             'days': '10',\r\n     *             'hours': '5',\r\n     *             'payout_hours': 'true',\r\n     *             'open_time': '10:45:00',\r\n     *             'close_time': '10:50:00',\r\n     *             'start_break_time': '12:30:02',\r\n     *             'break_duration': '30 min',\r\n     *             'time_zone': '+GMT Canada',\r\n     *             'limit_payout': 'true',\r\n     *             'global_cap': 'false',\r\n     *             'global_payout_cap': 'false',\r\n     *             'monthly_cap': 'true',\r\n     *             'monthly_payout_cap': 'false',\r\n     *             'daily_cap': 'true',\r\n     *             'daily_payout_cap': 'true',\r\n     *             'hourly_cap': 'true',\r\n     *             'hourly_payout_cap': 'true',\r\n     *             'concurrency_cap': 'true',\r\n     *             'tips': $200,\r\n     *             'bounties_condition': 10 Sales,\r\n     *             'bounties_operator': Equals to,\r\n     *             'bounties_values': $200,\r\n     *             'bonus_type': annual,\r\n     *             'bonus_values': $200,\r\n     *             'user_id': '1',\r\n     *             'campaign_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Agent Payout Setting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-agent-payout-setting": {
            "put": {
                "tags": [
                    "Agent Payout Setting"
                ],
                "summary": "Update Agent Payout Setting by uuid",
                "description": "Update Agent Payout Setting",
                "operationId": "updateAgentPayoutSetting",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "Update Agent Payout Setting by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                    }
                ],
                "requestBody": {
                    "description": "Pass Agent Payout Setting data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "per_call_earning": {
                                        "type": "integer",
                                        "format": "per_call_earning",
                                        "example": "$1.5"
                                    },
                                    "commission": {
                                        "type": "boolean",
                                        "format": "commission",
                                        "example": "true/false"
                                    },
                                    "commission_type": {
                                        "type": "enum",
                                        "format": "commission_type",
                                        "example": "fixed_amount/revshare_percentage"
                                    },
                                    "payout_amount": {
                                        "type": "integer",
                                        "format": "payout_amount",
                                        "example": "100"
                                    },
                                    "revshare_payout_limits": {
                                        "type": "boolean",
                                        "format": "revshare_payout_limits",
                                        "example": "true"
                                    },
                                    "min": {
                                        "type": "integer",
                                        "format": "min",
                                        "example": "0"
                                    },
                                    "max": {
                                        "type": "integer",
                                        "format": "max",
                                        "example": "1"
                                    },
                                    "duplicate_payouts": {
                                        "type": "enum",
                                        "format": "duplicate_payouts",
                                        "example": "Disable/Enable/Time Limits"
                                    },
                                    "days": {
                                        "type": "integer",
                                        "format": "days",
                                        "example": "5"
                                    },
                                    "hours": {
                                        "type": "integer",
                                        "format": "hours",
                                        "example": "5.5"
                                    },
                                    "payout_hours": {
                                        "type": "boolean",
                                        "format": "payout_hours",
                                        "example": "true/false"
                                    },
                                    "open_time": {
                                        "type": "time",
                                        "format": "open_time",
                                        "example": "10:45:00"
                                    },
                                    "close_time": {
                                        "type": "time",
                                        "format": "close_time",
                                        "example": "10:50:00"
                                    },
                                    "start_break_time": {
                                        "type": "time",
                                        "format": "start_break_time",
                                        "example": "12:30:02"
                                    },
                                    "break_duration": {
                                        "type": "string",
                                        "format": "break_duration",
                                        "example": "30 min"
                                    },
                                    "time_zone": {
                                        "type": "string",
                                        "format": "time_zone",
                                        "example": "+GMT Canada"
                                    },
                                    "limit_payout": {
                                        "type": "boolean",
                                        "format": "limit_payout",
                                        "example": "true/false"
                                    },
                                    "global_cap": {
                                        "type": "boolean",
                                        "format": "global_cap",
                                        "example": "true/false"
                                    },
                                    "global_payout_cap": {
                                        "type": "boolean",
                                        "format": "global_payout_cap",
                                        "example": "true/false"
                                    },
                                    "monthly_cap": {
                                        "type": "boolean",
                                        "format": "monthly_cap",
                                        "example": "true/false"
                                    },
                                    "monthly_payout_cap": {
                                        "type": "boolean",
                                        "format": "monthly_payout_cap",
                                        "example": "true/false"
                                    },
                                    "daily_cap": {
                                        "type": "boolean",
                                        "format": "daily_cap",
                                        "example": "true/false"
                                    },
                                    "daily_payout_cap": {
                                        "type": "boolean",
                                        "format": "daily_payout_cap",
                                        "example": "true/false"
                                    },
                                    "hourly_cap": {
                                        "type": "boolean",
                                        "format": "hourly_cap",
                                        "example": "true/false"
                                    },
                                    "hourly_payout_cap": {
                                        "type": "boolean",
                                        "format": "hourly_payout_cap",
                                        "example": "true/false"
                                    },
                                    "concurrency_cap": {
                                        "type": "boolean",
                                        "format": "concurrency_cap",
                                        "example": "true/false"
                                    },
                                    "hourly_rates": {
                                        "type": "integer",
                                        "format": "hourly_rates",
                                        "example": "$200"
                                    },
                                    "tips": {
                                        "type": "boolean",
                                        "format": "tips",
                                        "example": "true/false"
                                    },
                                    "bounties_condition": {
                                        "type": "string",
                                        "format": "bounties_condition",
                                        "example": "10 Sales"
                                    },
                                    "bounties_operator": {
                                        "type": "string",
                                        "format": "bounties_operator",
                                        "example": "Equals to"
                                    },
                                    "bounties_value": {
                                        "type": "integer",
                                        "format": "bounties_value",
                                        "example": "$200"
                                    },
                                    "bonus_type": {
                                        "type": "string",
                                        "format": "bonus_type",
                                        "example": "annual"
                                    },
                                    "bonus_value": {
                                        "type": "integer",
                                        "format": "bonus_value",
                                        "example": "$200"
                                    },
                                    "user_uuid": {
                                        "type": "string",
                                        "format": "user_uuid",
                                        "example": "5966ac42-2b31-4aeb-ad95-fec77cfc6154"
                                    },
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "5966ac42-2b31-4aeb-ad95-fec77cfc6154"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Agent Payout Setting has been Updated Successfully!',\r\n     *         'data': {\r\n     *          'agentr_payout_setting': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'per_call_earning': '1.5',\r\n     *             'commission': 'true',\r\n     *             'commission_type': 'fixed_amount',\r\n     *             'payout_amount': '10',\r\n     *             'revshare_payout_limits': true,\r\n     *             'min': 0,\r\n     *             'max': 1,\r\n     *             'duplicate_payouts', 'time limits',\r\n     *             'days': '10',\r\n     *             'hours': '5',\r\n     *             'payout_hours': 'true',\r\n     *             'open_time': '10:45:00',\r\n     *             'close_time': '10:50:00',\r\n     *             'start_break_time': '12:30:02',\r\n     *             'break_duration': '30 min',\r\n     *             'time_zone': '+GMT Canada',\r\n     *             'limit_payout': 'true',\r\n     *             'global_cap': 'false',\r\n     *             'global_payout_cap': 'false',\r\n     *             'monthly_cap': 'true',\r\n     *             'monthly_payout_cap': 'false',\r\n     *             'daily_cap': 'true',\r\n     *             'daily_payout_cap': 'true',\r\n     *             'hourly_cap': 'true',\r\n     *             'hourly_payout_cap': 'true',\r\n     *             'concurrency_cap': 'true',\r\n     *             'hourly_rates': $200,\r\n     *             'tips': boolean,\r\n     *             'bounties_condition': 10 Sales,\r\n     *             'bounties_operator': Equals to,\r\n     *             'bounties_value': $200,\r\n     *             'bonus_type': annual,\r\n     *             'bonus_value': $200,\r\n     *             'user_id': '1',\r\n     *             'campaign_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Agent Payout Setting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/delete-agent-payout-settings": {
            "delete": {
                "tags": [
                    "Agent Payout Setting"
                ],
                "summary": "Delete Agent Payout Setting",
                "description": "Delete existing Agent Payout Setting",
                "operationId": "deleteAgentPayoutSetting",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Agent Payout Setting has been Deleted Successfully!',\r\n     *         'data': {\r\n     *          'agent_payout_setting': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'per_call_earning': '1.5',\r\n     *             'commission': 'true',\r\n     *             'commission_type': 'revshare_percentage',\r\n     *             'payout_amount': '10',\r\n     *             'revshare_payout_limits': true,\r\n     *             'min': 0,\r\n     *             'max': 1,\r\n     *             'duplicate_payouts': 'time limits',\r\n     *             'days':'10',\r\n     *             'hours':'5',\r\n     *             'payout_hours': 'true',\r\n     *             'open_time': '10:45:00',\r\n     *             'close_time': '10:50:00',\r\n     *             'time_zone': '+GMT Canada',\r\n     *             'limit_payout': 'true',\r\n     *             'global_cap': 'false',\r\n     *             'global_payout_cap': 'false',\r\n     *             'monthly_cap': 'true',\r\n     *             'monthly_payout_cap': 'false',\r\n     *             'daily_cap': 'true',\r\n     *             'daily_payout_cap': 'true',\r\n     *             'hourly_cap': 'true',\r\n     *             'hourly_payout_cap'::'true',\r\n     *             'concurrency_cap':'true',\r\n     *             'tips': true,\r\n     *             'bounties_condition': 10 Sales,\r\n     *             'bounties_operator': Equals to,\r\n     *             'bounties_value': $200,\r\n     *             'bonus_type': annual,\r\n     *             'bonus_value': $200,\r\n     *             'user_id': '1',\r\n     *             'campaign_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Agent Payout Setting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-bonus-types": {
            "get": {
                "tags": [
                    "Agent Payout Setting"
                ],
                "summary": "Get Bonus Types by dropdown type",
                "description": "Get bonus types by dropdown typw",
                "operationId": "getBonusTypeByType",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type of Dropdown",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "performance/sales/dependability/none"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Agent Bonus Type has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'invoice_terms': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'label': 'Performance',\r\n     *             'value', 'performance',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Agent Bonus Type Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/campaign-lms": {
            "get": {
                "tags": [
                    "Campaign Lms"
                ],
                "summary": "Get Campaign Lms by uuid and type",
                "description": "Get Campaign Lms",
                "operationId": "getCampaignLmsByuuid",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "sort campaign lms by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1ec65f17-25cd-413e-b097-73acb6b5b4e2"
                    },
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "sort campaign lms by type param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "agent"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Lms has been fetched successfully!',\r\n     *       'data': {\r\n     *          'campaign_lms': {\r\n     *              'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *              'type': 'agent',\r\n     *              'campaign_id': 1,\r\n     *              'category_id': 1,\r\n     *              'course_id': 1,\r\n     *              'is_active': true,\r\n     *              'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Lms not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Campaign Lms"
                ],
                "summary": "Update Campaign Lms by uuid",
                "description": "Update Campaign Lms",
                "operationId": "update Campaign Lms",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "Update Campaign Lms by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                    }
                ],
                "requestBody": {
                    "description": "Pass Campaign Lms data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type,campaign_id,category_id,course_id"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "format": "type",
                                        "example": "agent/client/publisher"
                                    },
                                    "campaign_id": {
                                        "type": "string",
                                        "format": "campaign_id",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "category_id": {
                                        "type": "string",
                                        "format": "category_id",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "course_id": {
                                        "type": "string",
                                        "format": "course_id",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "is_active",
                                        "example": "true/false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Lms has been updated successfully!',\r\n     *         'data': {\r\n     *          'campaign_lms': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'type': 'agent',\r\n     *             'campaign_id': 1,\r\n     *             'category_id': 1,\r\n     *             'course_id': 1,\r\n     *             'is_active': 'true',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Lms not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Campaign Lms"
                ],
                "summary": "Create Campaign Lms",
                "description": "Create Campaign Lms",
                "operationId": "createCampaignLms",
                "requestBody": {
                    "description": "Pass data for campaign lms",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type,campaign_id,category_id,course_id"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "format": "type",
                                        "example": "agent/client/publisher"
                                    },
                                    "campaign_id": {
                                        "type": "string",
                                        "format": "campaign_id",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "category_id": {
                                        "type": "string",
                                        "format": "category_id",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "course_id": {
                                        "type": "string",
                                        "format": "course_id",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "is_active",
                                        "example": "true/false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Lms has been created successfully!',\r\n     *       'data': {\r\n     *          'campaign_lms': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'type': 'agent',\r\n     *              'campaign_id': 1,\r\n     *              'category_id': 1,\r\n     *              'course_id': 1,\r\n     *              'is_active': 'true',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Lms not created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-publisher-payout-settings": {
            "post": {
                "tags": [
                    "Publisher Payout Setting"
                ],
                "summary": "Create Publisher Payout Setting",
                "description": "Create Publisher Payout Setting",
                "operationId": "createCampaignPublisherPayoutSetting",
                "requestBody": {
                    "description": "Pass Publisher Payout Setting data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "payout_type": {
                                        "type": "enum",
                                        "format": "payout_type",
                                        "example": "fixed amount/revshare percentage"
                                    },
                                    "payout_on": {
                                        "type": "string",
                                        "format": "payout_on",
                                        "example": "call length"
                                    },
                                    "length": {
                                        "type": "integer",
                                        "format": "length",
                                        "example": "5.5"
                                    },
                                    "payout_amount": {
                                        "type": "integer",
                                        "format": "payout_amount",
                                        "example": "100"
                                    },
                                    "revshare_payout_limits": {
                                        "type": "boolean",
                                        "format": "revshare_payout_limits",
                                        "example": "true/false"
                                    },
                                    "min": {
                                        "type": "integer",
                                        "format": "min",
                                        "example": "0"
                                    },
                                    "max": {
                                        "type": "integer",
                                        "format": "max",
                                        "example": "1"
                                    },
                                    "duplicate_payouts": {
                                        "type": "enum",
                                        "format": "duplicate_payouts",
                                        "example": "Disable/Enable/Time Limits"
                                    },
                                    "days": {
                                        "type": "integer",
                                        "format": "days",
                                        "example": "5"
                                    },
                                    "hours": {
                                        "type": "integer",
                                        "format": "hours",
                                        "example": "5.5"
                                    },
                                    "payout_hours": {
                                        "type": "boolean",
                                        "format": "payout_hours",
                                        "example": "true/false"
                                    },
                                    "open_time": {
                                        "type": "time",
                                        "format": "open_time",
                                        "example": "10:45:00"
                                    },
                                    "close_time": {
                                        "type": "time",
                                        "format": "close_time",
                                        "example": "10:50:00"
                                    },
                                    "start_break_time": {
                                        "type": "time",
                                        "format": "start_break_time",
                                        "example": "12:30:02"
                                    },
                                    "break_duration": {
                                        "type": "time",
                                        "format": "break_time",
                                        "example": "30min"
                                    },
                                    "time_zone": {
                                        "type": "string",
                                        "format": "time_zone",
                                        "example": "+GMT Canada"
                                    },
                                    "limit_payout": {
                                        "type": "boolean",
                                        "format": "limit_payout",
                                        "example": "true/false"
                                    },
                                    "global_cap": {
                                        "type": "boolean",
                                        "format": "global_cap",
                                        "example": "true/false"
                                    },
                                    "global_payout_cap": {
                                        "type": "boolean",
                                        "format": "global_payout_cap",
                                        "example": "true/false"
                                    },
                                    "monthly_cap": {
                                        "type": "boolean",
                                        "format": "monthly_cap",
                                        "example": "true/false"
                                    },
                                    "monthly_payout_cap": {
                                        "type": "boolean",
                                        "format": "monthly_payout_cap",
                                        "example": "true/false"
                                    },
                                    "daily_cap": {
                                        "type": "boolean",
                                        "format": "daily_cap",
                                        "example": "true/false"
                                    },
                                    "daily_payout_cap": {
                                        "type": "boolean",
                                        "format": "daily_payout_cap",
                                        "example": "true/false"
                                    },
                                    "hourly_cap": {
                                        "type": "boolean",
                                        "format": "hourly_cap",
                                        "example": "true/false"
                                    },
                                    "hourly_payout_cap": {
                                        "type": "boolean",
                                        "format": "hourly_payout_cap",
                                        "example": "true/false"
                                    },
                                    "concurrency_cap": {
                                        "type": "boolean",
                                        "format": "concurrency_cap",
                                        "example": "true/false"
                                    },
                                    "user_uuid": {
                                        "type": "string",
                                        "format": "user_uuid",
                                        "example": "5966ac42-2b31-4aeb-ad95-fec77cfc6154"
                                    },
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "5966ac42-2b31-4aeb-ad95-fec77cfc6154"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Payout Setting has been Created Successfully!',\r\n     *       'data': {\r\n     *          'publisher_payout_setting': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'payout_type': 'fixed amount',\r\n     *             'payout_on': 'call type',\r\n     *             'length': '5',\r\n     *             'payout_amount', '10',\r\n     *             'revshare_payout_limits': true,\r\n     *             'min': 0,\r\n     *             'max': 1,\r\n     *             'duplicate_payouts': 'time limits',\r\n     *             'days': '10',\r\n     *             'hours': '5',\r\n     *             'payout_hours': 'true',\r\n     *             'open_time': '10:45:00',\r\n     *             'close_time': '10:50:00',\r\n     *             'start_break_time': '12:30:02',\r\n     *             'break_duration': '30 min',\r\n     *             'time_zone': '+GMT Canada',\r\n     *             'limit_payout': 'true',\r\n     *             'global_cap': 'false',\r\n     *             'global_payout_cap': 'false',\r\n     *             'monthly_cap': 'true',\r\n     *             'monthly_payout_cap': 'false',\r\n     *             'daily_cap': 'true',\r\n     *             'daily_payout_cap': 'true',\r\n     *             'hourly_cap': 'true',\r\n     *             'hourly_payout_cap': 'true',\r\n     *             'concurrency_cap': 'true',\r\n     *             'user_id': '1',\r\n     *             'campaign_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Payout Setting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-single-publisher-payout-setting": {
            "get": {
                "tags": [
                    "Publisher Payout Setting"
                ],
                "summary": "Get Publisher Payout Setting by uuid",
                "description": "Get Publisher Payout Setting by uuid",
                "operationId": "getPublisherPayoutById",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "sort Publisher Payout Setting by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Payout Setting has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'publisher_payout_setting': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'payout_type': 'fixed amount',\r\n     *             'payout_on': 'call type',\r\n     *             'length': '5',\r\n     *             'payout_amount': '10',\r\n     *             'revshare_payout_limits': true,\r\n     *             'min': 0,\r\n     *             'max': 1,\r\n     *             'duplicate_payouts': 'time limits',\r\n     *             'days': '10',\r\n     *             'hours': '5',\r\n     *             'payout_hours': 'true',\r\n     *             'open_time': '10:45:00',\r\n     *             'close_time': '10:50:00',\r\n     *             'start_break_time': '12:30:02,\r\n     *             'break_duration': 30 min',\r\n     *             'time_zone': '+GMT Canada',\r\n     *             'limit_payout': 'true',\r\n     *             'global_cap': 'false',\r\n     *             'global_payout_cap': 'false',\r\n     *             'monthly_cap': 'true',\r\n     *             'monthly_payout_cap': 'false',\r\n     *             'daily_cap': 'true',\r\n     *             'daily_payout_cap': 'true',\r\n     *             'hourly_cap': 'true',\r\n     *             'hourly_payout_cap': 'true',\r\n     *             'concurrency_cap': 'true',\r\n     *             'user_id': '1',\r\n     *             'campaign_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Payout Setting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-publisher-payout-settings": {
            "get": {
                "tags": [
                    "Publisher Payout Setting"
                ],
                "summary": "Get Publisher Payout Settings",
                "description": "Get Publisher Payout Settings",
                "operationId": "getCampaignPublisherPayoutSettings",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Payout Settings has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'publisher_payout_setting': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'payout_type': 'fixed amount',\r\n     *             'payout_on': 'call type',\r\n     *             'length': '5',\r\n     *             'payout_amount': '10',\r\n     *             'revshare_payout_limits': true,\r\n     *             'min': 0,\r\n     *             'max': 1,\r\n     *             'duplicate_payouts': 'time limits',\r\n     *             'days': '10',\r\n     *             'hours': '5',\r\n     *             'payout_hours': 'true',\r\n     *             'open_time': '10:45:00',\r\n     *             'close_time': '10:50:00',\r\n     *             'start_break_time': '12:30:02',\r\n     *             'break_duration': 30 min',\r\n     *             'time_zone': '+GMT Canada',\r\n     *             'limit_payout': 'true',\r\n     *             'global_cap': 'false',\r\n     *             'global_payout_cap': 'false',\r\n     *             'monthly_cap': 'true',\r\n     *             'monthly_payout_cap': 'false',\r\n     *             'daily_cap': 'true',\r\n     *             'daily_payout_cap': 'true',\r\n     *             'hourly_cap': 'true',\r\n     *             'hourly_payout_cap': 'true',\r\n     *             'concurrency_cap': 'true',\r\n     *             'user_id': '1',\r\n     *             'campaign_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Payout Setting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/my-publisher-payout-setting": {
            "get": {
                "tags": [
                    "Publisher Payout Setting"
                ],
                "summary": "Get Publisher Payout Setting by current user",
                "description": "Get Publisher Payout Setting by current user",
                "operationId": "getPublisherPayoutByuserId",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Payout Setting has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'publisher_payout_setting': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'payout_type': 'fixed amount',\r\n     *             'payout_on': 'call type',\r\n     *             'length': '5',\r\n     *             'payout_amount': '10',\r\n     *             'revshare_payout_limit': true,\r\n     *             'min': 0,\r\n     *             'max': 1,\r\n     *             'duplicate_payouts': 'time limits',\r\n     *             'days': '10',\r\n     *             'hours': '5',\r\n     *             'payout_hours': 'true',\r\n     *             'open_time': '10:45:00',\r\n     *             'close_time': '10:50:00',\r\n     *             'start_break_time': '12:30:02',\r\n     *             'break_duration': '30 min',\r\n     *             'time_zone': '+GMT Canada',\r\n     *             'limit_payout': 'true',\r\n     *             'global_cap': 'false',\r\n     *             'global_payout_cap': 'false',\r\n     *             'monthly_cap': 'true',\r\n     *             'monthly_payout_cap': 'false',\r\n     *             'daily_cap': 'true',\r\n     *             'daily_payout_cap': 'true',\r\n     *             'hourly_cap': 'true',\r\n     *             'hourly_payout_cap': 'true',\r\n     *             'concurrency_cap': 'true',\r\n     *             'user_id': '1',\r\n     *             'campaign_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Payout Setting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-publisher-payout-setting": {
            "put": {
                "tags": [
                    "Publisher Payout Setting"
                ],
                "summary": "Update Publisher Payout Setting by uuid",
                "description": "Update Publisher Payout Setting",
                "operationId": "updateCampaignPublisherPayoutSetting",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "Update Publisher Payout Setting by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                    }
                ],
                "requestBody": {
                    "description": "Pass Publisher Payout Setting data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "payout_type": {
                                        "type": "enum",
                                        "format": "payout_type",
                                        "example": "fixed amount/revshare percentage"
                                    },
                                    "payout_on": {
                                        "type": "string",
                                        "format": "payout_on",
                                        "example": "call length"
                                    },
                                    "length": {
                                        "type": "integer",
                                        "format": "length",
                                        "example": "5.5"
                                    },
                                    "payout_amount": {
                                        "type": "integer",
                                        "format": "payout_amount",
                                        "example": "100"
                                    },
                                    "revshare_payout_limits": {
                                        "type": "boolean",
                                        "format": "revshare_payout_limits",
                                        "example": "true"
                                    },
                                    "min": {
                                        "type": "integer",
                                        "format": "min",
                                        "example": "0"
                                    },
                                    "max": {
                                        "type": "integer",
                                        "format": "max",
                                        "example": "1"
                                    },
                                    "duplicate_payouts": {
                                        "type": "enum",
                                        "format": "duplicate_payouts",
                                        "example": "Disable/Enable/Time Limits"
                                    },
                                    "days": {
                                        "type": "integer",
                                        "format": "days",
                                        "example": "5"
                                    },
                                    "hours": {
                                        "type": "integer",
                                        "format": "hours",
                                        "example": "5.5"
                                    },
                                    "payout_hours": {
                                        "type": "boolean",
                                        "format": "payout_hours",
                                        "example": "true/false"
                                    },
                                    "open_time": {
                                        "type": "time",
                                        "format": "open_time",
                                        "example": "10:45:00"
                                    },
                                    "close_time": {
                                        "type": "time",
                                        "format": "close_time",
                                        "example": "10:50:00"
                                    },
                                    "start_break_time": {
                                        "type": "time",
                                        "format": "start_break_time",
                                        "example": "12:30:02"
                                    },
                                    "break_duration": {
                                        "type": "time",
                                        "format": "break_duration",
                                        "example": "30 min"
                                    },
                                    "time_zone": {
                                        "type": "string",
                                        "format": "time_zone",
                                        "example": "+GMT Canada"
                                    },
                                    "limit_payout": {
                                        "type": "boolean",
                                        "format": "limit_payout",
                                        "example": "true/false"
                                    },
                                    "global_cap": {
                                        "type": "boolean",
                                        "format": "global_cap",
                                        "example": "true/false"
                                    },
                                    "global_payout_cap": {
                                        "type": "boolean",
                                        "format": "global_payout_cap",
                                        "example": "true/false"
                                    },
                                    "monthly_cap": {
                                        "type": "boolean",
                                        "format": "monthly_cap",
                                        "example": "true/false"
                                    },
                                    "monthly_payout_cap": {
                                        "type": "boolean",
                                        "format": "monthly_payout_cap",
                                        "example": "true/false"
                                    },
                                    "daily_cap": {
                                        "type": "boolean",
                                        "format": "daily_cap",
                                        "example": "true/false"
                                    },
                                    "daily_payout_cap": {
                                        "type": "boolean",
                                        "format": "daily_payout_cap",
                                        "example": "true/false"
                                    },
                                    "hourly_cap": {
                                        "type": "boolean",
                                        "format": "hourly_cap",
                                        "example": "true/false"
                                    },
                                    "hourly_payout_cap": {
                                        "type": "boolean",
                                        "format": "hourly_payout_cap",
                                        "example": "true/false"
                                    },
                                    "concurrency_cap": {
                                        "type": "boolean",
                                        "format": "concurrency_cap",
                                        "example": "true/false"
                                    },
                                    "user_uuid": {
                                        "type": "string",
                                        "format": "user_uuid",
                                        "example": "5966ac42-2b31-4aeb-ad95-fec77cfc6154"
                                    },
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "5966ac42-2b31-4aeb-ad95-fec77cfc6154"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Payout Setting has been Updated Successfully!',\r\n     *         'data': {\r\n     *          'publisher_payout_setting': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'payout_type': 'fixed amount',\r\n     *             'payout_on': 'call type',\r\n     *             'length': '5',\r\n     *             'payout_amount': '10',\r\n     *             'revshare_payout_limits': true,\r\n     *             'min': 0,\r\n     *             'max': 1,\r\n     *             'duplicate_payouts': 'time limits',\r\n     *             'days': '10',\r\n     *             'hours': '5',\r\n     *             'payout_hours': 'true',\r\n     *             'open_time': '10:45:00',\r\n     *             'close_time': '10:50:00',\r\n     *             'start_break_time': '12:30:02',\r\n     *             'break_duration': '30 min',\r\n     *             'time_zone': '+GMT Canada',\r\n     *             'limit_payout': 'true',\r\n     *             'global_cap': 'false',\r\n     *             'global_payout_cap': 'false',\r\n     *             'monthly_cap': 'true',\r\n     *             'monthly_payout_cap': 'false',\r\n     *             'daily_cap': 'true',\r\n     *             'daily_payout_cap': 'true',\r\n     *             'hourly_cap': 'true',\r\n     *             'hourly_payout_cap': 'true',\r\n     *             'concurrency_cap': 'true',\r\n     *             'user_id': '1',\r\n     *             'campaign_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Payout Setting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/delete-publisher-payout-settings": {
            "delete": {
                "tags": [
                    "Publisher Payout Setting"
                ],
                "summary": "Delete Publisher Payout Setting",
                "description": "Delete existing Publisher Payout Setting",
                "operationId": "deleteCampaignPublisherPayoutSetting",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Payout Setting has been Deleted Successfully!',\r\n     *         'data': {\r\n     *          'publisher_payout_setting': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'payout_type': 'fixed amount',\r\n     *             'payout_on': 'call type',\r\n     *             'length': '5',\r\n     *             'payout_amount': '10',\r\n     *             'revshare_payout_limits': true,\r\n     *             'min': 0,\r\n     *             'max': 1,\r\n     *             'duplicate_payouts': 'time limits',\r\n     *             'days': '10',\r\n     *             'hours': '5',\r\n     *             'payout_hours': 'true',\r\n     *             'open_time': '10:45:00',\r\n     *             'close_time': '10:50:00',\r\n     *             'start_break_time': '12:30:02',\r\n     *             'break_duration': '30 min',\r\n     *             'time_zone': '+GMT Canada',\r\n     *             'limit_payout': 'true',\r\n     *             'global_cap': 'false',\r\n     *             'global_payout_cap': 'false',\r\n     *             'monthly_cap': 'true',\r\n     *             'monthly_payout_cap': 'false',\r\n     *             'daily_cap': 'true',\r\n     *             'daily_payout_cap': 'true',\r\n     *             'hourly_cap': 'true',\r\n     *             'hourly_payout_cap': 'true',\r\n     *             'concurrency_cap': 'true',\r\n     *             'user_id': '1',\r\n     *             'campaign_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Payout Setting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-campaign-registration": {
            "post": {
                "tags": [
                    "Campaign Registration"
                ],
                "summary": "Create Campaign Registration",
                "description": "Create Campaign Registration",
                "operationId": "createCampaignRegistration",
                "requestBody": {
                    "description": "Pass Campaign Registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username"
                                ],
                                "properties": {
                                    "payout_type": {
                                        "type": "enum",
                                        "format": "payout_type",
                                        "example": "fixed amount/revshare percentage"
                                    },
                                    "username": {
                                        "type": "string",
                                        "format": "username",
                                        "example": "hamza01"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "hamza@gmail.com"
                                    },
                                    "title": {
                                        "type": "string",
                                        "format": "title",
                                        "example": "sales person"
                                    },
                                    "profile_picture": {
                                        "type": "string",
                                        "format": "profile_picture",
                                        "example": "test"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "address",
                                        "example": "test address"
                                    },
                                    "status": {
                                        "type": "enum",
                                        "format": "status",
                                        "example": "active/inactive"
                                    },
                                    "working_state": {
                                        "type": "string",
                                        "format": "working_state",
                                        "example": "test state"
                                    },
                                    "working_hours": {
                                        "type": "string",
                                        "format": "working_hours",
                                        "example": "true/false"
                                    },
                                    "open_time": {
                                        "type": "time",
                                        "format": "open_time",
                                        "example": "12:30:02"
                                    },
                                    "close_time": {
                                        "type": "time",
                                        "format": "close_time",
                                        "example": "12:40:05"
                                    },
                                    "time_zone": {
                                        "type": "string",
                                        "format": "time_zone",
                                        "example": "+GST canada"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "format": "user_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Registration has been created successfully!',\r\n     *       'data': {\r\n     *          'campaign_registration': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'username': 'hamza01',\r\n     *             'email': 'hamza@gmail.com',\r\n     *             'title': 'test title',\r\n     *             'profile_picture', 'test.jpg',\r\n     *             'address': test address,\r\n     *             'status': 'active',\r\n     *             'working_state': 'test state',\r\n     *             'working_hours', 'true',\r\n     *             'open_time', '12:30:02',\r\n     *             'close_time', '12:40:05',\r\n     *             'time_zone', '+GST Canada',\r\n     *             'user_id', '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Registration not created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-campaign-registration": {
            "put": {
                "tags": [
                    "Campaign Registration"
                ],
                "summary": "Update Campaign Registration by uuid",
                "description": "Update Campaign Registration",
                "operationId": "updateCampaignRegistration",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "Update Campaign Registration by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                    }
                ],
                "requestBody": {
                    "description": "Pass Campaign Registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "format": "username",
                                        "example": "hamza01"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "hamza@gmail.com"
                                    },
                                    "title": {
                                        "type": "string",
                                        "format": "title",
                                        "example": "test title"
                                    },
                                    "profile_picture": {
                                        "type": "string",
                                        "format": "profile_picture",
                                        "example": "test.jpg"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "address",
                                        "example": "test address"
                                    },
                                    "status": {
                                        "type": "enum",
                                        "format": "status",
                                        "example": "active/inactive"
                                    },
                                    "working_state": {
                                        "type": "string",
                                        "format": "working_state",
                                        "example": "test state"
                                    },
                                    "working_hours": {
                                        "type": "boolean",
                                        "format": "working_hours",
                                        "example": "true/false"
                                    },
                                    "open_time": {
                                        "type": "time",
                                        "format": "open_time",
                                        "example": "12:30:02"
                                    },
                                    "close_time": {
                                        "type": "time",
                                        "format": "close_time",
                                        "example": "12:40:05"
                                    },
                                    "time_zone": {
                                        "type": "string",
                                        "format": "time_zone",
                                        "example": "+GST Canada"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "format": "user_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Registration has been updated successfully!',\r\n     *         'data': {\r\n     *          'campaign_registration': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'username': 'hamza01',\r\n     *             'email': 'hamza@gmail.com',\r\n     *             'title': 'test title',\r\n     *             'profile_picture': 'test',\r\n     *             'address': 'test address',\r\n     *             'status': 'active/inactive',\r\n     *             'working_state': 'test state',\r\n     *             'working_hours': 'true',\r\n     *             'open_time': '12:30:02',\r\n     *             'close_time': '12:40:05',\r\n     *             'time_zone': '+GST Canada',\r\n     *             'user_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Registration not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-campaign-registration": {
            "get": {
                "tags": [
                    "Campaign Registration"
                ],
                "summary": "Get Campaign Registrations",
                "description": "Get Campaign Registrations",
                "operationId": "getCampaignRegistrations",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "sort campaign registration by username param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "hamza01"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort campaign registration by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort campaign registrations by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Registrations has been fetched successfully!',\r\n     *       'data': {\r\n     *          'campaign_registration': {\r\n     *              'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *              'username': 'hamza01',\r\n     *              'email': 'hamza@gmail.com',\r\n     *              'title': 'test title',\r\n     *              'profile_picture': 'test.jpg',\r\n     *              'address': 'test address',\r\n     *              'status': 'active',\r\n     *              'working_state': 'test state',\r\n     *              'working_hours': 'true',\r\n     *              'open_time': '12:30:02',\r\n     *              'close_time': '12:40:05',\r\n     *              'time_zone': '+GST Canada',\r\n     *              'user_id': '1',\r\n     *              'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Registration not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-single-campaign-registration": {
            "get": {
                "tags": [
                    "Campaign Registration"
                ],
                "summary": "Get Single Campaign Registration by uuid",
                "description": "Get Single Campaign Registration",
                "operationId": "getSingleCampaignRegistration",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "sort campaign registration by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1ec65f17-25cd-413e-b097-73acb6b5b4e2"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Registration has been fetched successfully!',\r\n     *       'data': {\r\n     *          'campaign_registration': {\r\n     *              'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *              'username': 'hamza01',\r\n     *              'email': 'hamza@gmail.com',\r\n     *              'title': 'sales person',\r\n     *              'profile_picture': 'test',\r\n     *              'address': 'test address',\r\n     *              'status': 'active',\r\n     *              'working_state': 'test state',\r\n     *              'working_hours': 'true',\r\n     *              'open_time': '12:30:02',\r\n     *              'close_time': '12:40:05',\r\n     *              'time_zone': '+GST Canada',\r\n     *              'user_id': '1',\r\n     *              'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Registration not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/delete-campaign-registration": {
            "delete": {
                "tags": [
                    "Campaign Registration"
                ],
                "summary": "Delete Campaign Registration by uuid",
                "description": "Delete existing Campaign Registration by uuid param",
                "operationId": "deleteCampaignRegistration",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "delete campaign registration by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1ec65f17-25cd-413e-b097-73acb6b5b4e2"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Registration has been deleted successfully!',\r\n     *         'data': {\r\n     *          'campaign_registration': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *              'username': 'hamza01',\r\n     *              'email': 'hamza@gmail.com',\r\n     *              'title': 'sales person',\r\n     *              'profile_picture': 'test.jpg',\r\n     *              'address': 'test address',\r\n     *              'status': 'active',\r\n     *              'working_state': 'test state',\r\n     *              'working_hours': 'true',\r\n     *              'open_time': '12:30:02',\r\n     *              'close_time': '12:40:05',\r\n     *              'time_zone': '+GST Cananda',\r\n     *              'user_id': '1',\r\n     *              'created_at': '2022-06-04T18:32:20.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Registration Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-campaign-reporting": {
            "post": {
                "tags": [
                    "Campaign Reporting"
                ],
                "summary": "Create Campaign Reporting",
                "description": "Create Campaign Reporting",
                "operationId": "createCampaignReporting",
                "requestBody": {
                    "description": "Pass Campaign Reporting data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "campaign_uuid"
                                ],
                                "properties": {
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "call_date": {
                                        "type": "string",
                                        "format": "call_date",
                                        "example": "2022-11-24"
                                    },
                                    "profit": {
                                        "type": "number",
                                        "format": "profit",
                                        "example": "5.00"
                                    },
                                    "campaign": {
                                        "type": "string",
                                        "format": "campaign",
                                        "example": "test campaign"
                                    },
                                    "publisher": {
                                        "type": "string",
                                        "format": "publisher",
                                        "example": "test publisher"
                                    },
                                    "caller_id": {
                                        "type": "string",
                                        "format": "caller_id",
                                        "example": "+121233344"
                                    },
                                    "dialed": {
                                        "type": "string",
                                        "format": "dialed",
                                        "example": "+121233344"
                                    },
                                    "time_to_call": {
                                        "type": "time",
                                        "format": "time_to_call",
                                        "example": "05:12:20"
                                    },
                                    "duplicate": {
                                        "type": "boolean",
                                        "format": "duplicate",
                                        "example": "true/false"
                                    },
                                    "hangup": {
                                        "type": "enum",
                                        "format": "hangup",
                                        "example": "system/caller/target"
                                    },
                                    "time_to_connect": {
                                        "type": "time",
                                        "format": "time_to_connect",
                                        "example": "05:12:20"
                                    },
                                    "target": {
                                        "type": "string",
                                        "format": "target",
                                        "example": "test target"
                                    },
                                    "revenue": {
                                        "type": "number",
                                        "format": "revenue",
                                        "example": "4.00"
                                    },
                                    "payout": {
                                        "type": "number",
                                        "format": "payout",
                                        "example": "2.00"
                                    },
                                    "duration": {
                                        "type": "time",
                                        "format": "duration",
                                        "example": "05:12:20"
                                    },
                                    "recording": {
                                        "type": "integer",
                                        "format": "recording",
                                        "example": "20"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Reporting has been created successfully!',\r\n     *       'data': {\r\n     *          'campaignReporting': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'campaign_id': '1',\r\n     *              'call_date': '2022-11-24',\r\n     *              'profit': '5.00',\r\n     *              'campaign': 'test campaign',\r\n     *              'publisher': 'test publisher',\r\n     *              'caller_id': '+1123545454',\r\n     *              'dialed': '+112234545',\r\n     *              'time_to_call': '04:13:20',\r\n     *              'duplicate': 'true',\r\n     *              'hangup': 'system',\r\n     *              'time_to_connect': '04:13:20',\r\n     *              'targert': 'test target',\r\n     *              'revenue': '5.00',\r\n     *              'payout': '5.00',\r\n     *              'duration': '03:12:38',\r\n     *              'recording': '40',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Reporting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-campaign-reporting": {
            "get": {
                "tags": [
                    "Campaign Reporting"
                ],
                "summary": "Get Campaign Reporting",
                "description": "Get Campaign Reporting",
                "operationId": "getCampaignReporting",
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "query",
                        "description": "sort campaign reporting by campaign param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test campaign"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort campaign reporting by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort campaign reporting by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Reporting has been fetched successfully!',\r\n     *       'data': {\r\n     *          'campaignReporting': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'campaign_id': '1',\r\n     *              'call_date': '2022-11-24',\r\n     *              'profit': '5.00',\r\n     *              'campaign': 'test campaign',\r\n     *              'publisher': 'test publisher',\r\n     *              'caller_id': '+1123545454',\r\n     *              'dialed': '+112234545',\r\n     *              'time_to_call': '04:13:20',\r\n     *              'duplicate': 'true',\r\n     *              'hangup': 'system',\r\n     *              'time_to_connect': '04:13:20',\r\n     *              'targert': 'test target',\r\n     *              'revenue': '5.00',\r\n     *              'payout': '5.00',\r\n     *              'duration': '03:12:38',\r\n     *              'recording': '40',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Reporting not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-campaign-users": {
            "get": {
                "tags": [
                    "Campaign Reporting"
                ],
                "summary": "Get Campaign Users",
                "description": "Get Campaign Users",
                "operationId": "getCampaignUsers",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Users has been fetched successfully!',\r\n     *       'data': {\r\n     *          'users': {\r\n     *              'clients': [\r\n     *                  {\r\n     *                      'name': 'Publisher',\r\n     *                      'uuid': '944b22d5-9818-4711-b6b0-d9ff125ae246'\r\n     *                  },\r\n     *                  {\r\n     *                      'name': 'Alice',\r\n     *                      'uuid': 'f09ffc43-42b9-4fee-b0fb-bd867687867e'\r\n     *                  },\r\n     *                  {\r\n     *                      'name': 'Client',\r\n     *                      'uuid': 'cd9330c5-5f63-477b-98f6-19adae874021'\r\n     *                  }\r\n     *              ],\r\n     *              'publishers': [\r\n     *                  {\r\n     *                      'name': 'Publisher',\r\n     *                      'uuid': '944b22d5-9818-4711-b6b0-d9ff125ae246'\r\n     *                  },\r\n     *                  {\r\n     *                      'name': 'Client',\r\n     *                      'uuid': 'cd9330c5-5f63-477b-98f6-19adae874021'\r\n     *                  }\r\n     *              ],\r\n     *              'campaigns': [\r\n     *                  {\r\n     *                      'name': 'demo campaign',\r\n     *                      'uuid': '8bf8bdae-16a7-47dc-bda1-9d3564b3122a'\r\n     *                  },\r\n     *                  {\r\n     *                      'name': 'test campaign',\r\n     *                      'uuid': '8bf8bdae-16a7-47dc-bda1-9d3564b3122b'\r\n     *                  },\r\n     *                  {\r\n     *                      'name': 'menu campaign',\r\n     *                      'uuid': '8bf8bdae-16a7-47dc-bda1-9d3564b3122c'\r\n     *                  }\r\n     *              ],\r\n     *              'targets': [\r\n     *                  {\r\n     *                      'name': 'test-target',\r\n     *                      'uuid': '4e18b426-42aa-4fef-95de',\r\n     *                      'destination': '+03224869866'\r\n     *                  },\r\n     *                  {\r\n     *                      'name': 'demo target',\r\n     *                      'uuid': '4e18b426-42aa',\r\n     *                      'destination': '+123456789'\r\n     *                  }\r\n     *              ],\r\n     *              'caller_ids': [\r\n     *                  {\r\n     *                      'caller_id': '+923077020163'\r\n     *                  },\r\n     *                  {\r\n     *                      'caller_id': '+16473897807'\r\n     *                  },\r\n     *                  {\r\n     *                      'caller_id': '+3077020163'\r\n     *                  }\r\n     *              ],\r\n     *              'dialed_numbers': [\r\n     *                  {\r\n     *                      'dialed': '+16402215806'\r\n     *                  },\r\n     *                  {\r\n     *                      'dialed': '+12897960920'\r\n     *                  }\r\n     *              ],\r\n     *              'call_durations': [\r\n     *                  {\r\n     *                      'duration': '00:00:39'\r\n     *                  },\r\n     *                  {\r\n     *                      'duration': '00:00:55'\r\n     *                  },\r\n     *                  {\r\n     *                      'duration': '00:00:29'\r\n     *                  },\r\n     *                  {\r\n     *                      'duration': '00:00:23'\r\n     *                  }\r\n     *              ],\r\n     *              'time_to_connect': [\r\n     *                  {\r\n     *                      'time_to_connect': '00:00:18'\r\n     *                  },\r\n     *                  {\r\n     *                      'time_to_connect': '00:00:16'\r\n     *                  },\r\n     *                  {\r\n     *                      'time_to_connect': '00:00:11'\r\n     *                  },\r\n     *                  {\r\n     *                      'time_to_connect': '00:00:15'\r\n     *                  }\r\n     *              ],\r\n     *              'time_to_call': [],\r\n     *              'revenue': [\r\n     *                  {\r\n     *                      'revenue': 50\r\n     *                  },\r\n     *                  {\r\n     *                      'revenue': 30\r\n     *                  }\r\n     *              ],\r\n     *              'payout': [\r\n     *                  {\r\n     *                     'payout': 15\r\n     *                  },\r\n     *                  {\r\n     *                      'payout': 25\r\n     *                  }\r\n     *              ],\r\n     *              'profit': [\r\n     *                  {\r\n     *                      'profit': 50\r\n     *                  },\r\n     *                  {\r\n     *                      'profit': 15\r\n     *                  },\r\n     *                  {\r\n     *                      'profit': -15\r\n     *                  },\r\n     *                  {\r\n     *                      'profit': -25\r\n     *                  }\r\n     *              ]\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-timeline": {
            "get": {
                "tags": [
                    "Campaign Reporting"
                ],
                "summary": "Get Timeline",
                "description": "Get Timeline",
                "operationId": "getTimeline",
                "requestBody": {
                    "description": "Pass Timeline data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "format": "type",
                                        "example": "today/yesterday/lastTwoDays/lastSevenDays/thisWeek/lastWeek/last30Days/thisMonth/lastMonth/last6Month/lastYear/weekly/range"
                                    },
                                    "user_uuid": {
                                        "type": "string",
                                        "format": "user_uuid",
                                        "example": "4e18b426-42aa-4fef-95de-053b29456f69"
                                    },
                                    "time_zone": {
                                        "type": "string",
                                        "format": "time_zone",
                                        "example": "Europe/Andorra"
                                    },
                                    "dateRange": {
                                        "type": "string",
                                        "format": "dateRange",
                                        "example": "{'startDate':'2022-12-18T19:00:00.000Z','endDate':'2022-12-19T06:59:59.999Z'}"
                                    },
                                    "customFilters": {
                                        "type": "string",
                                        "format": "customFilters",
                                        "example": "[{'type':'Name/ID','filter_key':'client_name','operator':'contains','filter_value':'clie','operation':''},{'type':'Name/ID','filter_key':'publisher_name','operator':'contains','filter_value':'pub','operation':'or'}]"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Timeline has been fetched successfully!',\r\n     *       'data': {\r\n     *          'timeLine': [\r\n     *             {\r\n     *                 'count':1,\r\n     *                 'Date': '2022-12-20'\r\n     *             },\r\n     *             {\r\n     *                 'count':2,\r\n     *                 'Date': '2022-12-22'\r\n     *             },\r\n     *             {\r\n     *                 'count':1,\r\n     *                 'Date': '2022-12-24'\r\n     *             },\r\n     *           ],\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Timeline not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-performance-summary": {
            "get": {
                "tags": [
                    "Campaign Reporting"
                ],
                "summary": "Get Performance Summary",
                "description": "Get Performance Summary",
                "operationId": "getPerformanceSummary",
                "requestBody": {
                    "description": "Pass Performance Summary Data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "format": "type",
                                        "example": "today/yesterday/lastTwoDays/lastSevenDays/thisWeek/lastWeek/last30Days/thisMonth/lastMonth/last6Month/lastYear/weekly/range"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Performance Summary has been fetched successfully!',\r\n     *       'data': {\r\n     *          'performanceSummary': [\r\n     *             {\r\n     *                  'id': 3,\r\n     *                  'uuid': '8bf8bdae-16a7-47dc-bda1-9d3564b3122c',\r\n     *                  'parent_call_sid': 'CAf27b30976edb8fbf3cbb168ab2972fbf',\r\n     *                  'call_sid': 'CA3942857e484a97fbe0567ee790ff3cbe',\r\n     *                  'call_date': 'Dec 06 13:59:25 PM',\r\n     *                  'campaign_id': 3,\r\n     *                  'publisher_id': 4,\r\n     *                  'client_id': 4,\r\n     *                  'caller_id': '+3077020163',\r\n     *                  'dialed': '+12897960920',\r\n     *                  'time_to_call': null,\r\n     *                  'duplicate': 1,\r\n     *                  'hangup_reason': null,\r\n     *                  'time_to_connect': '00:00:15',\r\n     *                  'target_id': 1,\r\n     *                  'revenue': 0,\r\n     *                  'payout': 25,\r\n     *                  'duration': '00:00:23',\r\n     *                  'recording': 0,\r\n     *                  'profit': -25,\r\n     *                  'hangup': 'system',\r\n     *                  'caller_country': 'GR',\r\n     *                  'call_status': 'completed',\r\n     *                  'initiated_at': '2022-12-06 13:59:25',\r\n     *                  'ringing_at': '2022-12-06 13:59:29',\r\n     *                  'answered_at': '2022-12-06 13:59:40',\r\n     *                  'completed_at': '2022-12-06 14:00:03',\r\n     *                  'created_at': '2022-12-05T07:45:24.000000Z',\r\n     *                  'step': 6,\r\n     *                  'user_id': 4,\r\n     *                  'campaign_name': 'menu campaign',\r\n     *                  'name': 'Client',\r\n     *                  'phone_no': '+13251445665',\r\n     *                  'title': 'test',\r\n     *                  'email': 'client@gmail.com',\r\n     *                  'address': 'canada',\r\n     *                  'country': 'Canada',\r\n     *                  'state': 'Alberta',\r\n     *                  'city': 'torono',\r\n     *                  'zipcode': null,\r\n     *                  'is_published': 0,\r\n     *                  'service_id': 5,\r\n     *                  'category_id': 1,\r\n     *                  'vertical_id': 3,\r\n     *                  'language': 'English',\r\n     *                  'currency': 'Dollar',\r\n     *                  'time_zone': 'GST',\r\n     *                  'start_date': '2022-12-05',\r\n     *                  'start_time': '23:59:00',\r\n     *                  'end_date': null,\r\n     *                  'end_time': null,\r\n     *                  'descripiton': 'test description',\r\n     *                  'website_url': null,\r\n     *                  'deeplink': null,\r\n     *                  'blog_url': null,\r\n     *                  'facebook_url': null,\r\n     *                  'twitter_url': null,\r\n     *                  'linkedin_url': null,\r\n     *                  'client_image': null,\r\n     *                  'agent_image': null,\r\n     *                  'publisher_image': null,\r\n     *                  'cost_per_call': null,\r\n     *                  'client_duration_type': null,\r\n     *                  'client_per_call_duration': null,\r\n     *                  'payout_per_call': null,\r\n     *                  'publisher_duration_type': null,\r\n     *                  'publisher_per_call_duration': null,\r\n     *                  'agent_duration_type': null,\r\n     *                  'campaign_rate': null,\r\n     *                  'air_time': 0,\r\n     *                  'paid_air_time_by': null,\r\n     *                  'air_time_price': null,\r\n     *                  'call_recording_price': null,\r\n     *                  'transcripts': 0,\r\n     *                  'transcript_price': null,\r\n     *                  'call_storage': 0,\r\n     *                  'call_storage_price': null,\r\n     *                  'routing': 'standard',\r\n     *                  'addressType': null,\r\n     *                  'ivr_id': null\r\n     *             },\r\n     *           ],\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Performance Summary not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-performance-report": {
            "get": {
                "tags": [
                    "Campaign Reporting"
                ],
                "summary": "Get Performance Report",
                "description": "Get Performance Report",
                "operationId": "getPerformanceReport",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Performance Summary has been fetched successfully!',\r\n     *       'data': {\r\n     *          'performanceReport': [\r\n     *             {\r\n     *             },\r\n     *           ],\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Performance Report not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-top-performers": {
            "get": {
                "tags": [
                    "Campaign Reporting"
                ],
                "summary": "Get Top Performers",
                "description": "Get Top Performers",
                "operationId": "getTopPerformers",
                "requestBody": {
                    "description": "Pass Top Performers data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "format": "type",
                                        "example": "publisher/campaign/target"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Top Performers has been fetched successfully!',\r\n     *       'data': {\r\n     *          'topPerformers': [\r\n     *             {\r\n     *                  'name': 'demo campaign',\r\n     *                  'converted': 2,\r\n     *                  'calls': 4,\r\n     *                  'payout': 15,\r\n     *                  'revenue': 80,\r\n     *                  'profit': 65,\r\n     *                  'currency': 'Dollar'\r\n     *              },\r\n     *           ],\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Timeline not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-call-count-of-coutries": {
            "get": {
                "tags": [
                    "Campaign Reporting"
                ],
                "summary": "Get Call Countries Count",
                "description": "Get Call Countries Count",
                "operationId": "getCallCountOfCountries",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Call Countries Count has been fetched successfully!',\r\n     *       'data': {\r\n     *          'map': [\r\n     *             {\r\n     *                'CA': 1,\r\n     *                'GR': 3,\r\n     *                'PK': 3\r\n     *              }\r\n     *           ],\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Call Country count not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-utc-list": {
            "get": {
                "tags": [
                    "Campaign Reporting"
                ],
                "summary": "Get UTC List",
                "description": "Get UTC List",
                "operationId": "getUtcList",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'UtcLists has been fetched successfully!',\r\n     *       'data': {\r\n     *          'utcList': [\r\n     *             {\r\n     *                  'timezone': 'Europe/Andorra',\r\n     *                  'dst_offset': 2\r\n     *              },\r\n     *              {\r\n     *                  'timezone': 'Asia/Dubai',\r\n     *                  'dst_offset': 4\r\n     *              },\r\n     *              {\r\n     *                  'timezone': 'Asia/Kabul',\r\n     *                  'dst_offset': 4.5\r\n     *              },\r\n     *              {\r\n     *                  'timezone': 'America/Antigua',\r\n     *                  'dst_offset': -4\r\n     *              },\r\n     *           ],\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utc List not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-campaign-reporting": {
            "post": {
                "tags": [
                    "Campaign Reporting"
                ],
                "summary": "Update Campaign Reporting",
                "description": "Update Campaign Reporting",
                "operationId": "updateCampaignReporting",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "Update Campaign Reporting by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                    }
                ],
                "requestBody": {
                    "description": "Pass Campaign Reporting data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "campaign_uuid"
                                ],
                                "properties": {
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "call_date": {
                                        "type": "string",
                                        "format": "call_date",
                                        "example": "2022-11-24"
                                    },
                                    "profit": {
                                        "type": "number",
                                        "format": "profit",
                                        "example": "5.00"
                                    },
                                    "campaign": {
                                        "type": "string",
                                        "format": "campaign",
                                        "example": "test campaign"
                                    },
                                    "publisher": {
                                        "type": "string",
                                        "format": "publisher",
                                        "example": "test publisher"
                                    },
                                    "caller_id": {
                                        "type": "string",
                                        "format": "caller_id",
                                        "example": "+121233344"
                                    },
                                    "dialed": {
                                        "type": "string",
                                        "format": "dialed",
                                        "example": "+121233344"
                                    },
                                    "time_to_call": {
                                        "type": "time",
                                        "format": "time_to_call",
                                        "example": "05:12:20"
                                    },
                                    "duplicate": {
                                        "type": "boolean",
                                        "format": "duplicate",
                                        "example": "true/false"
                                    },
                                    "hangup": {
                                        "type": "enum",
                                        "format": "hangup",
                                        "example": "system/caller/target"
                                    },
                                    "time_to_connect": {
                                        "type": "time",
                                        "format": "time_to_connect",
                                        "example": "05:12:20"
                                    },
                                    "target": {
                                        "type": "string",
                                        "format": "target",
                                        "example": "test target"
                                    },
                                    "revenue": {
                                        "type": "number",
                                        "format": "revenue",
                                        "example": "4.00"
                                    },
                                    "payout": {
                                        "type": "number",
                                        "format": "payout",
                                        "example": "2.00"
                                    },
                                    "duration": {
                                        "type": "time",
                                        "format": "duration",
                                        "example": "05:12:20"
                                    },
                                    "recording": {
                                        "type": "integer",
                                        "format": "recording",
                                        "example": "20"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Reporting has been updated successfully!',\r\n     *       'data': {\r\n     *          'campaignReporting': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'campaign_id': '1',\r\n     *              'call_date': '2022-11-24',\r\n     *              'profit': '5.00',\r\n     *              'campaign': 'test campaign',\r\n     *              'publisher': 'test publisher',\r\n     *              'caller_id': '+1123545454',\r\n     *              'dialed': '+112234545',\r\n     *              'time_to_call': '04:13:20',\r\n     *              'duplicate': 'true',\r\n     *              'hangup': 'system',\r\n     *              'time_to_connect': '04:13:20',\r\n     *              'targert': 'test target',\r\n     *              'revenue': '5.00',\r\n     *              'payout': '5.00',\r\n     *              'duration': '03:12:38',\r\n     *              'recording': '40',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Reporting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get Categories",
                "description": "Get Categories",
                "operationId": "getCategories",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort category by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test category"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort category by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort category by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Categories has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test category',\r\n     *          'description': 'test description',\r\n     *          'is_active': 'false',\r\n     *          'parent_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Categories Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create Category",
                "description": "Create Category",
                "operationId": "createCategory",
                "requestBody": {
                    "description": "Pass category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test category"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "description",
                                        "example": "test description"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "is_active",
                                        "example": "true/false"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "format": "parent_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Category has been Created Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test category',\r\n     *          'description': 'test description',\r\n     *          'is_active': 'false',\r\n     *          'parent_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories/{category_uuid}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get Category By category_uuid",
                "description": "Get Category By category_uuid",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "name": "category_uuid",
                        "in": "path",
                        "description": "category_uuid of Category",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Category has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test category',\r\n     *          'description': 'test description',\r\n     *          'is_active': 'false',\r\n     *          'parent_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update Category",
                "description": "Update Category",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "category_uuid",
                        "in": "path",
                        "description": "category_uuid of Category",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "requestBody": {
                    "description": "Pass category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test category"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "description",
                                        "example": "test description"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "is_active",
                                        "example": "true/false"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "format": "parent_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Category has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test category',\r\n     *          'description': 'test description',\r\n     *          'is_active': 'false',\r\n     *          'parent_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete existing Category",
                "description": "Delete category",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "category_uuid",
                        "in": "path",
                        "description": "category_uuid of Category",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Category has been Deleted Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test category',\r\n     *          'description': 'test description',\r\n     *          'is_active': 'false',\r\n     *          'parent_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/parent-categories/{parent_id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get Category By parent_id",
                "description": "Get Category By parent_id",
                "operationId": "getCategoryByParentId",
                "parameters": [
                    {
                        "name": "parent_id",
                        "in": "path",
                        "description": "parent_id of Category",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Category has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test category',\r\n     *          'description': 'test description',\r\n     *          'is_active': 'false',\r\n     *          'parent_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories-list": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get Categories List",
                "description": "Get Categories List",
                "operationId": "getCategoriesList",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "sort category by type param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "parent,child,all"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Categories List has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test category',\r\n     *          'description': 'test description',\r\n     *          'is_active': 'false',\r\n     *          'parent_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Categories List Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client-profile-items": {
            "get": {
                "tags": [
                    "Client Profile Item"
                ],
                "summary": "Get Client Profile Item",
                "description": "Get Client Profile Item",
                "operationId": "getClientProfileItem",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort client profile items by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test client profile item"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort client profile items by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort client profile items by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Client Profile Item has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'bussines_name': 'test client profile item',\r\n     *          'bussines_address': 'canada',\r\n     *          'bussines_phone_no': '123456789',\r\n     *          'google_my_bussines': 'google.com/john-doe',\r\n     *          'crunchbase': 'null',\r\n     *          'linkedin': 'linkedin.com/john-doe',\r\n     *          'twitter': 'twitter.com/john-doe',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client-profile-items/{uuid}": {
            "get": {
                "tags": [
                    "Client Profile Item"
                ],
                "summary": "Get Client Profile Item by uuid",
                "description": "Get Bussines Client Profile Item by uuid",
                "operationId": "getClientProfileItemById",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Client Profile Item",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Client Profile Item has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'bussines_name': 'test client profile item',\r\n     *          'bussines_address': 'canada',\r\n     *          'bussines_phone_no': '123456789',\r\n     *          'google_my_bussines': 'google.com/john-doe',\r\n     *          'crunchbase': 'null',\r\n     *          'linkedin': 'linkedin.com/john-doe',\r\n     *          'twitter': 'twitter.com/john-doe',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Client Profile Item"
                ],
                "summary": "Update Client Profile Item by uuid",
                "description": "Update Client Profile Item",
                "operationId": "updateClientProfileItem",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Client Profile Item",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "requestBody": {
                    "description": "Pass Client Profile Item data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "bussines_name": {
                                        "type": "string",
                                        "format": "bussines_name",
                                        "example": "test client profile item"
                                    },
                                    "bussines_address": {
                                        "type": "string",
                                        "format": "bussines_address",
                                        "example": "canada"
                                    },
                                    "bussines_phone_no": {
                                        "type": "string",
                                        "format": "bussines_phone_no",
                                        "example": "+123456789"
                                    },
                                    "google_my_bussines": {
                                        "type": "string",
                                        "format": "google_my_bussines",
                                        "example": "google.com/john-doe"
                                    },
                                    "crunchbase": {
                                        "type": "string",
                                        "format": "crunchbase",
                                        "example": "test"
                                    },
                                    "linkedin": {
                                        "type": "string",
                                        "format": "linkedin",
                                        "example": "linkedin.com/john-doe"
                                    },
                                    "twitter": {
                                        "type": "string",
                                        "format": "twitter",
                                        "example": "twitter.com/john-doe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Client Profile Item has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'bussines_name': 'test client profile item',\r\n     *          'bussines_address': 'canada',\r\n     *          'bussines_phone_no': '123456789',\r\n     *          'google_my_bussines': 'google.com/john-doe',\r\n     *          'crunchbase': 'null',\r\n     *          'linkedin': 'linkedin.com/john-doe',\r\n     *          'twitter': 'twitter.com/john-doe',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Client Profile Item"
                ],
                "summary": "Delete Client Profile Item",
                "description": "Delete existing Client Profile Item",
                "operationId": "deleteClientProfileItem",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Client Profile Item",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Client Profile Item has been Deleted Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test service',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client-profile-item": {
            "get": {
                "tags": [
                    "Client Profile Item"
                ],
                "summary": "Get Client Profile Item By Current User",
                "description": "Get Bussines Client Profile Item by login user",
                "operationId": "getClientProfile",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Client Profile Item has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'client_profile_item': {\r\n     *             'id': 1,\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'bussines_name': 'test client profile item',\r\n     *             'bussines_address': 'canada',\r\n     *             'bussines_phone_no': '123456789',\r\n     *             'google_my_bussines': 'google.com/john-doe',\r\n     *             'crunchbase': 'null',\r\n     *             'linkedin': 'linkedin.com/john-doe',\r\n     *             'twitter': 'twitter.com/john-doe',\r\n     *             'step': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *             'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *             'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-client-profile-items": {
            "post": {
                "tags": [
                    "Client Profile Item"
                ],
                "summary": "Create Client Profile Item",
                "description": "Create Client Profile Item",
                "operationId": "createClientProfileItem",
                "requestBody": {
                    "description": "Pass Client Profile Item data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "bussines_name"
                                ],
                                "properties": {
                                    "bussines_name": {
                                        "type": "string",
                                        "format": "bussines_name",
                                        "example": "test client profile item"
                                    },
                                    "bussines_address": {
                                        "type": "string",
                                        "format": "bussines_address",
                                        "example": "canada"
                                    },
                                    "bussines_phone_no": {
                                        "type": "string",
                                        "format": "bussines_phone_no",
                                        "example": "+123456789"
                                    },
                                    "google_my_bussines": {
                                        "type": "string",
                                        "format": "google_my_bussines",
                                        "example": "google.com/john-doe"
                                    },
                                    "crunchbase": {
                                        "type": "string",
                                        "format": "crunchbase",
                                        "example": "test"
                                    },
                                    "linkedin": {
                                        "type": "string",
                                        "format": "linkedin",
                                        "example": "linkedin.com/john-doe"
                                    },
                                    "twitter": {
                                        "type": "string",
                                        "format": "twitter",
                                        "example": "twitter.com/john-doe"
                                    },
                                    "step": {
                                        "type": "integer",
                                        "format": "step",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Client Profile Item has been Created Successfully!',\r\n     *       'data': {\r\n     *          'client_profile_item': {\r\n     *             'id': 1,\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'bussines_name': 'test client profile item',\r\n     *             'bussines_address': 'canada',\r\n     *             'bussines_phone_no': '123456789',\r\n     *             'google_my_bussines': 'google.com/john-doe',\r\n     *             'crunchbase': 'null',\r\n     *             'linkedin': 'linkedin.com/john-doe',\r\n     *             'twitter': 'twitter.com/john-doe',\r\n     *             'step': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *             'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *             'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-client-profile-items": {
            "post": {
                "tags": [
                    "Client Profile Item"
                ],
                "summary": "Update Client Profile Item of Current User",
                "description": "Update Client Profile Item",
                "operationId": "updateClientProfile",
                "requestBody": {
                    "description": "Pass Client Profile Item data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "bussines_name": {
                                        "type": "string",
                                        "format": "bussines_name",
                                        "example": "test client profile item"
                                    },
                                    "bussines_address": {
                                        "type": "string",
                                        "format": "bussines_address",
                                        "example": "canada"
                                    },
                                    "bussines_phone_no": {
                                        "type": "string",
                                        "format": "bussines_phone_no",
                                        "example": "+123456789"
                                    },
                                    "google_my_bussines": {
                                        "type": "string",
                                        "format": "google_my_bussines",
                                        "example": "google.com/john-doe"
                                    },
                                    "crunchbase": {
                                        "type": "string",
                                        "format": "crunchbase",
                                        "example": "test"
                                    },
                                    "linkedin": {
                                        "type": "string",
                                        "format": "linkedin",
                                        "example": "linkedin.com/john-doe"
                                    },
                                    "twitter": {
                                        "type": "string",
                                        "format": "twitter",
                                        "example": "twitter.com/john-doe"
                                    },
                                    "step": {
                                        "type": "string",
                                        "format": "step",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Client Profile Item has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'client_profile_item': {\r\n     *             'id': 1,\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'bussines_name': 'test client profile item',\r\n     *             'bussines_address': 'canada',\r\n     *             'bussines_phone_no': '123456789',\r\n     *             'google_my_bussines': 'google.com/john-doe',\r\n     *             'crunchbase': 'null',\r\n     *             'linkedin': 'linkedin.com/john-doe',\r\n     *             'twitter': 'twitter.com/john-doe',\r\n     *             'step': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *             'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *             'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-client-services": {
            "post": {
                "tags": [
                    "Client Service"
                ],
                "summary": "Create Client Service",
                "description": "Create Client Service",
                "operationId": "createClientService",
                "requestBody": {
                    "description": "Pass Client Service data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "service_id": {
                                        "type": "string",
                                        "format": "services",
                                        "example": "4677b61d-67b5-46b6-9353-b60c02698e85, d4312726-61a4-4ac0-968d-860fd5762061"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Client Service has been Created Successfully!',\r\n     *       'data': []\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client Service Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-client-services": {
            "post": {
                "tags": [
                    "Client Service"
                ],
                "summary": "Update Client Services of Current User",
                "description": "Update Client Services",
                "operationId": "updateClientServices",
                "requestBody": {
                    "description": "Pass Client Profile Item data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "service_id": {
                                        "type": "string",
                                        "format": "services",
                                        "example": "4677b61d-67b5-46b6-9353-b60c02698e85, d4312726-61a4-4ac0-968d-860fd5762061"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Client Service been Created Successfully!',\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client-services": {
            "get": {
                "tags": [
                    "Client Service"
                ],
                "summary": "Get Client Services of Current User",
                "description": "Get Client Services of Current User",
                "operationId": "getClientServices",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *      [\r\n     *          '4677b61d-67b5-46b6-9353-b60c02698e85',\r\n     *          'd4312726-61a4-4ac0-968d-860fd5762061',\r\n     *          '7f31b0c7-10b4-4e71-a803-040e11a12fd0'\r\n     *      ]\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Services Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client-verticals": {
            "get": {
                "tags": [
                    "Client Vertical"
                ],
                "summary": "Get Client Verticals of Current User",
                "description": "Get Client Verticals of Current User",
                "operationId": "getClientVerticals",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *      [\r\n     *          '4677b61d-67b5-46b6-9353-b60c02698e85',\r\n     *          'd4312726-61a4-4ac0-968d-860fd5762061',\r\n     *          '7f31b0c7-10b4-4e71-a803-040e11a12fd0'\r\n     *      ]\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Vertical Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Client Vertical"
                ],
                "summary": "Create Client Vertical",
                "description": "Create Client Vertical",
                "operationId": "createClientVertical",
                "requestBody": {
                    "description": "Pass Client Vertical data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "format": "user_id",
                                        "example": "auth user (1)"
                                    },
                                    "vertical_id": {
                                        "type": "integer",
                                        "format": "vertical_id",
                                        "example": "1,2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Client Vertical has been Created Successfully!',\r\n     *       'data': []\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client Vertical Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-client-verticals": {
            "post": {
                "tags": [
                    "Client Vertical"
                ],
                "summary": "Update Client Verticals of Current User",
                "description": "Update Client Verticals",
                "operationId": "updateClientVerticals",
                "requestBody": {
                    "description": "Pass Client Verticals data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vertical_id": {
                                        "type": "string",
                                        "format": "vertical_id",
                                        "example": "4677b61d-67b5-46b6-9353-b60c02698e85, d4312726-61a4-4ac0-968d-860fd5762061"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Client Vertical been Updated Successfully!',\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client Vertical Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-campaigns": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "summary": "Create Campaign",
                "description": "Create Campaign",
                "operationId": "createCampaign",
                "requestBody": {
                    "description": "Pass Campaign data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "service_uuid"
                                ],
                                "properties": {
                                    "service_uuid": {
                                        "type": "string",
                                        "format": "service_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign has been Created Successfully!',\r\n     *       'data': {\r\n     *          'campaign': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'step': '1',\r\n     *              'user_uuid': null,\r\n     *              'service_uuid': 'ietritetuirweti',\r\n     *              'name': null,\r\n     *              'phone_no': null,\r\n     *              'title': null,\r\n     *              'email': null,\r\n     *              'address': null,\r\n     *              'country': null,\r\n     *              'state': null,\r\n     *              'city': null,\r\n     *              'zipcode': null,\r\n     *              'service_id': '2',\r\n     *              'category_id': null,\r\n     *              'vertical_id': null,\r\n     *              'language': null,\r\n     *              'currency': null,\r\n     *              'start_date': null,\r\n     *              'start_time': null,\r\n     *              'end_date': null,\r\n     *              'end_time': null,\r\n     *              'description': null,\r\n     *              'website_url': null,\r\n     *              'deeplink': null,\r\n     *              'blog_url': null,\r\n     *              'facebook_url': null,\r\n     *              'twitter_url': null,\r\n     *              'linkedin_url': null,\r\n     *              'publisher_per_call_duration' : 5,\r\n     *              'publisher_per_call': 5.1,\r\n     *              'client_per_call_duration': 5,\r\n     *              'ear_time': 3.4,\r\n     *              'campaign_rate': 30,\r\n     *              'publisher_image': null,\r\n     *              'agnet_image': null,\r\n     *              'client_image': null,\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z',\r\n     *              'agent_payout_setting': {\r\n     *                  'uuid': '8fc0dae2-1113-4423-82eb-6edeb1c4b958',\r\n     *                  'per_call_earning': null,\r\n     *                  'commission': true,\r\n     *                  'commission_type': 'revshare_percentage',\r\n     *                  'payout_on': null,\r\n     *                  'payout_amount': 0,\r\n     *                  'revshare_payout_limits': true,\r\n     *                  'min': null,\r\n     *                  'max': null,\r\n     *                  'duplicate_payouts': 'enable',\r\n     *                  'days': 2,\r\n     *                  'hours': 5,\r\n     *                  'payout_hours': false,\r\n     *                  'open_time': null,\r\n     *                  'close_time': null,\r\n     *                  'start_break_time': '12:30:02',\r\n     *                  'break_duration': '30',\r\n     *                  'time_zone': null,\r\n     *                  'limit_payout': false,\r\n     *                  'global_cap': false,\r\n     *                  'global_payout_cap': false,\r\n     *                  'monthly_cap': false,\r\n     *                  'monthly_payout_cap': false,\r\n     *                  'daily_cap': false,\r\n     *                  'daily_payout_cap': false,\r\n     *                  'hourly_cap': false,\r\n     *                  'hourly_payout_cap': false,\r\n     *                  'concurrency_cap': false,\r\n     *                  'tips': false,\r\n     *                  'bounties_condition': null,\r\n     *                  'bounties_operator': null,\r\n     *                  'bounties_value': null,\r\n     *                  'bonus_type': null,\r\n     *                  'bonus_value': null,\r\n     *                  'user_id': null,\r\n     *                  'campaign_id': 1,\r\n     *                  'created_at': '2022-08-16T10:00:47.000000Z'\r\n     *              },\r\n     *              'campaign_location': [\r\n     *                  {\r\n     *                      'uuid': '135f33b5-841e-47de-9686-dfd0c3eda7fc',\r\n     *                      'country': 'test country',\r\n     *                      'state': 'test state',\r\n     *                      'city_town': 'test city',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:27:39.000000Z'\r\n     *                  },\r\n     *                  {\r\n     *                      'uuid': '0176e268-ee7b-4232-b97f-8fabebdf23e7',\r\n     *                      'country': 'pakistan',\r\n     *                      'state': 'punjab',\r\n     *                      'city_town': 'lahore',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:28:37.000000Z'\r\n     *                  }\r\n     *              ]\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-campaigns": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "summary": "Update Campaign",
                "description": "Update Campaign",
                "operationId": "updateCampaign",
                "requestBody": {
                    "description": "Pass Campaign data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "campaign_uuid,service_uuid"
                                ],
                                "properties": {
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "service_uuid": {
                                        "type": "string",
                                        "format": "service_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'campaign': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'step': '1',\r\n     *              'user_uuid': null,\r\n     *              'service_uuid': 'ietritetuirweti',\r\n     *              'name': null,\r\n     *              'phone_no': null,\r\n     *              'title': null,\r\n     *              'email': null,\r\n     *              'address': null,\r\n     *              'country': null,\r\n     *              'state': null,\r\n     *              'city': null,\r\n     *              'zipcode': null,\r\n     *              'service_id': '2',\r\n     *              'category_id': null,\r\n     *              'vertical_id': null,\r\n     *              'language': null,\r\n     *              'currency': null,\r\n     *              'start_date': null,\r\n     *              'start_time': null,\r\n     *              'end_date': null,\r\n     *              'end_time': null,\r\n     *              'description': null,\r\n     *              'website_url': null,\r\n     *              'deeplink': null,\r\n     *              'blog_url': null,\r\n     *              'facebook_url': null,\r\n     *              'twitter_url': null,\r\n     *              'linkedin_url': null,\r\n     *              'publisher_per_call_duration': 5,\r\n     *              'payout_per_call': 1.5,\r\n     *              'client_per_call_duration': 5,\r\n     *              'ear_time': 3.4,\r\n     *              'campaign_rate': 30,\r\n     *              'publisher_image': null,\r\n     *              'agent_image': null,\r\n     *              'client_image': null,\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z',\r\n     *              'agent_payout_setting': {\r\n     *                  'uuid': '8fc0dae2-1113-4423-82eb-6edeb1c4b958',\r\n     *                  'per_call_earning': null,\r\n     *                  'commission': true,\r\n     *                  'commission_type': 'revshare_percentage',\r\n     *                  'payout_on': null,\r\n     *                  'payout_amount': 0,\r\n     *                  'revshare_payout_limits': true,\r\n     *                  'min': null,\r\n     *                  'max': null,\r\n     *                  'duplicate_payouts': 'enable',\r\n     *                  'days': 2,\r\n     *                  'hours': 5,\r\n     *                  'payout_hours': false,\r\n     *                  'open_time': null,\r\n     *                  'close_time': null,\r\n     *                  'start_break_time': '12:30:02',\r\n     *                  'break_duration': '30',\r\n     *                  'time_zone': null,\r\n     *                  'limit_payout': false,\r\n     *                  'global_cap': false,\r\n     *                  'global_payout_cap': false,\r\n     *                  'monthly_cap': false,\r\n     *                  'monthly_payout_cap': false,\r\n     *                  'daily_cap': false,\r\n     *                  'daily_payout_cap': false,\r\n     *                  'hourly_cap': false,\r\n     *                  'hourly_payout_cap': false,\r\n     *                  'concurrency_cap': false,\r\n     *                  'tips': false,\r\n     *                  'bounties_condition': null,\r\n     *                  'bounties_operator': null,\r\n     *                  'bounties_value': null,\r\n     *                  'bonus_type': null,\r\n     *                  'bonus_value': null,\r\n     *                  'user_id': null,\r\n     *                  'campaign_id': 1,\r\n     *                  'created_at': '2022-08-16T10:00:47.000000Z'\r\n     *              },\r\n     *              'campaign_location': [\r\n     *                  {\r\n     *                      'uuid': '135f33b5-841e-47de-9686-dfd0c3eda7fc',\r\n     *                      'country': 'test country',\r\n     *                      'state': 'test state',\r\n     *                      'city_town': 'test city',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:27:39.000000Z'\r\n     *                  },\r\n     *                  {\r\n     *                      'uuid': '0176e268-ee7b-4232-b97f-8fabebdf23e7',\r\n     *                      'country': 'pakistan',\r\n     *                      'state': 'punjab',\r\n     *                      'city_town': 'lahore',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:28:37.000000Z'\r\n     *                  }\r\n     *              ]\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/search-user/{role}": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "summary": "Search User By Role",
                "description": "Get User By role",
                "operationId": "searchUserByRole",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "role of User",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "agent/publisher/client"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'users': [\r\n     *              {\r\n     *                  'user_uuid': '6e3cd84f-b3e5-4387-87da-0b7654f248d2',\r\n     *                  'name': 'Calista Blevins'\r\n     *              },\r\n     *              {\r\n     *                  'user_uuid': '2b57d931-d73e-41e7-b278-c2272c2513c4',\r\n     *                  'name': 'Elaine Baxter'\r\n     *              },\r\n     *              {\r\n     *                  'user_uuid': 'e611d3f1-3dbc-4130-96fb-210a7ec20b04',\r\n     *                  'name': 'Tara Michael'\r\n     *              }\r\n     *          ]\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-campaign/{uuid}": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "summary": "Get Campaign By Uuid",
                "description": "Get Campaign By uuid",
                "operationId": "getCampaignByUuid",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Campaign",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "6e3cd84f-b3e5-4387-87da-0b7654f248d2"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'campaign': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'step': '1',\r\n     *              'user_uuid': null,\r\n     *              'service_uuid': 'ietritetuirweti',\r\n     *              'name': test campaign,\r\n     *              'phone_no': null,\r\n     *              'title': null,\r\n     *              'email': null,\r\n     *              'address': null,\r\n     *              'country': null,\r\n     *              'state': null,\r\n     *              'city': null,\r\n     *              'zipcode': null,\r\n     *              'service_id': '2',\r\n     *              'category_id': null,\r\n     *              'vertical_id': null,\r\n     *              'language': null,\r\n     *              'currency': null,\r\n     *              'start_date': null,\r\n     *              'start_time': null,\r\n     *              'end_date': null,\r\n     *              'end_time': null,\r\n     *              'description': null,\r\n     *              'website_url': null,\r\n     *              'deeplink': null,\r\n     *              'blog_url': null,\r\n     *              'facebook_url': null,\r\n     *              'twitter_url': null,\r\n     *              'linkedin_url': null,\r\n     *              'publisher_per_call_duration': 5,\r\n     *              'payout_per_call': 1.5,\r\n     *              'client_per_call_duration': 5,\r\n     *              'ear_time': 3.4,\r\n     *              'campaign_rate': 30,\r\n     *              'publisher_image': null,\r\n     *              'agent_image': null,\r\n     *              'client_image': null,\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z',\r\n     *              'agent_payout_setting': {\r\n     *                  'uuid': '8fc0dae2-1113-4423-82eb-6edeb1c4b958',\r\n     *                  'per_call_earning': null,\r\n     *                  'commission': true,\r\n     *                  'commission_type': 'revshare_percentage',\r\n     *                  'payout_on': null,\r\n     *                  'payout_amount': 0,\r\n     *                  'revshare_payout_limits': true,\r\n     *                  'min': null,\r\n     *                  'max': null,\r\n     *                  'duplicate_payouts': 'enable',\r\n     *                  'days': 2,\r\n     *                  'hours': 5,\r\n     *                  'payout_hours': false,\r\n     *                  'open_time': null,\r\n     *                  'close_time': null,\r\n     *                  'start_break_time': '12:30:02',\r\n     *                  'break_duration': '30',\r\n     *                  'time_zone': null,\r\n     *                  'limit_payout': false,\r\n     *                  'global_cap': false,\r\n     *                  'global_payout_cap': false,\r\n     *                  'monthly_cap': false,\r\n     *                  'monthly_payout_cap': false,\r\n     *                  'daily_cap': false,\r\n     *                  'daily_payout_cap': false,\r\n     *                  'hourly_cap': false,\r\n     *                  'hourly_payout_cap': false,\r\n     *                  'concurrency_cap': false,\r\n     *                  'tips': false,\r\n     *                  'bounties_condition': null,\r\n     *                  'bounties_operator': null,\r\n     *                  'bounties_value': null,\r\n     *                  'bonus_type': null,\r\n     *                  'bonus_value': null,\r\n     *                  'user_id': null,\r\n     *                  'campaign_id': 1,\r\n     *                  'created_at': '2022-08-16T10:00:47.000000Z'\r\n     *              },\r\n     *              'campaign_location': [\r\n     *                  {\r\n     *                      'uuid': '135f33b5-841e-47de-9686-dfd0c3eda7fc',\r\n     *                      'country': 'test country',\r\n     *                      'state': 'test state',\r\n     *                      'city_town': 'test city',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:27:39.000000Z'\r\n     *                  },\r\n     *                  {\r\n     *                      'uuid': '0176e268-ee7b-4232-b97f-8fabebdf23e7',\r\n     *                      'country': 'pakistan',\r\n     *                      'state': 'punjab',\r\n     *                      'city_town': 'lahore',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:28:37.000000Z'\r\n     *                  }\r\n     *              ]\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-step-one": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "summary": "Create Step One for Compaign",
                "description": "Create Step One",
                "operationId": "createStepOne",
                "requestBody": {
                    "description": "Pass stepone date for Campaign",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "uuid,name,email,phone,title"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@gmail.com"
                                    },
                                    "phone": {
                                        "type": "integer",
                                        "format": "phone",
                                        "example": "+122334355"
                                    },
                                    "title": {
                                        "type": "string",
                                        "format": "title",
                                        "example": "test title"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign StepOne has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'campaign': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'step': '1',\r\n     *              'user_uuid': null,\r\n     *              'service_uuid': 'ietritetuirweti',\r\n     *              'name': test,\r\n     *              'phone_no': +122334355,\r\n     *              'title': test title,\r\n     *              'email': test@gmail.com,\r\n     *              'address': null,\r\n     *              'country': null,\r\n     *              'state': null,\r\n     *              'city': null,\r\n     *              'zipcode': null,\r\n     *              'service_id': '2',\r\n     *              'category_id': null,\r\n     *              'vertical_id': null,\r\n     *              'language': null,\r\n     *              'currency': null,\r\n     *              'start_date': null,\r\n     *              'start_time': null,\r\n     *              'end_date': null,\r\n     *              'end_time': null,\r\n     *              'description': null,\r\n     *              'website_url': null,\r\n     *              'deeplink': null,\r\n     *              'blog_url': null,\r\n     *              'facebook_url': null,\r\n     *              'twitter_url': null,\r\n     *              'linkedin_url': null,\r\n     *              'publisher_per_call_duration': 5,\r\n     *              'payout_per_call': 1.5,\r\n     *              'client_per_call_duration': 5,\r\n     *              'ear_time': 3.4,\r\n     *              'campaign_rate': 30,\r\n     *              'publisher_image': null,\r\n     *              'agent_image': null,\r\n     *              'client_image': null,\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z',\r\n     *              'agent_payout_setting': {\r\n     *                  'uuid': '8fc0dae2-1113-4423-82eb-6edeb1c4b958',\r\n     *                  'per_call_earning': null,\r\n     *                  'commission': true,\r\n     *                  'commission_type': 'revshare_percentage',\r\n     *                  'payout_on': null,\r\n     *                  'payout_amount': 0,\r\n     *                  'revshare_payout_limits': true,\r\n     *                  'min': null,\r\n     *                  'max': null,\r\n     *                  'duplicate_payouts': 'enable',\r\n     *                  'days': 2,\r\n     *                  'hours': 5,\r\n     *                  'payout_hours': false,\r\n     *                  'open_time': null,\r\n     *                  'close_time': null,\r\n     *                  'start_break_time': '12:30:02',\r\n     *                  'break_duration': '30',\r\n     *                  'time_zone': null,\r\n     *                  'limit_payout': false,\r\n     *                  'global_cap': false,\r\n     *                  'global_payout_cap': false,\r\n     *                  'monthly_cap': false,\r\n     *                  'monthly_payout_cap': false,\r\n     *                  'daily_cap': false,\r\n     *                  'daily_payout_cap': false,\r\n     *                  'hourly_cap': false,\r\n     *                  'hourly_payout_cap': false,\r\n     *                  'concurrency_cap': false,\r\n     *                  'tips': false,\r\n     *                  'bounties_condition': null,\r\n     *                  'bounties_operator': null,\r\n     *                  'bounties_value': null,\r\n     *                  'bonus_type': null,\r\n     *                  'bonus_value': null,\r\n     *                  'user_id': null,\r\n     *                  'campaign_id': 1,\r\n     *                  'created_at': '2022-08-16T10:00:47.000000Z'\r\n     *              },\r\n     *              'campaign_location': [\r\n     *                  {\r\n     *                      'uuid': '135f33b5-841e-47de-9686-dfd0c3eda7fc',\r\n     *                      'country': 'test country',\r\n     *                      'state': 'test state',\r\n     *                      'city_town': 'test city',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:27:39.000000Z'\r\n     *                  },\r\n     *                  {\r\n     *                      'uuid': '0176e268-ee7b-4232-b97f-8fabebdf23e7',\r\n     *                      'country': 'pakistan',\r\n     *                      'state': 'punjab',\r\n     *                      'city_town': 'lahore',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:28:37.000000Z'\r\n     *                  }\r\n     *              ]\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign StepOne Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-step-two": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "summary": "Create Step Two for Compaign",
                "description": "Create Step Two",
                "operationId": "createStepTwo",
                "requestBody": {
                    "description": "Pass steptwo data for Campaign",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "uuid"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "country",
                                        "example": "test country"
                                    },
                                    "state": {
                                        "type": "string",
                                        "format": "state",
                                        "example": "test state"
                                    },
                                    "city": {
                                        "type": "integer",
                                        "format": "city",
                                        "example": "test city"
                                    },
                                    "zipcode": {
                                        "type": "string",
                                        "format": "zipcode",
                                        "example": "test zipcode"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "address",
                                        "example": "test address"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign StepOne has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'campaign': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'step': '1',\r\n     *              'user_uuid': null,\r\n     *              'service_uuid': 'ietritetuirweti',\r\n     *              'name': test,\r\n     *              'phone_no': +122334355,\r\n     *              'title': test title,\r\n     *              'email': test@gmail.com,\r\n     *              'address': test address,\r\n     *              'country': test country,\r\n     *              'state': test state,\r\n     *              'city': test city,\r\n     *              'zipcode': test zipcode,\r\n     *              'service_id': '2',\r\n     *              'category_id': null,\r\n     *              'vertical_id': null,\r\n     *              'language': null,\r\n     *              'currency': null,\r\n     *              'start_date': null,\r\n     *              'start_time': null,\r\n     *              'end_date': null,\r\n     *              'end_time': null,\r\n     *              'description': null,\r\n     *              'website_url': null,\r\n     *              'deeplink': null,\r\n     *              'blog_url': null,\r\n     *              'facebook_url': null,\r\n     *              'twitter_url': null,\r\n     *              'linkedin_url': null,\r\n     *              'publisher_per_call_duration': 5,\r\n     *              'payout_per_call': 1.5,\r\n     *              'client_per_call_duration': 5,\r\n     *              'ear_time': 3.4,\r\n     *              'campaign_rate': 30,\r\n     *              'publisher_image': null,\r\n     *              'agent_image': null,\r\n     *              'client_image': null,\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z',\r\n     *              'agent_payout_setting': {\r\n     *                  'uuid': '8fc0dae2-1113-4423-82eb-6edeb1c4b958',\r\n     *                  'per_call_earning': null,\r\n     *                  'commission': true,\r\n     *                  'commission_type': 'revshare_percentage',\r\n     *                  'payout_on': null,\r\n     *                  'payout_amount': 0,\r\n     *                  'revshare_payout_limits': true,\r\n     *                  'min': null,\r\n     *                  'max': null,\r\n     *                  'duplicate_payouts': 'enable',\r\n     *                  'days': 2,\r\n     *                  'hours': 5,\r\n     *                  'payout_hours': false,\r\n     *                  'open_time': null,\r\n     *                  'close_time': null,\r\n     *                  'start_break_time': '12:30:02',\r\n     *                  'break_duration': '30',\r\n     *                  'time_zone': null,\r\n     *                  'limit_payout': false,\r\n     *                  'global_cap': false,\r\n     *                  'global_payout_cap': false,\r\n     *                  'monthly_cap': false,\r\n     *                  'monthly_payout_cap': false,\r\n     *                  'daily_cap': false,\r\n     *                  'daily_payout_cap': false,\r\n     *                  'hourly_cap': false,\r\n     *                  'hourly_payout_cap': false,\r\n     *                  'concurrency_cap': false,\r\n     *                  'tips': false,\r\n     *                  'bounties_condition': null,\r\n     *                  'bounties_operator': null,\r\n     *                  'bounties_value': null,\r\n     *                  'bonus_type': null,\r\n     *                  'bonus_value': null,\r\n     *                  'user_id': null,\r\n     *                  'campaign_id': 1,\r\n     *                  'created_at': '2022-08-16T10:00:47.000000Z'\r\n     *              },\r\n     *              'campaign_location': [\r\n     *                  {\r\n     *                      'uuid': '135f33b5-841e-47de-9686-dfd0c3eda7fc',\r\n     *                      'country': 'test country',\r\n     *                      'state': 'test state',\r\n     *                      'city_town': 'test city',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:27:39.000000Z'\r\n     *                  },\r\n     *                  {\r\n     *                      'uuid': '0176e268-ee7b-4232-b97f-8fabebdf23e7',\r\n     *                      'country': 'pakistan',\r\n     *                      'state': 'punjab',\r\n     *                      'city_town': 'lahore',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:28:37.000000Z'\r\n     *                  }\r\n     *              ]\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign StepTwo Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-step-three": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "summary": "Create Step Three for Compaign",
                "description": "Create Step Three",
                "operationId": "createStepThree",
                "requestBody": {
                    "description": "Pass stepthree data for Campaign",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "uuid"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "category_id": {
                                        "type": "string",
                                        "format": "category_id",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "vertical_id": {
                                        "type": "string",
                                        "format": "vertical_id",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "language": {
                                        "type": "integer",
                                        "format": "language",
                                        "example": "test language"
                                    },
                                    "currency": {
                                        "type": "string",
                                        "format": "currency",
                                        "example": "test currency"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign StepThree has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'campaign': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'step': '1',\r\n     *              'user_uuid': null,\r\n     *              'service_uuid': 'ietritetuirweti',\r\n     *              'name': test,\r\n     *              'phone_no': +122334355,\r\n     *              'title': test title,\r\n     *              'email': test@gmail.com,\r\n     *              'address': test address,\r\n     *              'country': test country,\r\n     *              'state': test state,\r\n     *              'city': test city,\r\n     *              'zipcode': test zipcode,\r\n     *              'service_id': '2',\r\n     *              'category_id': 1,\r\n     *              'vertical_id': 2,\r\n     *              'language': test language,\r\n     *              'currency': test currency,\r\n     *              'start_date': null,\r\n     *              'start_time': null,\r\n     *              'end_date': null,\r\n     *              'end_time': null,\r\n     *              'description': null,\r\n     *              'website_url': null,\r\n     *              'deeplink': null,\r\n     *              'blog_url': null,\r\n     *              'facebook_url': null,\r\n     *              'twitter_url': null,\r\n     *              'linkedin_url': null,\r\n     *              'publisher_per_call_duration': 5,\r\n     *              'payout_per_call': 1.5,\r\n     *              'client_per_call_duration': 5,\r\n     *              'ear_time': 3.4,\r\n     *              'campaign_rate': 30,\r\n     *              'publisher_image': null,\r\n     *              'agnet_image': null,\r\n     *              'client_image': null,\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z',\r\n     *              'agent_payout_setting': {\r\n     *                  'uuid': '8fc0dae2-1113-4423-82eb-6edeb1c4b958',\r\n     *                  'per_call_earning': null,\r\n     *                  'commission': true,\r\n     *                  'commission_type': 'revshare_percentage',\r\n     *                  'payout_on': null,\r\n     *                  'payout_amount': 0,\r\n     *                  'revshare_payout_limits': true,\r\n     *                  'min': null,\r\n     *                  'max': null,\r\n     *                  'duplicate_payouts': 'enable',\r\n     *                  'days': 2,\r\n     *                  'hours': 5,\r\n     *                  'payout_hours': false,\r\n     *                  'open_time': null,\r\n     *                  'close_time': null,\r\n     *                  'start_break_time': '12:30:02',\r\n     *                  'break_duration': '30',\r\n     *                  'time_zone': null,\r\n     *                  'limit_payout': false,\r\n     *                  'global_cap': false,\r\n     *                  'global_payout_cap': false,\r\n     *                  'monthly_cap': false,\r\n     *                  'monthly_payout_cap': false,\r\n     *                  'daily_cap': false,\r\n     *                  'daily_payout_cap': false,\r\n     *                  'hourly_cap': false,\r\n     *                  'hourly_payout_cap': false,\r\n     *                  'concurrency_cap': false,\r\n     *                  'tips': false,\r\n     *                  'bounties_condition': null,\r\n     *                  'bounties_operator': null,\r\n     *                  'bounties_value': null,\r\n     *                  'bonus_type': null,\r\n     *                  'bonus_value': null,\r\n     *                  'user_id': null,\r\n     *                  'campaign_id': 1,\r\n     *                  'created_at': '2022-08-16T10:00:47.000000Z'\r\n     *              },\r\n     *              'campaign_location': [\r\n     *                  {\r\n     *                      'uuid': '135f33b5-841e-47de-9686-dfd0c3eda7fc',\r\n     *                      'country': 'test country',\r\n     *                      'state': 'test state',\r\n     *                      'city_town': 'test city',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:27:39.000000Z'\r\n     *                  },\r\n     *                  {\r\n     *                      'uuid': '0176e268-ee7b-4232-b97f-8fabebdf23e7',\r\n     *                      'country': 'pakistan',\r\n     *                      'state': 'punjab',\r\n     *                      'city_town': 'lahore',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:28:37.000000Z'\r\n     *                  }\r\n     *              ]\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign StepThree Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-step-four": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "summary": "Create Step Four for Compaign",
                "description": "Create Step Four",
                "operationId": "createStepFour",
                "requestBody": {
                    "description": "Pass stepfour data for Campaign",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "uuid"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "start_date",
                                        "example": "2022-07-25"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "start_time",
                                        "example": "12:40:01"
                                    },
                                    "end_date": {
                                        "type": "integer",
                                        "format": "end_date",
                                        "example": "2022-07-26"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "end_time",
                                        "example": "03:40:01"
                                    },
                                    "decription": {
                                        "type": "string",
                                        "format": "currency",
                                        "example": "test description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign StepFour has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'campaign': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'step': '1',\r\n     *              'user_uuid': null,\r\n     *              'service_uuid': 'ietritetuirweti',\r\n     *              'name': test,\r\n     *              'phone_no': +122334355,\r\n     *              'title': test title,\r\n     *              'email': test@gmail.com,\r\n     *              'address': test address,\r\n     *              'country': test country,\r\n     *              'state': test state,\r\n     *              'city': test city,\r\n     *              'zipcode': test zipcode,\r\n     *              'service_id': '2',\r\n     *              'category_id': 1,\r\n     *              'vertical_id': 2,\r\n     *              'language': test language,\r\n     *              'currency': test currency,\r\n     *              'start_date': 2022-07-25,\r\n     *              'start_time': 12:40:01,\r\n     *              'end_date': 2022-07-26,\r\n     *              'end_time': 03:40:01,\r\n     *              'description': test description,\r\n     *              'website_url': null,\r\n     *              'deeplink': null,\r\n     *              'blog_url': null,\r\n     *              'facebook_url': null,\r\n     *              'twitter_url': null,\r\n     *              'linkedin_url': null,\r\n     *              'publisher_per_call_duration': 5,\r\n     *              'payout_per_call': 1.5,\r\n     *              'client_per_call_duration': 5,\r\n     *              'ear_time': 3.4,\r\n     *              'campaign_rate': 30,\r\n     *              'publisher_image': null,\r\n     *              'agnet_image': null,\r\n     *              'client_image': null,\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z',\r\n     *              'agent_payout_setting': {\r\n     *                  'uuid': '8fc0dae2-1113-4423-82eb-6edeb1c4b958',\r\n     *                  'per_call_earning': null,\r\n     *                  'commission': true,\r\n     *                  'commission_type': 'revshare_percentage',\r\n     *                  'payout_on': null,\r\n     *                  'payout_amount': 0,\r\n     *                  'revshare_payout_limits': true,\r\n     *                  'min': null,\r\n     *                  'max': null,\r\n     *                  'duplicate_payouts': 'enable',\r\n     *                  'days': 2,\r\n     *                  'hours': 5,\r\n     *                  'payout_hours': false,\r\n     *                  'open_time': null,\r\n     *                  'close_time': null,\r\n     *                  'start_break_time': '12:30:02',\r\n     *                  'break_duration': '30',\r\n     *                  'time_zone': null,\r\n     *                  'limit_payout': false,\r\n     *                  'global_cap': false,\r\n     *                  'global_payout_cap': false,\r\n     *                  'monthly_cap': false,\r\n     *                  'monthly_payout_cap': false,\r\n     *                  'daily_cap': false,\r\n     *                  'daily_payout_cap': false,\r\n     *                  'hourly_cap': false,\r\n     *                  'hourly_payout_cap': false,\r\n     *                  'concurrency_cap': false,\r\n     *                  'tips': false,\r\n     *                  'bounties_condition': null,\r\n     *                  'bounties_operator': null,\r\n     *                  'bounties_value': null,\r\n     *                  'bonus_type': null,\r\n     *                  'bonus_value': null,\r\n     *                  'user_id': null,\r\n     *                  'campaign_id': 1,\r\n     *                  'created_at': '2022-08-16T10:00:47.000000Z'\r\n     *              },\r\n     *              'campaign_location': [\r\n     *                  {\r\n     *                      'uuid': '135f33b5-841e-47de-9686-dfd0c3eda7fc',\r\n     *                      'country': 'test country',\r\n     *                      'state': 'test state',\r\n     *                      'city_town': 'test city',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:27:39.000000Z'\r\n     *                  },\r\n     *                  {\r\n     *                      'uuid': '0176e268-ee7b-4232-b97f-8fabebdf23e7',\r\n     *                      'country': 'pakistan',\r\n     *                      'state': 'punjab',\r\n     *                      'city_town': 'lahore',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:28:37.000000Z'\r\n     *                  }\r\n     *              ]\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign StepFour Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-step-five": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "summary": "Create Step Five for Compaign",
                "description": "Create Step Five",
                "operationId": "createStepFive",
                "requestBody": {
                    "description": "Pass stepfive data for Campaign",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "uuid"
                                ],
                                "properties": {
                                    "website_url": {
                                        "type": "string",
                                        "format": "website_url",
                                        "example": "website_url"
                                    },
                                    "deeplink": {
                                        "type": "string",
                                        "format": "deeplink",
                                        "example": "deeplink"
                                    },
                                    "blog_url": {
                                        "type": "string",
                                        "format": "blog_url",
                                        "example": "blog_url"
                                    },
                                    "facebook_url": {
                                        "type": "integer",
                                        "format": "facebook_url",
                                        "example": "facebook_url"
                                    },
                                    "twitter_url": {
                                        "type": "string",
                                        "format": "twitter_url",
                                        "example": "twitter_url"
                                    },
                                    "linkedin_url": {
                                        "type": "string",
                                        "format": "linkedin_url",
                                        "example": "linkedin_url"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign StepFive has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'campaign': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'step': '1',\r\n     *              'user_uuid': null,\r\n     *              'service_uuid': 'ietritetuirweti',\r\n     *              'name': test,\r\n     *              'phone_no': +122334355,\r\n     *              'title': test title,\r\n     *              'email': test@gmail.com,\r\n     *              'address': test address,\r\n     *              'country': test country,\r\n     *              'state': test state,\r\n     *              'city': test city,\r\n     *              'zipcode': test zipcode,\r\n     *              'service_id': '2',\r\n     *              'category_id': 1,\r\n     *              'vertical_id': 2,\r\n     *              'language': test language,\r\n     *              'currency': test currency,\r\n     *              'start_date': 2022-07-25,\r\n     *              'start_time': 12:40:01,\r\n     *              'end_date': 2022-07-26,\r\n     *              'end_time': 03:40:01,\r\n     *              'description': test description,\r\n     *              'website_url': website_ul,\r\n     *              'deeplink': deeplink,\r\n     *              'blog_url': blog_url,\r\n     *              'facebook_url': facebook_url,\r\n     *              'twitter_url': twitter_url,\r\n     *              'linkedin_url': linkedin_url,\r\n     *              'publisher_per_call_duration': 5,\r\n     *              'payout_per_call': 1.5,\r\n     *              'client_per_call_duration': 5,\r\n     *              'ear_time': 3.4,\r\n     *              'campaign_rate': 30,\r\n     *              'publisher_image': null,\r\n     *              'agnet_image': null,\r\n     *              'client_image': null,\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z',\r\n     *              'agent_payout_setting': {\r\n     *                  'uuid': '8fc0dae2-1113-4423-82eb-6edeb1c4b958',\r\n     *                  'per_call_earning': null,\r\n     *                  'commission': true,\r\n     *                  'commission_type': 'revshare_percentage',\r\n     *                  'payout_on': null,\r\n     *                  'payout_amount': 0,\r\n     *                  'revshare_payout_limits': true,\r\n     *                  'min': null,\r\n     *                  'max': null,\r\n     *                  'duplicate_payouts': 'enable',\r\n     *                  'days': 2,\r\n     *                  'hours': 5,\r\n     *                  'payout_hours': false,\r\n     *                  'open_time': null,\r\n     *                  'close_time': null,\r\n     *                  'start_break_time': '12:30:02',\r\n     *                  'break_duration': '30',\r\n     *                  'time_zone': null,\r\n     *                  'limit_payout': false,\r\n     *                  'global_cap': false,\r\n     *                  'global_payout_cap': false,\r\n     *                  'monthly_cap': false,\r\n     *                  'monthly_payout_cap': false,\r\n     *                  'daily_cap': false,\r\n     *                  'daily_payout_cap': false,\r\n     *                  'hourly_cap': false,\r\n     *                  'hourly_payout_cap': false,\r\n     *                  'concurrency_cap': false,\r\n     *                  'tips': false,\r\n     *                  'bounties_condition': null,\r\n     *                  'bounties_operator': null,\r\n     *                  'bounties_value': null,\r\n     *                  'bonus_type': null,\r\n     *                  'bonus_value': null,\r\n     *                  'user_id': null,\r\n     *                  'campaign_id': 1,\r\n     *                  'created_at': '2022-08-16T10:00:47.000000Z'\r\n     *              },\r\n     *              'campaign_location': [\r\n     *                  {\r\n     *                      'uuid': '135f33b5-841e-47de-9686-dfd0c3eda7fc',\r\n     *                      'country': 'test country',\r\n     *                      'state': 'test state',\r\n     *                      'city_town': 'test city',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:27:39.000000Z'\r\n     *                  },\r\n     *                  {\r\n     *                      'uuid': '0176e268-ee7b-4232-b97f-8fabebdf23e7',\r\n     *                      'country': 'pakistan',\r\n     *                      'state': 'punjab',\r\n     *                      'city_town': 'lahore',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:28:37.000000Z'\r\n     *                  }\r\n     *              ]\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign StepFive Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-step-six": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "summary": "Create Step Six for Compaign",
                "description": "Create Step Six",
                "operationId": "createStepSix",
                "requestBody": {
                    "description": "Pass stepsix data for Campaign",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "uuid"
                                ],
                                "properties": {
                                    "publisher_per_call_duration": {
                                        "type": "string",
                                        "format": "publisher_per_call_duration",
                                        "example": "5"
                                    },
                                    "payout_per_call": {
                                        "type": "string",
                                        "format": "payout_per_call",
                                        "example": "2.5"
                                    },
                                    "client_per_call_duration": {
                                        "type": "string",
                                        "format": "client_per_call_duration",
                                        "example": "5"
                                    },
                                    "ear_time": {
                                        "type": "integer",
                                        "format": "ear_time",
                                        "example": "3.4"
                                    },
                                    "campaign_rate": {
                                        "type": "number",
                                        "format": "cmapaign_rate",
                                        "example": "30"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign StepSix has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'campaign': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'step': '1',\r\n     *              'user_uuid': null,\r\n     *              'service_uuid': 'ietritetuirweti',\r\n     *              'name': test,\r\n     *              'phone_no': +122334355,\r\n     *              'title': test title,\r\n     *              'email': test@gmail.com,\r\n     *              'address': test address,\r\n     *              'country': test country,\r\n     *              'state': test state,\r\n     *              'city': test city,\r\n     *              'zipcode': test zipcode,\r\n     *              'service_id': '2',\r\n     *              'category_id': 1,\r\n     *              'vertical_id': 2,\r\n     *              'language': test language,\r\n     *              'currency': test currency,\r\n     *              'start_date': 2022-07-25,\r\n     *              'start_time': 12:40:01,\r\n     *              'end_date': 2022-07-26,\r\n     *              'end_time': 03:40:01,\r\n     *              'description': test description,\r\n     *              'website_url': website_ul,\r\n     *              'deeplink': deeplink,\r\n     *              'blog_url': blog_url,\r\n     *              'facebook_url': facebook_url,\r\n     *              'twitter_url': twitter_url,\r\n     *              'linkedin_url': linkedin_url,\r\n     *              'publisher_per_call_duration': 5,\r\n     *              'payout_per_call': 1.5,\r\n     *              'client_per_call_duration': 5,\r\n     *              'ear_time': 3.4,\r\n     *              'campaign_rate': 30,\r\n     *              'publisher_image': null,\r\n     *              'agent_image': null,\r\n     *              'client_image': null,\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z',\r\n     *              'agent_payout_setting': {\r\n     *                  'uuid': '8fc0dae2-1113-4423-82eb-6edeb1c4b958',\r\n     *                  'per_call_earning': null,\r\n     *                  'commission': true,\r\n     *                  'commission_type': 'revshare_percentage',\r\n     *                  'payout_on': null,\r\n     *                  'payout_amount': 0,\r\n     *                  'revshare_payout_limits': true,\r\n     *                  'min': null,\r\n     *                  'max': null,\r\n     *                  'duplicate_payouts': 'enable',\r\n     *                  'days': 2,\r\n     *                  'hours': 5,\r\n     *                  'payout_hours': false,\r\n     *                  'open_time': null,\r\n     *                  'close_time': null,\r\n     *                  'start_break_time': '12:30:02',\r\n     *                  'break_duration': '30',\r\n     *                  'time_zone': null,\r\n     *                  'limit_payout': false,\r\n     *                  'global_cap': false,\r\n     *                  'global_payout_cap': false,\r\n     *                  'monthly_cap': false,\r\n     *                  'monthly_payout_cap': false,\r\n     *                  'daily_cap': false,\r\n     *                  'daily_payout_cap': false,\r\n     *                  'hourly_cap': false,\r\n     *                  'hourly_payout_cap': false,\r\n     *                  'concurrency_cap': false,\r\n     *                  'tips': false,\r\n     *                  'bounties_condition': null,\r\n     *                  'bounties_operator': null,\r\n     *                  'bounties_value': null,\r\n     *                  'bonus_type': null,\r\n     *                  'bonus_value': null,\r\n     *                  'user_id': null,\r\n     *                  'campaign_id': 1,\r\n     *                  'created_at': '2022-08-16T10:00:47.000000Z'\r\n     *              },\r\n     *              'campaign_location': [\r\n     *                  {\r\n     *                      'uuid': '135f33b5-841e-47de-9686-dfd0c3eda7fc',\r\n     *                      'country': 'test country',\r\n     *                      'state': 'test state',\r\n     *                      'city_town': 'test city',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:27:39.000000Z'\r\n     *                  },\r\n     *                  {\r\n     *                      'uuid': '0176e268-ee7b-4232-b97f-8fabebdf23e7',\r\n     *                      'country': 'pakistan',\r\n     *                      'state': 'punjab',\r\n     *                      'city_town': 'lahore',\r\n     *                      'zipcode': 123,\r\n     *                      'long': 1.2,\r\n     *                      'lat': 2.5,\r\n     *                      'campaign_id': 1,\r\n     *                      'created_at': '2022-08-15T16:28:37.000000Z'\r\n     *                  }\r\n     *              ]\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign StepSix Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-campaign-location": {
            "post": {
                "tags": [
                    "Campaign Location"
                ],
                "summary": "Create Campaign Location",
                "description": "Create Campaign Location",
                "operationId": "createCampaignLocation",
                "requestBody": {
                    "description": "Pass Campaign Location data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "campaign_uuid"
                                ],
                                "properties": {
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "country",
                                        "example": "pakistan"
                                    },
                                    "state": {
                                        "type": "string",
                                        "format": "state",
                                        "example": "punjab"
                                    },
                                    "city_town": {
                                        "type": "string",
                                        "format": "city_town",
                                        "example": "lahore"
                                    },
                                    "zipcode": {
                                        "type": "integer",
                                        "format": "zipcode",
                                        "example": "5400"
                                    },
                                    "long": {
                                        "type": "number",
                                        "format": "long",
                                        "example": "1.2"
                                    },
                                    "lat": {
                                        "type": "number",
                                        "format": "lat",
                                        "example": "2.5"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "address",
                                        "example": "test address"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Location has been created successfully!',\r\n     *       'data': {\r\n     *          'campaignLocation': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'country': 'pakistan',\r\n     *              'state': 'punjab',\r\n     *              'city_town': 'lahore',\r\n     *              'zipcode': '5400',\r\n     *              'long': '1.2',\r\n     *              'lat': '2.5',\r\n     *              'address': 'test address',\r\n     *              'campaign_id': '1',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Location Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-campaign-location": {
            "get": {
                "tags": [
                    "Campaign Location"
                ],
                "summary": "Get Campaign Location",
                "description": "Get Campaign Location by campaign_uuid",
                "operationId": "getCampaignLocationbyCampaignId",
                "parameters": [
                    {
                        "name": "campaign_uuid",
                        "in": "path",
                        "description": "campaign_uuid of campaign",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Location has been fetched succesfully!',\r\n     *       'data': {\r\n     *          'campaign_location': {\r\n     *              'uuid': '9a0a27ea-d113-492a-8c8d-55b19d4bcf2d',\r\n     *              'country': 'pakistan',\r\n     *              'state': 'punjab',\r\n     *              'city_town': 'lahore',\r\n     *              'zipcode': '5400',\r\n     *              'long': '1.2',\r\n     *              'lat': '2.5',\r\n     *              'address': 'test address',\r\n     *              'campaign_id': '1',\r\n     *              'created_at': '2022-06-25T14:32:54.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Location not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-campaign-location": {
            "post": {
                "tags": [
                    "Campaign Location"
                ],
                "summary": "Update Campaign Location",
                "description": "Update Campaign Location",
                "operationId": "updateCampaignLocation",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Campaign Location",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "requestBody": {
                    "description": "Pass Campaign Location data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "campaign_uuid"
                                ],
                                "properties": {
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "country",
                                        "example": "pakistan"
                                    },
                                    "state": {
                                        "type": "string",
                                        "format": "state",
                                        "example": "punjab"
                                    },
                                    "city_town": {
                                        "type": "string",
                                        "format": "city_town",
                                        "example": "lahore"
                                    },
                                    "zipcode": {
                                        "type": "integer",
                                        "format": "zipcode",
                                        "example": "5400"
                                    },
                                    "long": {
                                        "type": "number",
                                        "format": "long",
                                        "example": "1.2"
                                    },
                                    "lat": {
                                        "type": "number",
                                        "format": "lat",
                                        "example": "2.5"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "address",
                                        "example": "test address"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Locatin has been updated successfully!',\r\n     *       'data': {\r\n     *          'campaign_location': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'country': 'pakistan',\r\n     *              'state': 'punjab',\r\n     *              'city_town': 'lahore',\r\n     *              'zipcode': '5400',\r\n     *              'long': '1.2',\r\n     *              'lat': '2.5',\r\n     *              'address': 'test address',\r\n     *              'campaign_id': '1',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Location not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/campaign-location": {
            "delete": {
                "tags": [
                    "Campaign Location"
                ],
                "summary": "Delete Campaign Location",
                "description": "Delete exisiting Campaign Location",
                "operationId": "deleteCampaignLocation",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Campaign Location",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign Location has been deleted successfully!',\r\n     *        'data': {\r\n     *          'campaign_location': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'country': 'pakistan',\r\n     *              'state': 'punjab',\r\n     *              'city_town': 'lahore',\r\n     *              'zipcode': '5400',\r\n     *              'long': '1.2',\r\n     *              'lat': '2.5',\r\n     *              'address': 'test address',\r\n     *              'campaign_id': '1',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Location not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/company-verticals": {
            "get": {
                "tags": [
                    "Company Vertical"
                ],
                "summary": "Get Company Vertical",
                "description": "Get Company Vertical",
                "operationId": "getCompanyVertical",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort company verticals by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test company vertical"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort company vertical by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort company vertical by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Company Vertical has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test company vertical',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null,\r\n     *          'bussines_category': {\r\n     *              'uuid': '9a0a27ea-d113-492a-8c8d-55b19d4bcf2d',\r\n     *              'name': 'test company vertical',\r\n     *              'created_at': '2022-06-25T14:32:54.000000Z',\r\n     *              'updated_at': '2022-06-25T14:32:54.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Company Vertical Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Company Vertical"
                ],
                "summary": "Create Company Vertical",
                "description": "Create Company Vertical",
                "operationId": "createCompanyVertical",
                "requestBody": {
                    "description": "Pass Company Vertical data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test company vertical"
                                    },
                                    "bussines_category_id": {
                                        "type": "integer",
                                        "format": "bussines_address",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *        'status': true,\r\n     *       'message': 'Company Vertical has been Created Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test company vertical',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null,\r\n     *          'bussines_category': {\r\n     *              'uuid': '9a0a27ea-d113-492a-8c8d-55b19d4bcf2d',\r\n     *              'name': 'test company vertical',\r\n     *              'created_at': '2022-06-25T14:32:54.000000Z',\r\n     *              'updated_at': '2022-06-25T14:32:54.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Company Vertical Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/company-verticals/{uuid}": {
            "get": {
                "tags": [
                    "Company Vertical"
                ],
                "summary": "Get Company Vertical",
                "description": "Get Company Vertical by uuid",
                "operationId": "getCompanyVerticalById",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Company Vertical",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Company Vertical has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test company vertical',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null,\r\n     *          'bussines_category': {\r\n     *              'uuid': '9a0a27ea-d113-492a-8c8d-55b19d4bcf2d',\r\n     *              'name': 'test company vertical',\r\n     *              'created_at': '2022-06-25T14:32:54.000000Z',\r\n     *              'updated_at': '2022-06-25T14:32:54.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Company Vertical Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Company Vertical"
                ],
                "summary": "Update Company Vertical",
                "description": "Update Company Vertical",
                "operationId": "updateCompanyVertical",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Company Vertical",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "requestBody": {
                    "description": "Pass Company Vertical data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test company vertical"
                                    },
                                    "bussines_category_id": {
                                        "type": "integer",
                                        "format": "bussines_address",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Company Vertical has been Created Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test company vertical',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null,\r\n     *          'bussines_category': {\r\n     *              'uuid': '9a0a27ea-d113-492a-8c8d-55b19d4bcf2d',\r\n     *              'name': 'test company vertical',\r\n     *              'created_at': '2022-06-25T14:32:54.000000Z',\r\n     *              'updated_at': '2022-06-25T14:32:54.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Company Vertical Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Company Vertical"
                ],
                "summary": "Delete Company Vertical",
                "description": "Delete existing Company Vertical",
                "operationId": "deleteCompanyVertical",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Company Vertical",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Company Vertical has been Deleted Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test company vertical',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null,\r\n     *          'bussines_category': {\r\n     *              'uuid': '9a0a27ea-d113-492a-8c8d-55b19d4bcf2d',\r\n     *              'name': 'test company vertical',\r\n     *              'created_at': '2022-06-25T14:32:54.000000Z',\r\n     *              'updated_at': '2022-06-25T14:32:54.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "company Vertical Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/business-verticals/{business_category_id}": {
            "get": {
                "tags": [
                    "Company Vertical"
                ],
                "summary": "Get Company Vertical",
                "description": "Get Company Vertical by business_category_id",
                "operationId": "getCompanyVerticalBycategory_id",
                "parameters": [
                    {
                        "name": "business_category_id",
                        "in": "path",
                        "description": "business_category_id of Company Vertical",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Company Vertical has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test company vertical',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null,\r\n     *          'bussines_category': {\r\n     *              'uuid': '9a0a27ea-d113-492a-8c8d-55b19d4bcf2d',\r\n     *              'name': 'test company vertical',\r\n     *              'created_at': '2022-06-25T14:32:54.000000Z',\r\n     *              'updated_at': '2022-06-25T14:32:54.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Company Vertical Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Get Courses",
                "description": "Get Courses",
                "operationId": "getCourses",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort course by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test courses"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort courses by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort courses by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Courses has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'title': 'test course',\r\n     *          'price': '200',\r\n     *          'thumbnail': 'http://127.0.0.1:8000/uploads/courses/1655323647974907019.jpg',\r\n     *           'category': {\r\n     *                'id': 1,\r\n     *                'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *                'name': 'test category',\r\n     *                'description': 'test description',\r\n     *                'is_active': 'false',\r\n     *                'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *                'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *                'deleted_at': null\r\n     *              },\r\n     *           'lessons': [\r\n     *              {\r\n     *                 'id': 1,\r\n     *                 'uuid': 'ae647e69-f8cf-49ad-8676-a5d0f1c33d5f',\r\n     *                 'name': 'test lesson',\r\n     *                 'description': null,\r\n     *                 'is_active': true,\r\n     *                 'created_at': '2022-06-14T20:07:38.000000Z',\r\n     *                 'updated_at': '2022-06-14T20:07:38.000000Z',\r\n     *                 'deleted_at': null\r\n     *              },\r\n     *              {\r\n     *                  'id': 2,\r\n     *                  'uuid': '7a2aea1a-5f60-4ffa-bccb-0fc938fe0d5c',\r\n     *                  'name': 'ameer lesson',\r\n     *                  'description': 'test description',\r\n     *                  'is_active': true,\r\n     *                  'created_at': '2022-06-14T20:08:51.000000Z',\r\n     *                  'updated_at': '2022-06-14T20:22:34.000000Z',\r\n     *                  'deleted_at': null\r\n     *              }\r\n     *          ],\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Courses Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Course"
                ],
                "summary": "Create Course",
                "description": "Create Course",
                "operationId": "createCourse",
                "requestBody": {
                    "description": "Pass Course data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "format": "title",
                                        "example": "test course"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "format": "category_id",
                                        "example": "1"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "format": "price",
                                        "example": "200"
                                    },
                                    "course_image": {
                                        "type": "string",
                                        "format": "course_image",
                                        "example": "20220528_214823.jpg"
                                    },
                                    "lessons": {
                                        "type": "integer",
                                        "format": "lessons",
                                        "example": "1,2,3"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Course has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'title': 'test course',\r\n     *          'price': '200',\r\n     *          'thumbnail': 'http://127.0.0.1:8000/uploads/courses/1655323647974907019.jpg',\r\n     *           'category': {\r\n     *                'id': 1,\r\n     *                'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *                'name': 'test category',\r\n     *                'description': 'test description',\r\n     *                'is_active': 'false',\r\n     *                'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *                'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *                'deleted_at': null\r\n     *              },\r\n     *           'lessons': [\r\n     *              {\r\n     *                 'id': 1,\r\n     *                 'uuid': 'ae647e69-f8cf-49ad-8676-a5d0f1c33d5f',\r\n     *                 'name': 'test lesson',\r\n     *                 'description': null,\r\n     *                 'is_active': true,\r\n     *                 'created_at': '2022-06-14T20:07:38.000000Z',\r\n     *                 'updated_at': '2022-06-14T20:07:38.000000Z',\r\n     *                 'deleted_at': null\r\n     *              },\r\n     *              {\r\n     *                  'id': 2,\r\n     *                  'uuid': '7a2aea1a-5f60-4ffa-bccb-0fc938fe0d5c',\r\n     *                  'name': 'ameer lesson',\r\n     *                  'description': 'test description',\r\n     *                  'is_active': true,\r\n     *                  'created_at': '2022-06-14T20:08:51.000000Z',\r\n     *                  'updated_at': '2022-06-14T20:22:34.000000Z',\r\n     *                  'deleted_at': null\r\n     *              }\r\n     *          ],\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{course_uuid}": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Get Courses By course_uuid",
                "description": "Get Courses By course_uuid",
                "operationId": "getCoursesById",
                "parameters": [
                    {
                        "name": "course_uuid",
                        "in": "path",
                        "description": "course_uuid of Category",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Course has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'title': 'test course',\r\n     *          'price': '200',\r\n     *          'thumbnail': 'http://127.0.0.1:8000/uploads/courses/1655323647974907019.jpg',\r\n     *           'category': {\r\n     *                'id': 1,\r\n     *                'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *                'name': 'test category',\r\n     *                'description': 'test description',\r\n     *                'is_active': 'false',\r\n     *                'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *                'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *                'deleted_at': null\r\n     *              },\r\n     *           'lessons': [\r\n     *              {\r\n     *                 'id': 1,\r\n     *                 'uuid': 'ae647e69-f8cf-49ad-8676-a5d0f1c33d5f',\r\n     *                 'name': 'test lesson',\r\n     *                 'description': null,\r\n     *                 'is_active': true,\r\n     *                 'created_at': '2022-06-14T20:07:38.000000Z',\r\n     *                 'updated_at': '2022-06-14T20:07:38.000000Z',\r\n     *                 'deleted_at': null\r\n     *              },\r\n     *              {\r\n     *                  'id': 2,\r\n     *                  'uuid': '7a2aea1a-5f60-4ffa-bccb-0fc938fe0d5c',\r\n     *                  'name': 'ameer lesson',\r\n     *                  'description': 'test description',\r\n     *                  'is_active': true,\r\n     *                  'created_at': '2022-06-14T20:08:51.000000Z',\r\n     *                  'updated_at': '2022-06-14T20:22:34.000000Z',\r\n     *                  'deleted_at': null\r\n     *              }\r\n     *          ],\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Course"
                ],
                "summary": "Update Course",
                "description": "Update Course",
                "operationId": "updateCourse",
                "requestBody": {
                    "description": "Pass Course data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "format": "title",
                                        "example": "test course"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "format": "category_id",
                                        "example": "1"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "format": "price",
                                        "example": "200"
                                    },
                                    "course_image": {
                                        "type": "string",
                                        "format": "course_image",
                                        "example": "20220528_214823.jpg"
                                    },
                                    "lessons": {
                                        "type": "integer",
                                        "format": "lessons",
                                        "example": "1,2,3"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Course has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'title': 'test course',\r\n     *          'price': '200',\r\n     *          'thumbnail': 'http://127.0.0.1:8000/uploads/courses/1655323647974907019.jpg',\r\n     *           'category': {\r\n     *                'id': 1,\r\n     *                'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *                'name': 'test category',\r\n     *                'description': 'test description',\r\n     *                'is_active': 'false',\r\n     *                'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *                'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *                'deleted_at': null\r\n     *              },\r\n     *           'lessons': [\r\n     *              {\r\n     *                 'id': 1,\r\n     *                 'uuid': 'ae647e69-f8cf-49ad-8676-a5d0f1c33d5f',\r\n     *                 'name': 'test lesson',\r\n     *                 'description': null,\r\n     *                 'is_active': true,\r\n     *                 'created_at': '2022-06-14T20:07:38.000000Z',\r\n     *                 'updated_at': '2022-06-14T20:07:38.000000Z',\r\n     *                 'deleted_at': null\r\n     *              },\r\n     *              {\r\n     *                  'id': 2,\r\n     *                  'uuid': '7a2aea1a-5f60-4ffa-bccb-0fc938fe0d5c',\r\n     *                  'name': 'ameer lesson',\r\n     *                  'description': 'test description',\r\n     *                  'is_active': true,\r\n     *                  'created_at': '2022-06-14T20:08:51.000000Z',\r\n     *                  'updated_at': '2022-06-14T20:22:34.000000Z',\r\n     *                  'deleted_at': null\r\n     *              }\r\n     *          ],\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Course"
                ],
                "summary": "Delete existing Course",
                "description": "Delete Course",
                "operationId": "deleteCourse",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Course has been Deleted Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'title': 'test course',\r\n     *          'price': '200',\r\n     *          'thumbnail': 'http://127.0.0.1:8000/uploads/courses/1655323647974907019.jpg',\r\n     *           'category': {\r\n     *                'id': 1,\r\n     *                'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *                'name': 'test category',\r\n     *                'description': 'test description',\r\n     *                'is_active': 'false',\r\n     *                'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *                'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *                'deleted_at': null\r\n     *              },\r\n     *           'lessons': [\r\n     *              {\r\n     *                 'id': 1,\r\n     *                 'uuid': 'ae647e69-f8cf-49ad-8676-a5d0f1c33d5f',\r\n     *                 'name': 'test lesson',\r\n     *                 'description': null,\r\n     *                 'is_active': true,\r\n     *                 'created_at': '2022-06-14T20:07:38.000000Z',\r\n     *                 'updated_at': '2022-06-14T20:07:38.000000Z',\r\n     *                 'deleted_at': null\r\n     *              },\r\n     *              {\r\n     *                  'id': 2,\r\n     *                  'uuid': '7a2aea1a-5f60-4ffa-bccb-0fc938fe0d5c',\r\n     *                  'name': 'ameer lesson',\r\n     *                  'description': 'test description',\r\n     *                  'is_active': true,\r\n     *                  'created_at': '2022-06-14T20:08:51.000000Z',\r\n     *                  'updated_at': '2022-06-14T20:22:34.000000Z',\r\n     *                  'deleted_at': null\r\n     *              }\r\n     *          ],\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-course-order": {
            "post": {
                "tags": [
                    "Course Order"
                ],
                "summary": "Create Course Order",
                "description": "Create Course Order",
                "operationId": "storeCourseOrder",
                "requestBody": {
                    "description": "Pass Course Order data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_uuid,course_uuid"
                                ],
                                "properties": {
                                    "user_uuid": {
                                        "type": "string",
                                        "format": "user_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "course_uuid": {
                                        "type": "string",
                                        "format": "course_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "copon_uuid": {
                                        "type": "string",
                                        "format": "copon_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "course_price": {
                                        "type": "integer",
                                        "format": "course_price",
                                        "example": "500"
                                    },
                                    "course_quantity": {
                                        "type": "integer",
                                        "format": "course_quantity",
                                        "example": "1"
                                    },
                                    "price_after_copon": {
                                        "type": "integer",
                                        "format": "price_after_copon",
                                        "example": "300"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been ordered course successfully!',\r\n     *       'data': {\r\n     *          'courseOrder': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'user_id': '1',\r\n     *              'course_id': '1',\r\n     *              'campaign_id': '2',\r\n     *              'copon_id': '2',\r\n     *              'course_price': '500',\r\n     *              'course_quantity': '1',\r\n     *              'price_after_copon': '300',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course Order Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-course-order": {
            "get": {
                "tags": [
                    "Course Order"
                ],
                "summary": "Get Course Order",
                "description": "Get Course Order",
                "operationId": "getCourseOrder",
                "requestBody": {
                    "description": "Pass Course Order data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_uuid,course_uuid"
                                ],
                                "properties": {
                                    "user_uuid": {
                                        "type": "string",
                                        "format": "user_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "course_uuid": {
                                        "type": "string",
                                        "format": "course_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Course Order has been fetched successfully against user!',\r\n     *       'data': {\r\n     *          'courseOrder': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'user_id': '1',\r\n     *              'course_id': '1',\r\n     *              'campaign_id': '2',\r\n     *              'copon_id': '2',\r\n     *              'course_price': '500',\r\n     *              'course_quantity': '1',\r\n     *              'price_after_copon': '300',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-course-order": {
            "post": {
                "tags": [
                    "Course Order"
                ],
                "summary": "Update Course Order",
                "description": "Update Course Order",
                "operationId": "updateCourseOrder",
                "requestBody": {
                    "description": "Pass Course Order data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_uuid,course_uuid"
                                ],
                                "properties": {
                                    "user_uuid": {
                                        "type": "string",
                                        "format": "user_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "course_uuid": {
                                        "type": "string",
                                        "format": "course_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "copon_uuid": {
                                        "type": "string",
                                        "format": "copon_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "course_price": {
                                        "type": "integer",
                                        "format": "course_price",
                                        "example": "500"
                                    },
                                    "course_quantity": {
                                        "type": "integer",
                                        "format": "course_quantity",
                                        "example": "1"
                                    },
                                    "price_after_copon": {
                                        "type": "integer",
                                        "format": "price_after_copon",
                                        "example": "300"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been ordered course successfully!',\r\n     *       'data': {\r\n     *          'courseOrder': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'user_id': '1',\r\n     *              'course_id': '1',\r\n     *              'campaign_id': '2',\r\n     *              'copon_id': '2',\r\n     *              'course_price': '500',\r\n     *              'course_quantity': '1',\r\n     *              'price_after_copon': '300',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course Order Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/dropdowns": {
            "get": {
                "tags": [
                    "Dropdown"
                ],
                "summary": "Get Dropdown",
                "description": "Get Dropdown",
                "operationId": "getDropdown",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort Dropdown items by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test Dropdown"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort Dropdown by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort Dropdown by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Dropdown has been Fetched Successfully!',\r\n     *      'data': {\r\n     *          'dropdowns': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'label': 'ads',\r\n     *             'value': 'ads',\r\n     *             'type': 'agent',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *             'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *             'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dropdown Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Dropdown"
                ],
                "summary": "Update Dropdown of Current User",
                "description": "Update Dropdown",
                "operationId": "updateDropdown",
                "requestBody": {
                    "description": "Pass Dropdown data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "label",
                                    "value",
                                    "type"
                                ],
                                "properties": {
                                    "label": {
                                        "type": "string",
                                        "format": "label",
                                        "example": "ads"
                                    },
                                    "value": {
                                        "type": "string",
                                        "format": "value",
                                        "example": "ads"
                                    },
                                    "type": {
                                        "type": "enum",
                                        "format": "type",
                                        "example": "agent"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Dropdown has been Updated Successfully!',\r\n     *         'data': {\r\n     *          'dropdowns': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'label': 'ads',\r\n     *             'value': 'ads',\r\n     *             'type': 'agent',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *             'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *             'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dropdonwn Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Dropdown"
                ],
                "summary": "Create Dropdown",
                "description": "Create Dropdown",
                "operationId": "createDropdown",
                "requestBody": {
                    "description": "Pass Dropdown data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "label",
                                    "value",
                                    "type"
                                ],
                                "properties": {
                                    "label": {
                                        "type": "string",
                                        "format": "label",
                                        "example": "ads"
                                    },
                                    "value": {
                                        "type": "string",
                                        "format": "value",
                                        "example": "ads"
                                    },
                                    "type": {
                                        "type": "enum",
                                        "format": "type",
                                        "example": "agent"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Dropdown has been Created Successfully!',\r\n     *       'data': {\r\n     *          'dropdowns': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'label': 'ads',\r\n     *             'value': 'ads',\r\n     *             'type': 'agent',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *             'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *             'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dropdown Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/dropdowns/{uuid}": {
            "get": {
                "tags": [
                    "Dropdown"
                ],
                "summary": "Get Dropdown by uuid",
                "description": "Get Dropdown by uuid",
                "operationId": "getDropdownById",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Dropdown",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Dropdown has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'dropdowns': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'label': 'ads',\r\n     *             'value': 'ads',\r\n     *             'type': 'agent',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *             'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *             'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dropdown Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dropdown"
                ],
                "summary": "Delete Dropdown",
                "description": "Delete existing Dropdown",
                "operationId": "deleteDropdown",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Dropdown",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Dropdown has been Deleted Successfully!',\r\n     *        'data': {\r\n     *          'dropdowns': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'label': 'ads',\r\n     *             'value': 'ads',\r\n     *             'type': 'agent',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *             'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *             'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dropdown Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/single-image-upload": {
            "post": {
                "tags": [
                    "Image"
                ],
                "summary": "Upload Single Image",
                "description": "Upload Single Image",
                "operationId": "uploadSingleImage",
                "requestBody": {
                    "description": "Pass image data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "image",
                                    "jwtToken"
                                ],
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "image",
                                        "example": "abc.png"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Image has been uploaded Successfully!',\r\n     *       'data': 'http://127.0.0.1:8000/storage/user/profile/AvcIa0P5eHpPgr974WSXZi2yLgGzEa.png'\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Image Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-company-info": {
            "get": {
                "tags": [
                    "Invoice Creation"
                ],
                "summary": "Get Company Info",
                "description": "Get Company Info ny name",
                "operationId": "getAgentPayoutByName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort company info by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "company name,company address"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Company Info has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'company_info': [\r\n     *             'cloudrepai',\r\n     *             'canada'\r\n     *          ]\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Company Info Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/search-users/{role}": {
            "get": {
                "tags": [
                    "Invoice Creation"
                ],
                "summary": "Search User By Role",
                "description": "Get User By role",
                "operationId": "searchUsersByRole",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "role of User",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "agent/publisher/client"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'users': [\r\n     *              {\r\n     *                  'user_uuid': '6e3cd84f-b3e5-4387-87da-0b7654f248d2',\r\n     *                  'name': 'Publisher'\r\n     *              },\r\n     *              {\r\n     *                  'user_uuid': '2b57d931-d73e-41e7-b278-c2272c2513c4',\r\n     *                  'name': 'Agent'\r\n     *              },\r\n     *              {\r\n     *                  'user_uuid': 'e611d3f1-3dbc-4130-96fb-210a7ec20b04',\r\n     *                  'name': 'Tara Michael'\r\n     *              }\r\n     *          ]\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-user-detail": {
            "get": {
                "tags": [
                    "Invoice Creation"
                ],
                "summary": "Get User Detail",
                "description": "Get User Detail by user_uuid",
                "operationId": "getUserDetailByUuid",
                "parameters": [
                    {
                        "name": "user_uuid",
                        "in": "path",
                        "description": "user_uuid of User",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "6e3cd84f-b3e5-4387-87da-0b7654f248d2"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User data has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'user_data': {\r\n     *              'uuid': 'fdeac036-8250-4c42-8ec0-1ae84688a713',\r\n     *              'name': 'Admin',\r\n     *              'first_name': 'test',\r\n     *              'last_name': 'admin',\r\n     *              'email': 'admin@gmail.com',\r\n     *              'phone_no': '+VEuq6Gzp2m',\r\n     *              'role': null,\r\n     *              'profile_photo': {},\r\n     *              'created_at': '2022-08-04T16:12:39.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Data Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/my-campaign-data": {
            "get": {
                "tags": [
                    "Invoice Creation"
                ],
                "summary": "Get Campaign By Current User",
                "description": "Get Campaign By Current User",
                "operationId": "getCampaignByUserId",
                "parameters": [
                    {
                        "name": "user_uuid",
                        "in": "path",
                        "description": "user_uuid of User",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "6e3cd84f-b3e5-4387-87da-0b7654f248d2"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'campaign': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'step': '1',\r\n     *              'user_uuid': null,\r\n     *              'service_uuid': 'ietritetuirweti',\r\n     *              'name': test campaign,\r\n     *              'phone_no': null,\r\n     *              'title': null,\r\n     *              'email': null,\r\n     *              'address': null,\r\n     *              'country': null,\r\n     *              'state': null,\r\n     *              'city': null,\r\n     *              'zipcode': null,\r\n     *              'service_id': '2',\r\n     *              'category_id': null,\r\n     *              'vertical_id': null,\r\n     *              'language': null,\r\n     *              'currency': null,\r\n     *              'start_date': null,\r\n     *              'start_time': null,\r\n     *              'end_date': null,\r\n     *              'end_time': null,\r\n     *              'description': null,\r\n     *              'website_url': null,\r\n     *              'deeplink': null,\r\n     *              'blog_url': null,\r\n     *              'facebook_url': null,\r\n     *              'twitter_url': null,\r\n     *              'linkedin_url': null,\r\n     *              'publisher_per_call_duration': 5,\r\n     *              'payout_per_call': 1.5,\r\n     *              'client_per_call_duration': 5,\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-invoice": {
            "post": {
                "tags": [
                    "Invoice Creation"
                ],
                "summary": "Create Invoice",
                "description": "Create Invoice",
                "operationId": "createInvoice",
                "requestBody": {
                    "description": "Pass Publisher Payout Setting data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_uuid"
                                ],
                                "properties": {
                                    "invoice_number": {
                                        "type": "string",
                                        "format": "invoice_number",
                                        "example": "INV0001"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2022-08-08"
                                    },
                                    "terms": {
                                        "type": "string",
                                        "format": "terms",
                                        "example": "custom/7 days"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "due_date",
                                        "example": "2022-08-08"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "description",
                                        "example": "test description"
                                    },
                                    "rate": {
                                        "type": "doubleInt",
                                        "format": "rate",
                                        "example": "5.2"
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "quantity",
                                        "example": "5"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "amount",
                                        "example": "5.5"
                                    },
                                    "tax": {
                                        "type": "number",
                                        "format": "tax",
                                        "example": "5.2"
                                    },
                                    "discount": {
                                        "type": "number",
                                        "format": "discount",
                                        "example": "5.3"
                                    },
                                    "additional_detail": {
                                        "type": "string",
                                        "format": "additional_detail",
                                        "example": "test detail"
                                    },
                                    "note": {
                                        "type": "string",
                                        "format": "note",
                                        "example": "test note"
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "user_id",
                                        "example": "8a1b2fd7-0ffc-43e6-8172-aa937583ad74"
                                    },
                                    "campaign_id": {
                                        "type": "string",
                                        "format": "campaign_id",
                                        "example": "8a1b2fd7-0ffc-43e6-8172-aa937583ad74"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Invoice has been Created Successfully!',\r\n     *       'data': {\r\n     *          'invoice': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'date': 'August 8, 2022',\r\n     *             'terms', 'custom/7 days',\r\n     *             'due_date': August 8, 2022,\r\n     *             'description': test description,\r\n     *             'rate': 5.2,\r\n     *             'quantity': '5',\r\n     *             'amount': '5.5',\r\n     *             'tax': '5.2',\r\n     *             'discount': '5.5',\r\n     *             'addition_detail': 'test detail',\r\n     *             'note': 'test note',\r\n     *             'user_id': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'campaign_id': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-invoice-terms": {
            "get": {
                "tags": [
                    "Invoice Creation"
                ],
                "summary": "Get invoice terms by dropdown type",
                "description": "Get invoice terms by dropdown typw",
                "operationId": "getInvoiceTermsByType",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type of Dropdown",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "custom/7 days"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Invoice Term has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'invoice_terms': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'label': 'Custom',\r\n     *             'value', 'custom',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice Term Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/lessons": {
            "get": {
                "tags": [
                    "Lesson"
                ],
                "summary": "Get Lessons",
                "description": "Get Lessons",
                "operationId": "getLessons",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort lessons by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test lessons"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort lessons by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort lessons by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Lessons has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test lesson',\r\n     *          'description': 'test description',\r\n     *          'is_active': 'false',\r\n     *          'course_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lessons Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Lesson"
                ],
                "summary": "Create Lesson",
                "description": "Create Lesson",
                "operationId": "createLesson",
                "requestBody": {
                    "description": "Pass Lesson data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test category"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "description",
                                        "example": "test description"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "is_active",
                                        "example": "true/false"
                                    },
                                    "course_id": {
                                        "type": "integer",
                                        "format": "course_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Lesson has been Created Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test lesson',\r\n     *          'description': 'test description',\r\n     *          'is_active': 'false',\r\n     *          'course_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/lessons/{lesson_uuid}": {
            "get": {
                "tags": [
                    "Lesson"
                ],
                "summary": "Get Lesson",
                "description": "Get Lesson by lesson_uuid",
                "operationId": "getLessonById",
                "parameters": [
                    {
                        "name": "lesson_uuid",
                        "in": "path",
                        "description": "lesson_uuid of Lesson",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Lesson has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test lesson',\r\n     *          'description': 'test description',\r\n     *          'is_active': 'false',\r\n     *          'course_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Lesson"
                ],
                "summary": "Update Lesson",
                "description": "Update Lesson",
                "operationId": "updateLesson",
                "parameters": [
                    {
                        "name": "lesson_uuid",
                        "in": "path",
                        "description": "lesson_uuid of Lesson",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "requestBody": {
                    "description": "Pass Lesson data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test category"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "description",
                                        "example": "test description"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "is_active",
                                        "example": "true/false"
                                    },
                                    "course_id": {
                                        "type": "integer",
                                        "format": "course_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Lesson has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test lesson',\r\n     *          'description': 'test description',\r\n     *          'is_active': 'false',\r\n     *          'course_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Lesson"
                ],
                "summary": "Delete Lesson",
                "description": "Delete existing Lesson",
                "operationId": "deleteLesson",
                "parameters": [
                    {
                        "name": "lesson_uuid",
                        "in": "path",
                        "description": "lesson_uuid of Lesson",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Lesson has been Deleted Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test lesson',\r\n     *          'description': 'test description',\r\n     *          'is_active': 'false',\r\n     *          'course_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-course-lesson/{course_id}": {
            "get": {
                "tags": [
                    "Lesson"
                ],
                "summary": "Get Course Lesson",
                "description": "Get Lesson Course by course_id",
                "operationId": "getCourseLessonById",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "course_id of Course",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Lesson has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test lesson',\r\n     *          'description': 'test description',\r\n     *          'is_active': 'false',\r\n     *          'course_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/fetch-buisness-scale-type": {
            "get": {
                "tags": [
                    "Pre Registration"
                ],
                "summary": "Get Business Scale Type",
                "description": "Get Business Scale Type",
                "operationId": "getBusinessScaleType",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "sort dropdown by type",
                        "schema": {
                            "type": "string"
                        },
                        "example": "business_scale_type"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'dropdown against business scale type fetched successfully!',\r\n     *       'data': {\r\n     *          'dropdowns': [\r\n     *              {\r\n     *                  'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *                  'label': 'Earning an income',\r\n     *                  'value': 'earning an income',\r\n     *                  'type': 'business_scale_type',\r\n     *                  'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *              },\r\n     *              {\r\n     *                  'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *                  'label': 'Scale My business',\r\n     *                  'value': 'scale my business',\r\n     *                  'type':  'business_scale_type',\r\n     *                  'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *              }\r\n     *          ]\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dropdown not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-selected-record": {
            "get": {
                "tags": [
                    "Pre Registration"
                ],
                "summary": "Get Selected Record",
                "description": "Get Selected Record",
                "operationId": "getSelectedRecord",
                "parameters": [
                    {
                        "name": "ip_address",
                        "in": "query",
                        "description": "sort pre registration by ip address",
                        "schema": {
                            "type": "string"
                        },
                        "example": "127.0.0.1"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "sort dropdown by value",
                        "schema": {
                            "type": "string"
                        },
                        "example": "scale my business"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Pre Registration fetched successfully!',\r\n     *       'data': {\r\n     *          'PreRegistration': {\r\n     *                  'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *                  'name': 'test pre registration',\r\n     *                  'email': null,\r\n     *                  'business_scale_type': 'start my business',\r\n     *                  'phone_no': null,\r\n     *                  'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *              },\r\n     *           'dropdown': {\r\n     *                  'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *                  'label': 'Start My business',\r\n     *                  'value': 'start my business',\r\n     *                  'type':  'business_scale_type',\r\n     *                  'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *              }\r\n     *          ]\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dropdown not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-preg-step-one": {
            "post": {
                "tags": [
                    "Pre Registration"
                ],
                "summary": "Create Pre Registration Step One",
                "description": "Create Pre Registration Step One",
                "operationId": "createPreRegistrationStepOne",
                "requestBody": {
                    "description": "Pass Pre Registration Step One data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "busniess_scale_type"
                                ],
                                "properties": {
                                    "business_scale_type": {
                                        "type": "string",
                                        "format": "business_scale_type",
                                        "example": "36973573-1b28-4ad9-92f9-a1df6bb599d8"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Pre Registration Step One has been created successfully!',\r\n     *       'data': {\r\n     *          'preRegistration': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'name': null,\r\n     *             'email': null,\r\n     *             'business_scale_type': 'start my business',\r\n     *             'phone_no': null,\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pre Registration not created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-preg-step-two": {
            "post": {
                "tags": [
                    "Pre Registration"
                ],
                "summary": "Create Pre Registration Step Two",
                "description": "Create Pre Registration Step Two",
                "operationId": "createPreRegistrationStepTwo",
                "requestBody": {
                    "description": "Pass Pre Registration Step Two data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "uuid,name"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "36973573-1b28-4ad9-92f9-a1df6bb599d8"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test pre registration"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Pre Registration Step Two has been Created Successfully!',\r\n     *       'data': {\r\n     *          'preRegistration': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'name': null,\r\n     *             'email': null,\r\n     *             'business_scale_type': 'start my business',\r\n     *             'phone_no': null,\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pre Registration not created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-copon": {
            "post": {
                "tags": [
                    "Promo Code"
                ],
                "summary": "Create Copon",
                "description": "Create Copon",
                "operationId": "storeCopon",
                "requestBody": {
                    "description": "Pass Promo Code data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title,type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "format": "title",
                                        "example": "winter2022"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "type",
                                        "example": "fixed/percentage"
                                    },
                                    "amount": {
                                        "type": "integer",
                                        "format": "amount",
                                        "example": "400"
                                    },
                                    "frequency": {
                                        "type": "integer",
                                        "format": "frequency",
                                        "example": "5"
                                    },
                                    "is_applied": {
                                        "type": "boolen",
                                        "format": "is_applied",
                                        "example": "true/false"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "start_date",
                                        "example": "2022-10-19"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "end_date",
                                        "example": "2022-10-20"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Promo Code has been created successfully!',\r\n     *       'data': {\r\n     *          'promoCode': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'title': 'winter2022',\r\n     *              'type': 'fixed',\r\n     *              'amount': '500',\r\n     *              'frequency': '5',\r\n     *              'is_applied': 'true',\r\n     *              'start_date': '2022-10-19',\r\n     *              'end_date': '2022-10-20',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Promo Code Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-copon": {
            "get": {
                "tags": [
                    "Promo Code"
                ],
                "summary": "Get Copon",
                "description": "Get Copon",
                "operationId": "getCopon",
                "requestBody": {
                    "description": "Pass Promo Code data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "title",
                                        "format": "title",
                                        "example": "winter2022"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Promo Code has been fetched successfully!',\r\n     *       'data': {\r\n     *          'promoCode': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'title': 'winter2022',\r\n     *              'type': 'fixed',\r\n     *              'amount': '500',\r\n     *              'frequency': '5',\r\n     *              'is_applied': 'true',\r\n     *              'start_date': '2022-10-19',\r\n     *              'end_date': '2022-10-20',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Promo Code not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-publisher-competators": {
            "post": {
                "tags": [
                    "Publisher Competator"
                ],
                "summary": "Create Publisher Competator",
                "description": "Create Publisher Competator",
                "operationId": "createPublisherCompetator",
                "requestBody": {
                    "description": "Pass Publisher Competator data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "url"
                                ],
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "test.com"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "format": "user_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Competator has been Created Successfully!',\r\n     *       'data': {\r\n     *          'publisher_competator': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'url': 'test.com',\r\n     *             'user_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *             'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *             'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Competator Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-publisher-competators": {
            "get": {
                "tags": [
                    "Publisher Competator"
                ],
                "summary": "Get Publisher Competator By Current User",
                "description": "Get Publisher Competator by login user",
                "operationId": "getPublisherCompetator",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Competator has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'publisher_competator': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'ulr': 'test.com',\r\n     *             'user_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *             'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *             'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Competator Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-publisher-interests": {
            "post": {
                "tags": [
                    "Publisher Interest"
                ],
                "summary": "Create Publisher Interest",
                "description": "Create Publisher Interest",
                "operationId": "createPublisherInterest",
                "requestBody": {
                    "description": "Pass Publisher Interest data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "is_active",
                                        "example": "true"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "format": "user_id",
                                        "example": "1"
                                    },
                                    "dropdown_id": {
                                        "type": "integer",
                                        "format": "dropdown_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Interest has been Created Successfully!',\r\n     *       'data': {\r\n     *          'publisher_interest': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'name': 'test',\r\n     *             'is_active': 'true',\r\n     *             'user_id': '1',\r\n     *             'dropdown_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *             'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *             'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Interest Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-publisher-interests": {
            "get": {
                "tags": [
                    "Publisher Interest"
                ],
                "summary": "Get Publisher Interest By Current User",
                "description": "Get Publisher Interest by login user",
                "operationId": "getPublisherInterest",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Interest has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'publisher_interest': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'name': 'test',\r\n     *             'is_active': 'true',\r\n     *             'user_id': '1',\r\n     *             'dropdown_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *             'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *             'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Interest Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/publisher-profile-items": {
            "get": {
                "tags": [
                    "Publisher Profile Item"
                ],
                "summary": "Get Publisher Profile Item",
                "description": "Get Publisher Profile Item",
                "operationId": "getPublisherProfileItem",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort publisher profile items by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test publisher profile item"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort publisher profile items by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort publisher profile items by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Profile Item has been Fetched Successfully!',\r\n     *      'data': {\r\n     *          'publisher_profile_item': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'company_website': ''test.com',\r\n     *             'belongs_to': 'client_website',\r\n     *             'user_id': '1',\r\n     *             'step' : '2',\r\n     *             'dropdown_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Publisher Profile Item"
                ],
                "summary": "Update Publisher Profile Item of Current User",
                "description": "Update Publisher Profile Item",
                "operationId": "updatePublisherProfile",
                "requestBody": {
                    "description": "Pass Publisher Profile Item data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "company_website",
                                    "belongs_to"
                                ],
                                "properties": {
                                    "company_website": {
                                        "type": "string",
                                        "format": "company_website",
                                        "example": "test.com"
                                    },
                                    "belongs_to": {
                                        "type": "enum",
                                        "format": "belongs_to",
                                        "example": "client_website"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "format": "user_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Profile Item has been Updated Successfully!',\r\n     *        'data': {\r\n     *         'publisher_profile_item': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'company_website': ''test.com',\r\n     *             'belongs_to': 'client_website',\r\n     *             'user_id': '1',\r\n     *             'step' : '2',\r\n     *             'dropdown_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Publisher Profile Item"
                ],
                "summary": "Create Publisher Profile Item",
                "description": "Create Publisher Profile Item",
                "operationId": "createPublisherProfileItem",
                "requestBody": {
                    "description": "Pass Publisher Profile Item data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "company_website",
                                    "belongs_to"
                                ],
                                "properties": {
                                    "company_website": {
                                        "type": "string",
                                        "format": "company_website",
                                        "example": "test.com"
                                    },
                                    "belongs_to": {
                                        "type": "enum",
                                        "format": "belongs_to",
                                        "example": "client_website"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "format": "user_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Profile Item has been Created Successfully!',\r\n     *       'data': {\r\n     *          'publisher_profile_item': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'company_website': ''test.com',\r\n     *             'belongs_to': 'client_website',\r\n     *             'user_id': '1',\r\n     *             'step' : '2',\r\n     *             'dropdown_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/publisher-profile-items/{uuid}": {
            "get": {
                "tags": [
                    "Publisher Profile Item"
                ],
                "summary": "Get Publisher Profile Item by uuid",
                "description": "Get Publisher Profile Item by uuid",
                "operationId": "getPublisherProfileItemById",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Publisher Profile Item",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Profile Item has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'publisher_profile_item': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'company_website': ''test.com',\r\n     *             'belongs_to': 'client_website',\r\n     *             'user_id': '1',\r\n     *             'step' : '2',\r\n     *             'dropdown_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Publisher Profile Item"
                ],
                "summary": "Delete Publisher Profile Item",
                "description": "Delete existing Publisher Profile Item",
                "operationId": "deletePublisherProfileItem",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Publisher Profile Item",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Profile Item has been Deleted Successfully!',\r\n     *        'data': {\r\n     *          'publisher_profile_item': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'company_website': ''test.com',\r\n     *             'belongs_to': 'client_website',\r\n     *             'user_id': '1',\r\n     *             'step' : '2',\r\n     *             'dropdown_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/my-publisher-profile-items": {
            "get": {
                "tags": [
                    "Publisher Profile Item"
                ],
                "summary": "Get Publisher Profile Item By Current User",
                "description": "Get ublisher Profile Item by login user",
                "operationId": "getPublisherProfile",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Profile Item has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'publisher_profile_item': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'company_website': ''test.com',\r\n     *             'belongs_to': 'client_website',\r\n     *             'user_id': '1',\r\n     *             'step' : '2',\r\n     *             'dropdown_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Profile Item Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-publisher-options": {
            "post": {
                "tags": [
                    "Publisher Profile Item"
                ],
                "summary": "Create Publisher Profile Option",
                "description": "Create Publisher Option",
                "operationId": "createPublisherOption",
                "requestBody": {
                    "description": "Pass Publisher Option data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "step": {
                                        "type": "integer",
                                        "format": "step",
                                        "example": "2"
                                    },
                                    "dropdown_id": {
                                        "type": "string",
                                        "format": "dropdown_id",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Option has been Created Successfully!',\r\n     *       'data': {\r\n     *          'publisher_profile_item': {\r\n     *             'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *             'company_website': ''test.com',\r\n     *             'belongs_to': 'client_website',\r\n     *             'user_id': '1',\r\n     *             'step' : '2',\r\n     *             'dropdown_id': '1',\r\n     *             'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Option Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/selected-publisher-option": {
            "get": {
                "tags": [
                    "Publisher Profile Item"
                ],
                "summary": "Get Selected Publisher Options",
                "description": "Get Selected Publisher Options",
                "operationId": "getSelectedPublisherOption",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher Selected Options has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'selected_publisher_option': {\r\n     *             'label': 'Organic Search',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Publisher Selected Option Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/questions": {
            "get": {
                "tags": [
                    "Question"
                ],
                "summary": "Get Questions",
                "description": "Get Questions",
                "operationId": "getQuestions",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort questions by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test questions"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort questions by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort questions by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Questions has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test question',\r\n     *          'is_active': 'false',\r\n     *       'questionOptions': [\r\n     *           {\r\n     *              'id': '1',\r\n     *              'uuid': '7609a726-8353-4617-8d47-ae3955d62fbb',\r\n     *              'name': 'test',\r\n     *              'is_active': 'true',\r\n     *              'question_id': '3',\r\n     *              'created_at': '2022-06-21T18:04:56.000000Z',\r\n     *              'updated_at': '2022-06-21T18:15:55.000000Z',\r\n     *              'deleted_at': null\r\n     *          },\r\n     *          {\r\n     *              'id': 2,\r\n     *              'uuid': '6f4cd3f1-2753-426b-9174-50ec9850a507',\r\n     *              'name': 'test question opiton',\r\n     *              'is_active': 'true',\r\n     *              'question_id': '3',\r\n     *              'created_at': '2022-06-21T18:16:29.000000Z',\r\n     *              'updated_at': '2022-06-21T18:16:29.000000Z',\r\n     *              'deleted_at': null\r\n     *          },\r\n     *       ]\r\n     *          'quiz_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Questions Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Question"
                ],
                "summary": "Create Question",
                "description": "Create Question",
                "operationId": "createQuestion",
                "requestBody": {
                    "description": "Pass Question data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test questions"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "is_active",
                                        "example": "true/false"
                                    },
                                    "quiz_id": {
                                        "type": "integer",
                                        "format": "quiz_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Question has been Created Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test question',\r\n     *          'is_active': 'false',\r\n     *       'questionOptions': [\r\n     *           {\r\n     *              'id': '1',\r\n     *              'uuid': '7609a726-8353-4617-8d47-ae3955d62fbb',\r\n     *              'name': 'test',\r\n     *              'is_active': 'true',\r\n     *              'question_id': '3',\r\n     *              'created_at': '2022-06-21T18:04:56.000000Z',\r\n     *              'updated_at': '2022-06-21T18:15:55.000000Z',\r\n     *              'deleted_at': null\r\n     *          },\r\n     *          {\r\n     *              'id': 2,\r\n     *              'uuid': '6f4cd3f1-2753-426b-9174-50ec9850a507',\r\n     *              'name': 'test question opiton',\r\n     *              'is_active': 'true',\r\n     *              'question_id': '3',\r\n     *              'created_at': '2022-06-21T18:16:29.000000Z',\r\n     *              'updated_at': '2022-06-21T18:16:29.000000Z',\r\n     *              'deleted_at': null\r\n     *          },\r\n     *       ]\r\n     *          'quiz_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/questions/{question_uuid}": {
            "get": {
                "tags": [
                    "Question"
                ],
                "summary": "Get Question",
                "description": "Get Question by questions_uuid",
                "operationId": "getQuestionById",
                "parameters": [
                    {
                        "name": "question_uuid",
                        "in": "path",
                        "description": "question_uuid of Quiz",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Question has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test question',\r\n     *          'is_active': 'false',\r\n     *       'questionOptions': [\r\n     *           {\r\n     *              'id': '1',\r\n     *              'uuid': '7609a726-8353-4617-8d47-ae3955d62fbb',\r\n     *              'name': 'test',\r\n     *              'is_active': 'true',\r\n     *              'question_id': '3',\r\n     *              'created_at': '2022-06-21T18:04:56.000000Z',\r\n     *              'updated_at': '2022-06-21T18:15:55.000000Z',\r\n     *              'deleted_at': null\r\n     *          },\r\n     *          {\r\n     *              'id': 2,\r\n     *              'uuid': '6f4cd3f1-2753-426b-9174-50ec9850a507',\r\n     *              'name': 'test question opiton',\r\n     *              'is_active': 'true',\r\n     *              'question_id': '3',\r\n     *              'created_at': '2022-06-21T18:16:29.000000Z',\r\n     *              'updated_at': '2022-06-21T18:16:29.000000Z',\r\n     *              'deleted_at': null\r\n     *          },\r\n     *       ]\r\n     *          'quiz_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Question"
                ],
                "summary": "Update Question",
                "description": "Update Question",
                "operationId": "updateQuestion",
                "parameters": [
                    {
                        "name": "question_uuid",
                        "in": "path",
                        "description": "question_uuid of Question",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "requestBody": {
                    "description": "Pass Question data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test question"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "is_active",
                                        "example": "true/false"
                                    },
                                    "quiz_id": {
                                        "type": "integer",
                                        "format": "quiz_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Question has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test quiz',\r\n     *          'is_active': 'false',\r\n     *       'questionOptions': [\r\n     *           {\r\n     *              'id': '1',\r\n     *              'uuid': '7609a726-8353-4617-8d47-ae3955d62fbb',\r\n     *              'name': 'test',\r\n     *              'is_active': 'true',\r\n     *              'question_id': '3',\r\n     *              'created_at': '2022-06-21T18:04:56.000000Z',\r\n     *              'updated_at': '2022-06-21T18:15:55.000000Z',\r\n     *              'deleted_at': null\r\n     *          },\r\n     *          {\r\n     *              'id': 2,\r\n     *              'uuid': '6f4cd3f1-2753-426b-9174-50ec9850a507',\r\n     *              'name': 'test question opiton',\r\n     *              'is_active': 'true',\r\n     *              'question_id': '3',\r\n     *              'created_at': '2022-06-21T18:16:29.000000Z',\r\n     *              'updated_at': '2022-06-21T18:16:29.000000Z',\r\n     *              'deleted_at': null\r\n     *          },\r\n     *       ]\r\n     *          'quiz_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Question"
                ],
                "summary": "Delete Question",
                "description": "Delete existing Question",
                "operationId": "deleteQuestion",
                "parameters": [
                    {
                        "name": "Question_uuid",
                        "in": "path",
                        "description": "question_uuid of Question",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Question has been Deleted Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test quiz',\r\n     *          'is_active': 'false',\r\n     *       'questionOptions': [\r\n     *           {\r\n     *              'id': '1',\r\n     *              'uuid': '7609a726-8353-4617-8d47-ae3955d62fbb',\r\n     *              'name': 'test',\r\n     *              'is_active': 'true',\r\n     *              'question_id': '3',\r\n     *              'created_at': '2022-06-21T18:04:56.000000Z',\r\n     *              'updated_at': '2022-06-21T18:15:55.000000Z',\r\n     *              'deleted_at': null\r\n     *          },\r\n     *          {\r\n     *              'id': 2,\r\n     *              'uuid': '6f4cd3f1-2753-426b-9174-50ec9850a507',\r\n     *              'name': 'test question opiton',\r\n     *              'is_active': 'true',\r\n     *              'question_id': '3',\r\n     *              'created_at': '2022-06-21T18:16:29.000000Z',\r\n     *              'updated_at': '2022-06-21T18:16:29.000000Z',\r\n     *              'deleted_at': null\r\n     *          },\r\n     *       ]\r\n     *          'quiz_id': '1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/question-options": {
            "get": {
                "tags": [
                    "Question Option"
                ],
                "summary": "Get Question Options",
                "description": "Get Question Options",
                "operationId": "getQuestionOptions",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort question_options by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test question_options"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort question_options by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort question_options by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Question Options has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test question option',\r\n     *          'is_active': 'false',\r\n     *          'is_true': 'false',\r\n     *          'question_id': '3',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question Options Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Question Option"
                ],
                "summary": "Create Question Option",
                "description": "Create Question Option",
                "operationId": "createQuestionOption",
                "requestBody": {
                    "description": "Pass Question Option data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test questions"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "is_active",
                                        "example": "true/false"
                                    },
                                    "is_true": {
                                        "type": "boolean",
                                        "format": "is_true",
                                        "example": "true/false"
                                    },
                                    "question_id": {
                                        "type": "integer",
                                        "format": "question_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Question Option has been Created Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test question option',\r\n     *          'is_active': 'false',\r\n     *          'is_true': 'false',\r\n     *          'question_id': '3',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question Option Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/question-options/{question_options_uuid}": {
            "get": {
                "tags": [
                    "Question Option"
                ],
                "summary": "Get Question Option",
                "description": "Get Question Option by question_options_uuid",
                "operationId": "getQuestionOptionById",
                "parameters": [
                    {
                        "name": "question_options_uuid",
                        "in": "path",
                        "description": "question_options_uuid of Question Option",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Question Option has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test question option',\r\n     *          'is_active': 'false',\r\n     *          'is_true': 'false',\r\n     *          'question_id': '3',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question Option Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Question Option"
                ],
                "summary": "Delete Question Option",
                "description": "Delete existing Question Option",
                "operationId": "deleteQuestion Option",
                "parameters": [
                    {
                        "name": "question_options_uuid",
                        "in": "path",
                        "description": "question_options_uuid of Question Option",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Question Option has been Deleted Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test quiz',\r\n     *          'is_active': 'false',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question Option Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/questions/{question_options_uuid}": {
            "put": {
                "tags": [
                    "Question Option"
                ],
                "summary": "Update Question Option",
                "description": "Update Question Option",
                "operationId": "updateQuestion Option",
                "parameters": [
                    {
                        "name": "question_options_uuid",
                        "in": "path",
                        "description": "question_options_uuid of Question Option",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "requestBody": {
                    "description": "Pass Question Option data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test questions"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "is_active",
                                        "example": "true/false"
                                    },
                                    "is_true": {
                                        "type": "boolean",
                                        "format": "is_true",
                                        "example": "true/false"
                                    },
                                    "question_id": {
                                        "type": "integer",
                                        "format": "question_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Question Option has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test question option',\r\n     *          'is_active': 'false',\r\n     *          'is_true': 'false',\r\n     *          'question_id': '3',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question Option Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/quizes": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get Quizes",
                "description": "Get Quizes",
                "operationId": "getQuizes",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort quizes by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test lessons"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort quizes by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort quizes by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Quizes has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test quiz',\r\n     *          'is_active': 'false',\r\n     *      'questions': [\r\n     *          {\r\n     *              'id': 3,\r\n     *              'uuid': 'd3d7fe27-7397-4e9f-a31a-3c7009054686',\r\n     *              'name': 'test question',\r\n     *              'is_active': false,\r\n     *              'questionOptions': [\r\n     *                 {\r\n     *                   'id': '1',\r\n     *                   'uuid': '7609a726-8353-4617-8d47-ae3955d62fbb',\r\n     *                   'name': 'test',\r\n     *                   'is_active': 'true',\r\n     *                   'question_id': '3',\r\n     *                   'created_at': '2022-06-21T18:04:56.000000Z',\r\n     *                   'updated_at': '2022-06-21T18:15:55.000000Z',\r\n     *                   'deleted_at': null\r\n     *                  },\r\n     *                  {\r\n     *                   'id': 2,\r\n     *                   'uuid': '6f4cd3f1-2753-426b-9174-50ec9850a507',\r\n     *                   'name': 'test question opiton',\r\n     *                   'is_active': 'true',\r\n     *                   'question_id': '3',\r\n     *                   'created_at': '2022-06-21T18:16:29.000000Z',\r\n     *                   'updated_at': '2022-06-21T18:16:29.000000Z',\r\n     *                   'deleted_at': null\r\n     *                  },\r\n     *              ]\r\n     *              'created_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'updated_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'deleted_at': null\r\n     *           },\r\n     *           {\r\n     *              'id': 4,\r\n     *              'uuid': 'd3d7fe27-7397-4e9f-a31a-3c7009054686',\r\n     *              'name': 'test question',\r\n     *              'is_active': false,\r\n     *              'questionOptions': [],\r\n     *              'created_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'updated_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *       ]\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quizes Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Create Quiz",
                "description": "Create Quiz",
                "operationId": "createQuiz",
                "requestBody": {
                    "description": "Pass Quiz data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test quiz"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "is_active",
                                        "example": "true/false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Quiz has been Created Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test quiz',\r\n     *          'is_active': 'false',\r\n     *       'questions': [\r\n     *          {\r\n     *              'id': 3,\r\n     *              'uuid': 'd3d7fe27-7397-4e9f-a31a-3c7009054686',\r\n     *              'name': 'test question',\r\n     *              'is_active': false,\r\n     *              'questionOptions': [\r\n     *                 {\r\n     *                   'id': '1',\r\n     *                   'uuid': '7609a726-8353-4617-8d47-ae3955d62fbb',\r\n     *                   'name': 'test',\r\n     *                   'is_active': 'true',\r\n     *                   'question_id': '3',\r\n     *                   'created_at': '2022-06-21T18:04:56.000000Z',\r\n     *                   'updated_at': '2022-06-21T18:15:55.000000Z',\r\n     *                   'deleted_at': null\r\n     *                  },\r\n     *                  {\r\n     *                   'id': 2,\r\n     *                   'uuid': '6f4cd3f1-2753-426b-9174-50ec9850a507',\r\n     *                   'name': 'test question opiton',\r\n     *                   'is_active': 'true',\r\n     *                   'question_id': '3',\r\n     *                   'created_at': '2022-06-21T18:16:29.000000Z',\r\n     *                   'updated_at': '2022-06-21T18:16:29.000000Z',\r\n     *                   'deleted_at': null\r\n     *                  },\r\n     *              ]\r\n     *              'created_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'updated_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'deleted_at': null\r\n     *           },\r\n     *           {\r\n     *              'id': 4,\r\n     *              'uuid': 'd3d7fe27-7397-4e9f-a31a-3c7009054686',\r\n     *              'name': 'test question',\r\n     *              'is_active': false,\r\n     *              questionOptions: [],\r\n     *              'created_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'updated_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *       ]\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/quizes/{quiz_uuid}": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get Quiz",
                "description": "Get Quiz by quiz_uuid",
                "operationId": "getQuizById",
                "parameters": [
                    {
                        "name": "quiz_uuid",
                        "in": "path",
                        "description": "quiz_uuid of Quiz",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Quiz has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test quiz',\r\n     *          'is_active': 'false',\r\n     *       'questions': [\r\n     *          {\r\n     *              'id': 3,\r\n     *              'uuid': 'd3d7fe27-7397-4e9f-a31a-3c7009054686',\r\n     *              'name': 'test question',\r\n     *              'is_active': false,\r\n     *              'questionOptions': [\r\n     *                 {\r\n     *                   'id': '1',\r\n     *                   'uuid': '7609a726-8353-4617-8d47-ae3955d62fbb',\r\n     *                   'name': 'test',\r\n     *                   'is_active': 'true',\r\n     *                   'question_id': '3',\r\n     *                   'created_at': '2022-06-21T18:04:56.000000Z',\r\n     *                   'updated_at': '2022-06-21T18:15:55.000000Z',\r\n     *                   'deleted_at': null\r\n     *                  },\r\n     *                  {\r\n     *                   'id': 2,\r\n     *                   'uuid': '6f4cd3f1-2753-426b-9174-50ec9850a507',\r\n     *                   'name': 'test question opiton',\r\n     *                   'is_active': 'true',\r\n     *                   'question_id': '3',\r\n     *                   'created_at': '2022-06-21T18:16:29.000000Z',\r\n     *                   'updated_at': '2022-06-21T18:16:29.000000Z',\r\n     *                   'deleted_at': null\r\n     *                  },\r\n     *              ]\r\n     *              'created_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'updated_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'deleted_at': null\r\n     *           },\r\n     *           {\r\n     *              'id': 4,\r\n     *              'uuid': 'd3d7fe27-7397-4e9f-a31a-3c7009054686',\r\n     *              'name': 'test question',\r\n     *              'is_active': false,\r\n     *              questionOptions: [],\r\n     *              'created_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'updated_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *       ]\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Delete Quiz",
                "description": "Delete existing Quiz",
                "operationId": "deleteQuiz",
                "parameters": [
                    {
                        "name": "quiz_uuid",
                        "in": "path",
                        "description": "quiz_uuid of Quiz",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Quiz has been Deleted Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test quiz',\r\n     *          'is_active': 'false',\r\n     *       'questions': [\r\n     *          {\r\n     *              'id': 3,\r\n     *              'uuid': 'd3d7fe27-7397-4e9f-a31a-3c7009054686',\r\n     *              'name': 'test question',\r\n     *              'is_active': false,\r\n     *              'questionOptions': [\r\n     *                 {\r\n     *                   'id': '1',\r\n     *                   'uuid': '7609a726-8353-4617-8d47-ae3955d62fbb',\r\n     *                   'name': 'test',\r\n     *                   'is_active': 'true',\r\n     *                   'question_id': '3',\r\n     *                   'created_at': '2022-06-21T18:04:56.000000Z',\r\n     *                   'updated_at': '2022-06-21T18:15:55.000000Z',\r\n     *                   'deleted_at': null\r\n     *                  },\r\n     *                  {\r\n     *                   'id': 2,\r\n     *                   'uuid': '6f4cd3f1-2753-426b-9174-50ec9850a507',\r\n     *                   'name': 'test question opiton',\r\n     *                   'is_active': 'true',\r\n     *                   'question_id': '3',\r\n     *                   'created_at': '2022-06-21T18:16:29.000000Z',\r\n     *                   'updated_at': '2022-06-21T18:16:29.000000Z',\r\n     *                   'deleted_at': null\r\n     *                  },\r\n     *              ]\r\n     *              'created_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'updated_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'deleted_at': null\r\n     *           },\r\n     *           {\r\n     *              'id': 4,\r\n     *              'uuid': 'd3d7fe27-7397-4e9f-a31a-3c7009054686',\r\n     *              'name': 'test question',\r\n     *              'is_active': false,\r\n     *              questionOptions: [],\r\n     *              'created_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'updated_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *       ]\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/quizes/{quize_uuid}": {
            "put": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Update Quiz",
                "description": "Update Quiz",
                "operationId": "updateQuiz",
                "parameters": [
                    {
                        "name": "quize_uuid",
                        "in": "path",
                        "description": "quize_uuid of Quiz",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "requestBody": {
                    "description": "Pass Quiz data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test quiz"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "is_active",
                                        "example": "true/false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Quiz has been Updated Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test quiz',\r\n     *          'is_active': 'false',\r\n     *       'questions': [\r\n     *          {\r\n     *              'id': 3,\r\n     *              'uuid': 'd3d7fe27-7397-4e9f-a31a-3c7009054686',\r\n     *              'name': 'test question',\r\n     *              'is_active': false,\r\n     *              'questionOptions': [\r\n     *                 {\r\n     *                   'id': '1',\r\n     *                   'uuid': '7609a726-8353-4617-8d47-ae3955d62fbb',\r\n     *                   'name': 'test',\r\n     *                   'is_active': 'true',\r\n     *                   'question_id': '3',\r\n     *                   'created_at': '2022-06-21T18:04:56.000000Z',\r\n     *                   'updated_at': '2022-06-21T18:15:55.000000Z',\r\n     *                   'deleted_at': null\r\n     *                  },\r\n     *                  {\r\n     *                   'id': 2,\r\n     *                   'uuid': '6f4cd3f1-2753-426b-9174-50ec9850a507',\r\n     *                   'name': 'test question opiton',\r\n     *                   'is_active': 'true',\r\n     *                   'question_id': '3',\r\n     *                   'created_at': '2022-06-21T18:16:29.000000Z',\r\n     *                   'updated_at': '2022-06-21T18:16:29.000000Z',\r\n     *                   'deleted_at': null\r\n     *                  },\r\n     *              ]\r\n     *              'created_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'updated_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'deleted_at': null\r\n     *           },\r\n     *           {\r\n     *              'id': 4,\r\n     *              'uuid': 'd3d7fe27-7397-4e9f-a31a-3c7009054686',\r\n     *              'name': 'test question',\r\n     *              'is_active': false,\r\n     *              questionOptions: [],\r\n     *              'created_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'updated_at': '2022-06-21T18:13:44.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *       ]\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-routing-plan": {
            "get": {
                "tags": [
                    "Routing Plan"
                ],
                "summary": "Get Routing Plan",
                "description": "Get Routing Plan",
                "operationId": "getRoutingPlan",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sorte routing plan by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test routing plan"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort routing plan by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort routing plan by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Routing Plan has been fetched successfully!',\r\n     *        'data': {\r\n     *          'routingPlan': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'client_id': '1',\r\n     *              'target_id': '1',\r\n     *              'priority': '1',\r\n     *              'weight': '1',\r\n     *              'name': 'test routing plan',\r\n     *              'destination': 'test destination',\r\n     *              'duplicate_conversation_type': 'test duplicate_conversation_type',\r\n     *              'time_limit_days': '5',\r\n     *              'time_limit_hours': '5',\r\n     *              'convert_on': 'test',\r\n     *              'status': 'active',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Reporting not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-routing-plan/detail/{uuid}": {
            "get": {
                "tags": [
                    "Routing Plan"
                ],
                "summary": "Get Routing Plan Detail by uuid",
                "description": "Get Routing Plan Detail by uuid",
                "operationId": "getRoutingPlanDetail",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Routing Plan",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       {\r\n     *       'status': true,\r\n     *       'message': 'Routing Plan Detail has been fetched successfully!',\r\n     *        'data': {\r\n     *          'routingPlan': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'client_id': '1',\r\n     *              'target_id': '1',\r\n     *              'priority': '1',\r\n     *              'weight': '1',\r\n     *              'name': 'test routing plan',\r\n     *              'destination': 'test destination',\r\n     *              'duplicate_conversation_type': 'test duplicate_conversation_type',\r\n     *              'time_limit_days': '5',\r\n     *              'time_limit_hours': '5',\r\n     *              'convert_on': 'test',\r\n     *              'status': 'active',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Routing Plan Detail Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/delete-routing-plan": {
            "delete": {
                "tags": [
                    "Routing Plan"
                ],
                "summary": "Delete Routing Plan by uuid",
                "description": "Delete Routing Plan Detail by uuid",
                "operationId": "deleteRoutingPlan",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Routing Plan",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       {\r\n     *       'status': true,\r\n     *       'message': 'Routing Plan Detail has been deleted successfully!',\r\n     *        'data': {\r\n     *          'routingPlan': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'client_id': '1',\r\n     *              'target_id': '1',\r\n     *              'priority': '1',\r\n     *              'weight': '1',\r\n     *              'name': 'test routing plan',\r\n     *              'destination': 'test destination',\r\n     *              'duplicate_conversation_type': 'test duplicate_conversation_type',\r\n     *              'time_limit_days': '5',\r\n     *              'time_limit_hours': '5',\r\n     *              'convert_on': 'test',\r\n     *              'status': 'active',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Routing Plan Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-routing-plan": {
            "post": {
                "tags": [
                    "Routing Plan"
                ],
                "summary": "Create Routing Plan",
                "description": "Create Routing Plan",
                "operationId": "createRoutingPlan",
                "requestBody": {
                    "description": "Pass Routing Plan data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "client_uuid,targert_uuid,priority,weight"
                                ],
                                "properties": {
                                    "client_uuid": {
                                        "type": "string",
                                        "format": "client_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "target_uuid": {
                                        "type": "string",
                                        "format": "target_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "format": "weight",
                                        "example": "1"
                                    },
                                    "weight": {
                                        "type": "string",
                                        "format": "tag_name",
                                        "example": "test key"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test routing plan"
                                    },
                                    "destination": {
                                        "type": "string",
                                        "format": "destination",
                                        "example": "test destination"
                                    },
                                    "duplicate_conversation_type": {
                                        "type": "string",
                                        "format": "duplicate_conversation_type",
                                        "example": "test duplicate_conversation_type"
                                    },
                                    "time_limit_days": {
                                        "type": "integer",
                                        "format": "time_limit_days",
                                        "example": "5"
                                    },
                                    "time_limit_hours": {
                                        "type": "integer",
                                        "format": "time_limit_hours",
                                        "example": "5"
                                    },
                                    "convert_on": {
                                        "type": "string",
                                        "format": "convert_on",
                                        "example": "test"
                                    },
                                    "status": {
                                        "type": "enum",
                                        "format": "status",
                                        "example": "active/inactive/disable"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Routing Plan has been created successfully!',\r\n     *       'data': {\r\n     *          'routingPlan': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'client_id': '1',\r\n     *              'target_id': '1',\r\n     *              'priority': '1',\r\n     *              'weight': '1',\r\n     *              'name': 'test routing plan',\r\n     *              'destination': 'test destination',\r\n     *              'duplicate_conversation_type': 'test duplicate_conversation_type',\r\n     *              'time_limit_days': '5',\r\n     *              'time_limit_hours': '5',\r\n     *              'convert_on': 'test',\r\n     *              'status': 'active',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Routing Plan Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-routing-plan": {
            "post": {
                "tags": [
                    "Routing Plan"
                ],
                "summary": "Update Routing Plan",
                "description": "Update Routing Plan",
                "operationId": "updateRoutingPlan",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "Update Routing Plan by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                    }
                ],
                "requestBody": {
                    "description": "Pass Routing Plan data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "client_uuid,targert_uuid,priority,weight"
                                ],
                                "properties": {
                                    "client_uuid": {
                                        "type": "string",
                                        "format": "client_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "target_uuid": {
                                        "type": "string",
                                        "format": "target_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "format": "weight",
                                        "example": "1"
                                    },
                                    "weight": {
                                        "type": "string",
                                        "format": "tag_name",
                                        "example": "test key"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test routing plan"
                                    },
                                    "destination": {
                                        "type": "string",
                                        "format": "destination",
                                        "example": "test destination"
                                    },
                                    "duplicate_conversation_type": {
                                        "type": "string",
                                        "format": "duplicate_conversation_type",
                                        "example": "test duplicate_conversation_type"
                                    },
                                    "time_limit_days": {
                                        "type": "integer",
                                        "format": "time_limit_days",
                                        "example": "5"
                                    },
                                    "time_limit_hours": {
                                        "type": "integer",
                                        "format": "time_limit_hours",
                                        "example": "5"
                                    },
                                    "convert_on": {
                                        "type": "string",
                                        "format": "convert_on",
                                        "example": "test"
                                    },
                                    "status": {
                                        "type": "enum",
                                        "format": "status",
                                        "example": "active/inactive/disable"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Routing Plan has been created successfully!',\r\n     *       'data': {\r\n     *          'routingPlan': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'client_id': '1',\r\n     *              'target_id': '1',\r\n     *              'priority': '1',\r\n     *              'weight': '1',\r\n     *              'name': 'test routing plan',\r\n     *              'destination': 'test destination',\r\n     *              'duplicate_conversation_type': 'test duplicate_conversation_type',\r\n     *              'time_limit_days': '5',\r\n     *              'time_limit_hours': '5',\r\n     *              'convert_on': 'test',\r\n     *              'status': 'active',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Routing Plan Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/services": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Get Services",
                "description": "Get Services",
                "operationId": "getServices",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort services by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test services"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort services by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "sort services by type",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "client,agent,publisher"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort services by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Services has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test service',\r\n     *          'type': 'client',\r\n     *          'icon': 'test icon 1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Services Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Create Service",
                "description": "Create Service",
                "operationId": "createService",
                "requestBody": {
                    "description": "Pass Service data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test service"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "type",
                                        "example": "client,agent,publisher"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "icon",
                                        "example": "test icon"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Services has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test service',\r\n     *          'type': 'client',\r\n     *          'icon': 'test icon 1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/services/{service_uuid}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Get Service",
                "description": "Get Service by service_uuid",
                "operationId": "getServiceById",
                "parameters": [
                    {
                        "name": "service_uuid",
                        "in": "path",
                        "description": "service_uuid of Service",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Services has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test service',\r\n     *          'type': 'client',\r\n     *          'icon': 'test icon 1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Service"
                ],
                "summary": "Update Service",
                "description": "Update Service",
                "operationId": "updateService",
                "parameters": [
                    {
                        "name": "service_uuid",
                        "in": "path",
                        "description": "service_uuid of Service",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "requestBody": {
                    "description": "Pass Service data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test service"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "type",
                                        "example": "client,agent,publisher"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "icon",
                                        "example": "test icon"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Services has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test service',\r\n     *          'type': 'client',\r\n     *          'icon': 'test icon 1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Service"
                ],
                "summary": "Delete Service",
                "description": "Delete existing Service",
                "operationId": "deleteService",
                "parameters": [
                    {
                        "name": "service_uuid",
                        "in": "path",
                        "description": "service_uuid of Service",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Services has been Deleted Successfully!',\r\n     *       'data': {\r\n     *          'id': 1,\r\n     *          'uuid': '7276eed0-1cd6-4b74-95f1-1f1633254d8f',\r\n     *          'name': 'test service',\r\n     *          'type': 'client',\r\n     *          'icon': 'test icon 1',\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-target-listing": {
            "get": {
                "tags": [
                    "Target Listing"
                ],
                "summary": "Get Target Listing",
                "description": "Get Target Listing",
                "operationId": "getTargetListing",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sorte target listing by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test target listing"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort target listing by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort target listing by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Target Listing has been fetched successfully!',\r\n     *        'data': {\r\n     *          'targetListing': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'campaign_id': '1',\r\n     *              'client_id': '1',\r\n     *              'name': 'test target listing',\r\n     *              'type': 'test type',\r\n     *              'destination': 'test destination',\r\n     *              'status': 'active',\r\n     *              'is_primary': 'true',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Target Listing not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-target-detail/{uuid}": {
            "get": {
                "tags": [
                    "Target Listing"
                ],
                "summary": "Get Target Listing Detail by uuid",
                "description": "Get Target Listing Detail by uuid",
                "operationId": "getTargetListingDetail",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of Target Listing",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       {\r\n     *       'status': true,\r\n     *       'message': 'Target Listing Detail has been fetched successfully!',\r\n     *        'data': {\r\n     *          'targetListing': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'campaign_id': '1',\r\n     *              'client_id': '1',\r\n     *              'name': 'test target listing',\r\n     *              'type': 'test type',\r\n     *              'destination': 'test destination',\r\n     *              'status': 'active',\r\n     *              'is_primary': 'true',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Target Listing Detail Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-target": {
            "post": {
                "tags": [
                    "Target Listing"
                ],
                "summary": "Create Target Listing",
                "description": "Create Target Listing",
                "operationId": "createTargetListing",
                "requestBody": {
                    "description": "Pass Target Listing data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "campaign_uuid,client_uuid,name"
                                ],
                                "properties": {
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "client_uuid": {
                                        "type": "string",
                                        "format": "client_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "name": {
                                        "type": "integer",
                                        "format": "name",
                                        "example": "test target listing"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "type",
                                        "example": "test type"
                                    },
                                    "destination": {
                                        "type": "string",
                                        "format": "destination",
                                        "example": "test destination"
                                    },
                                    "status": {
                                        "type": "enum",
                                        "format": "status",
                                        "example": "active/inactive/disable"
                                    },
                                    "is_primary": {
                                        "type": "boolean",
                                        "format": "is_primary",
                                        "example": "true/false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Routing Plan has been created successfully!',\r\n     *       'data': {\r\n     *          'targetListing': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'campaign_id': '1',\r\n     *              'client_id': '1',\r\n     *              'name': 'test target listing',\r\n     *              'type': 'test type',\r\n     *              'destination': 'test destination',\r\n     *              'status': 'active',\r\n     *              'is_primary': 'true',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Target Listing Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-target": {
            "post": {
                "tags": [
                    "Target Listing"
                ],
                "summary": "Update Target Listing",
                "description": "Update Target Listing",
                "operationId": "updateTargetListing",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "Update Target Listing by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                    }
                ],
                "requestBody": {
                    "description": "Pass Target Listing data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "campaign_uuid,client_uuid,name"
                                ],
                                "properties": {
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "client_uuid": {
                                        "type": "string",
                                        "format": "client_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "name": {
                                        "type": "integer",
                                        "format": "name",
                                        "example": "test target listing"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "type",
                                        "example": "test type"
                                    },
                                    "destination": {
                                        "type": "string",
                                        "format": "destination",
                                        "example": "test destination"
                                    },
                                    "status": {
                                        "type": "enum",
                                        "format": "status",
                                        "example": "active/inactive/disable"
                                    },
                                    "is_primary": {
                                        "type": "boolean",
                                        "format": "is_primary",
                                        "example": "true/false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Target Listing has been created successfully!',\r\n     *       'data': {\r\n     *          'targetListing': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'campaign_id': '1',\r\n     *              'client_id': '1',\r\n     *              'name': 'test target listing',\r\n     *              'type': 'test type',\r\n     *              'destination': 'test destination',\r\n     *              'status': 'active',\r\n     *              'is_primary': 'true',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Target Listing Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-twilio-number": {
            "get": {
                "tags": [
                    "Twilio Number"
                ],
                "summary": "Get Twilio Number",
                "description": "Get Twilio Number",
                "operationId": "getTwilioNumber",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort twilio number by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test twilio number"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort twilio number by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort twilio number by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Twilio Number has been fetched successfully!',\r\n     *        'data': {\r\n     *          'twilioNumber': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'number_sid': '71ab8e5c-9422-4ab2-a7af-5d713764ab72',\r\n     *              'number': '+123456789',\r\n     *              'country': 'canada',\r\n     *              'bill_card': '1',\r\n     *              'type': 'local',\r\n     *              'name': 'test twilio number',\r\n     *              'allocated': '12 Nov, 2022',\r\n     *              'renews': '13 Nov, 2022',\r\n     *              'last_call_date': '2022-11-14',\r\n     *              'campaign_name': 'demo campaign',\r\n     *              'campaign_id': '1',\r\n     *              'number_pool': 'test number pool',\r\n     *              'amount': '0',\r\n     *              'publisher_id': 'null',\r\n     *              'status': '1',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Twilio Number not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-twilio-number": {
            "post": {
                "tags": [
                    "Twilio Number"
                ],
                "summary": "Create Twilio Number",
                "description": "Create Twilio Number",
                "operationId": "storeTwilioNumber",
                "requestBody": {
                    "description": "Pass Twilio Number data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "uuid,name"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "number_sid": {
                                        "type": "string",
                                        "format": "number_sid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "number": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "+223432424"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "country",
                                        "example": "canada"
                                    },
                                    "bill_card": {
                                        "type": "boolean",
                                        "format": "bill_card",
                                        "example": "true/false"
                                    },
                                    "type": {
                                        "type": "enum",
                                        "format": "type",
                                        "example": "local/mobile/tollFree"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test name"
                                    },
                                    "allocated": {
                                        "type": "string",
                                        "format": "allocated",
                                        "example": "2022-07-19"
                                    },
                                    "renews": {
                                        "type": "string",
                                        "format": "renews",
                                        "example": "2022-07-19"
                                    },
                                    "last_call_date": {
                                        "type": "string",
                                        "format": "last_call_date",
                                        "example": "2022-07-19"
                                    },
                                    "campaign_name": {
                                        "type": "string",
                                        "format": "campaign_name",
                                        "example": "test campaign"
                                    },
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuie",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "number_pool": {
                                        "type": "string",
                                        "format": "number_pool",
                                        "example": "test number pool"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "amount",
                                        "example": "10.00"
                                    },
                                    "publisher_uuid": {
                                        "type": "string",
                                        "format": "publisher_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "format": "status",
                                        "example": "true/false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Twilio Number has been created successfully!',\r\n     *       'data': {\r\n     *          'twilioNumber': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'number_sid': '71ab8e5c-9422-4ab2-a7af-5d713764ab72',\r\n     *              'number': '+123456789',\r\n     *              'country': 'canada',\r\n     *              'bill_card': '1',\r\n     *              'type': 'local',\r\n     *              'name': 'test twilio number',\r\n     *              'allocated': '12 Nov, 2022',\r\n     *              'renews': '13 Nov, 2022',\r\n     *              'last_call_date': '2022-11-14',\r\n     *              'campaign_name': 'demo campaign',\r\n     *              'campaign_id': '1',\r\n     *              'number_pool': 'test number pool',\r\n     *              'amount': '0',\r\n     *              'publisher_id': 'null',\r\n     *              'status': '1',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Twilio Number Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-twilio-number": {
            "post": {
                "tags": [
                    "Twilio Number"
                ],
                "summary": "Update Twilio Number",
                "description": "Update Twilio Number",
                "operationId": "updateTwilioNumber",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "Update Twilio Number by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                    }
                ],
                "requestBody": {
                    "description": "Pass Twilio Number data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "uuid,name"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "number_sid": {
                                        "type": "string",
                                        "format": "number_sid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "number": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "+223432424"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "country",
                                        "example": "canada"
                                    },
                                    "bill_card": {
                                        "type": "boolean",
                                        "format": "bill_card",
                                        "example": "true/false"
                                    },
                                    "type": {
                                        "type": "enum",
                                        "format": "type",
                                        "example": "local/mobile/tollFree"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test name"
                                    },
                                    "allocated": {
                                        "type": "string",
                                        "format": "allocated",
                                        "example": "2022-07-19"
                                    },
                                    "renews": {
                                        "type": "string",
                                        "format": "renews",
                                        "example": "2022-07-19"
                                    },
                                    "last_call_date": {
                                        "type": "string",
                                        "format": "last_call_date",
                                        "example": "2022-07-19"
                                    },
                                    "campaign_name": {
                                        "type": "string",
                                        "format": "campaign_name",
                                        "example": "test campaign"
                                    },
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuie",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "number_pool": {
                                        "type": "string",
                                        "format": "number_pool",
                                        "example": "test number pool"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "amount",
                                        "example": "10.00"
                                    },
                                    "publisher_uuid": {
                                        "type": "string",
                                        "format": "publisher_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "format": "status",
                                        "example": "true/false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Twilio Number has been updated successfully!',\r\n     *       'data': {\r\n     *          'twilioNumber': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'number_sid': '71ab8e5c-9422-4ab2-a7af-5d713764ab72',\r\n     *              'number': '+123456789',\r\n     *              'country': 'canada',\r\n     *              'bill_card': '1',\r\n     *              'type': 'local',\r\n     *              'name': 'test twilio number',\r\n     *              'allocated': '12 Nov, 2022',\r\n     *              'renews': '13 Nov, 2022',\r\n     *              'last_call_date': '2022-11-14',\r\n     *              'campaign_name': 'demo campaign',\r\n     *              'campaign_id': '1',\r\n     *              'number_pool': 'test number pool',\r\n     *              'amount': '0',\r\n     *              'publisher_id': 'null',\r\n     *              'status': '1',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Twilio Number Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-publishers-for-assign-to-campaign": {
            "get": {
                "tags": [
                    "Twilio Number"
                ],
                "summary": "Get Publishers for Assign to Campaign",
                "description": "Get Publishers for Assign to Campaign",
                "operationId": "getPublishersForAssignToCampaign",
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Numbers has been fetched successfully!',\r\n     *        'data': {\r\n     *          'publishers': {\r\n     *             'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Numbers not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/assigned-publisher-to-number": {
            "post": {
                "tags": [
                    "Twilio Number"
                ],
                "summary": "Assigned Publisher to Number",
                "description": "Assigned Publisher to Number",
                "operationId": "assignedPublisherToNumber",
                "requestBody": {
                    "description": "Pass uuid and publisher_uuid data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "uuid,publisher_uuid"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "publisher_uuid": {
                                        "type": "string",
                                        "format": "publisher_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Publisher has been successfully assigned to the Number',\r\n     *       'data': {\r\n     *          'twilioNumber': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'publisher_id': '1',\r\n     *               'created_at': '2022-07-25T09:41:48.000000Z','\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Number or Publisher Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/assigned-publisher-campaign": {
            "post": {
                "tags": [
                    "Twilio Number"
                ],
                "summary": "Assigned Campaign to Number",
                "description": "Assigned Campaign to Number",
                "operationId": "assignedCampaignToNumber",
                "requestBody": {
                    "description": "Pass number_uuid and campaign_uuid data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "number_uuid,campaign_uuid"
                                ],
                                "properties": {
                                    "number_uuid": {
                                        "type": "string",
                                        "format": "number_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "campaign_uuid": {
                                        "type": "string",
                                        "format": "campaign_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Campaign has been successfully assigned to the Number against selected publisher',\r\n     *       'data': {\r\n     *          'twilioNumber': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'campaign_id': '1',\r\n     *               'created_at': '2022-07-25T09:41:48.000000Z','\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Number or Campaign Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-twilio-number-tag": {
            "get": {
                "tags": [
                    "Twilio Number Tag"
                ],
                "summary": "Get Twilio Number Tag",
                "description": "Get Twilio Number Tag",
                "operationId": "getTwilioNumberTag",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sorte twilion number tag by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test tag"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort twilio number tag by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "sort twilio number tag by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Twilio Number Tag has been created successfully!',\r\n     *       'data': {\r\n     *          'twilioNumberTag': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'twilio_number_id': '1',\r\n     *              'name': 'test tag',\r\n     *              'tag_name': 'test key',\r\n     *              'tag_value': 'test value',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign Reporting not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/store-twilio-number-tag": {
            "post": {
                "tags": [
                    "Twilio Number Tag"
                ],
                "summary": "Create Twilio Number Tag",
                "description": "Create Twilio Number Tag",
                "operationId": "createTwilioNumberTag",
                "requestBody": {
                    "description": "Pass Twilio Number Tag data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "twilio_number_uuid"
                                ],
                                "properties": {
                                    "twilio_number_uuid": {
                                        "type": "string",
                                        "format": "twilio_number_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test tag"
                                    },
                                    "tag_name": {
                                        "type": "string",
                                        "format": "tag_name",
                                        "example": "test key"
                                    },
                                    "tag_value": {
                                        "type": "string",
                                        "format": "tag_value",
                                        "example": "test value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Twilio Number Tag has been created successfully!',\r\n     *       'data': {\r\n     *          'twilioNumberTag': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'twilio_number_id': '1',\r\n     *              'name': 'test tag',\r\n     *              'tag_name': 'test key',\r\n     *              'tag_value': 'test value',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Twilio Number Tag Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-twilio-number-tag": {
            "post": {
                "tags": [
                    "Twilio Number Tag"
                ],
                "summary": "Update Twilio Number Tag",
                "description": "Update Twilio Number Tag",
                "operationId": "updateTwilioNumberTag",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "Update Twilio Number Tag by uuid param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                    }
                ],
                "requestBody": {
                    "description": "Pass Twilio Number Tag data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "twilio_number_uuid"
                                ],
                                "properties": {
                                    "twilio_number_uuid": {
                                        "type": "string",
                                        "format": "twilio_number_uuid",
                                        "example": "7276eed0-1cd6-4b74-95f1-1f1633254d8f"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "test tag"
                                    },
                                    "tag_name": {
                                        "type": "string",
                                        "format": "tag_name",
                                        "example": "test key"
                                    },
                                    "tag_value": {
                                        "type": "string",
                                        "format": "tag_value",
                                        "example": "test value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Twilio Number Tag has been updated successfully!',\r\n     *       'data': {\r\n     *          'twilioNumberTag': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'twilio_number_id': '1',\r\n     *              'name': 'test tag',\r\n     *              'tag_name': 'test key',\r\n     *              'tag_value': 'test value',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Twilio Number Tag Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user-application-setting": {
            "post": {
                "tags": [
                    "User Application Setting"
                ],
                "summary": "Create User Application Setting",
                "description": "Create User Application Setting",
                "operationId": "createUserApplicationSetting",
                "requestBody": {
                    "description": "Pass User Application Setting data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "is_dark_mode": {
                                        "type": "boolean",
                                        "format": "is_dark_mode",
                                        "example": "true/false"
                                    },
                                    "favMenu": {
                                        "type": "string",
                                        "format": "favMenu",
                                        "example": "[{'title'=>'test title','icon'=>'test icon','route'=>'test route'},{'title'=>'test title2','icon'=>'test icon2','route'=>'test route2'}]"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User Application Setting has been created successfully!',\r\n     *       'data': {\r\n     *          'userApplicationSetting': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'user_id': '1',\r\n     *              'name': 'test tag',\r\n     *              'is_dark_mode': 'false',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Application Setting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-user-application-setting": {
            "get": {
                "tags": [
                    "User Application Setting"
                ],
                "summary": "Get User Application Setting",
                "description": "Get User Application Setting",
                "operationId": "getUserApplicationSetting",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "get user_application_settings by user_id",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User Application Settings has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'userApplicationSetting': {\r\n     *              'uuid': '86662f9c-8e04-45bd-b0a5-ff2bcea776c7',\r\n     *              'user_id': '1',\r\n     *              'name': 'test tag',\r\n     *              'is_dark_mode': 'false',\r\n     *              'created_at': '2022-07-25T09:41:48.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Application Setting Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get Users",
                "description": "Get Users",
                "operationId": "Get Users",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort user by name param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "test user"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "sort user by sortBy param",
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "sort user by pagination",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 2,\r\n     *          'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *          'name': 'John Doe',\r\n     *          'first_name': 'John',\r\n     *          'last_name': Doe',\r\n     *          'email': 'johndoe@gmail.com',\r\n     *          'phone_no': '+11236547891',\r\n     *          'role': null,\r\n     *          'profile_photo': {},\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/{user_uuid}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User By User uuid",
                "description": "Get User By user_uuid",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "user_uuid",
                        "in": "path",
                        "description": "user_uuid of User",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "fb5700d7-d543-4d41-8192-f9d962517f46"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 2,\r\n     *          'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *          'name': 'John Doe',\r\n     *          'first_name': 'John',\r\n     *          'last_name': Doe',\r\n     *          'email': 'johndoe@gmail.com',\r\n     *          'phone_no': '+11236547891',\r\n     *          'role': null,\r\n     *          'profile_photo': {},\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "update User",
                "description": "Update User",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "user_uuid",
                        "in": "path",
                        "description": "user_uuid of User",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "requestBody": {
                    "description": "Pass user data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "format": "first_name",
                                        "example": "john"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "format": "last_name",
                                        "example": "doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@gmail.com"
                                    },
                                    "photo": {
                                        "type": "string",
                                        "format": "photo",
                                        "example": "uploads/users/1654705018327223585jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been updated Successfully!',\r\n     *       'data': {\r\n     *          'id': 2,\r\n     *          'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *          'name': 'John Doe',\r\n     *          'first_name': 'John',\r\n     *          'last_name': Doe',\r\n     *          'email': 'johndoe@gmail.com',\r\n     *          'phone_no': '+11236547891',\r\n     *          'role': null,\r\n     *          'profile_photo': {},\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/{role}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User By Role",
                "description": "Get User By role",
                "operationId": "getUserByRole",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "Role of User",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "agent,admin,client"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'id': 2,\r\n     *          'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *          'name': 'John Doe',\r\n     *          'first_name': 'John',\r\n     *          'last_name': Doe',\r\n     *          'email': 'johndoe@gmail.com',\r\n     *          'phone_no': '+11236547891',\r\n     *          'role': null,\r\n     *          'profile_photo': {},\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/user_uuid": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete existing User",
                "description": "Delete User by setting_uuid",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "user_uuid",
                        "in": "path",
                        "description": "user_uuid of User",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "53adb8de-3cab-4aec-9db2-5bc7fd40b764"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been Deleted Successfully!',\r\n     *       'data': {\r\n     *          'id': 2,\r\n     *          'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *          'name': 'John Doe',\r\n     *          'first_name': 'John',\r\n     *          'last_name': Doe',\r\n     *          'email': 'johndoe@gmail.com',\r\n     *          'phone_no': '+11236547891',\r\n     *          'role': null,\r\n     *          'profile_photo': {},\r\n     *          'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *          'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *          'deleted_at': null\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update-general-information": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "update General Information",
                "description": "Update General Information",
                "operationId": "updateGeneralInformation",
                "requestBody": {
                    "description": "Pass user data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "jwtToken"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "format": "first_name",
                                        "example": "john"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "format": "last_name",
                                        "example": "doe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User general information has been updated Successfully!',\r\n     *       'data': {\r\n     *          userData: {\r\n     *              'id': 2,\r\n     *              'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *              'name': 'John Doe',\r\n     *              'first_name': 'John',\r\n     *              'last_name': Doe',\r\n     *              'email': 'johndoe@gmail.com',\r\n     *              'phone_no': '+11236547891',\r\n     *              'role': null,\r\n     *              'bio': 'john doe',\r\n     *              'birth_date': null,\r\n     *              'country': 'canada',\r\n     *              'website': 'cloudrepai.com',\r\n     *              'twitter': null,\r\n     *              'facebook': null,\r\n     *              'google': null,\r\n     *              'linkedin': null,\r\n     *              'instagram': null,\r\n     *              'quora': null,\r\n     *              'profile_photo': {},\r\n     *              'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *              'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/upload-profile-image": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Upload Profile Image",
                "description": "Upload Profile Image",
                "operationId": "uploadProfileImage",
                "requestBody": {
                    "description": "Pass profile image data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "image",
                                    "jwtToken"
                                ],
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "image",
                                        "example": "abc.png"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Profile Image has been Updated Successfully!',\r\n     *       'data': {\r\n     *          userData: {\r\n     *              'id': 2,\r\n     *              'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *              'name': 'John Doe',\r\n     *              'first_name': 'John',\r\n     *              'last_name': Doe',\r\n     *              'email': 'johndoe@gmail.com',\r\n     *              'phone_no': '+11236547891',\r\n     *              'role': null,\r\n     *              'bio': 'john doe',\r\n     *              'birth_date': null,\r\n     *              'country': 'canada',\r\n     *              'website': 'cloudrepai.com',\r\n     *              'twitter': null,\r\n     *              'facebook': null,\r\n     *              'google': null,\r\n     *              'linkedin': null,\r\n     *              'instagram': null,\r\n     *              'quora': null,\r\n     *              'profile_photo': 'http://127.0.0.1:8000/storage/user/profile/SJDgCRdeoiG8isTkezKbyufF6rRaYb.png',\r\n     *              'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *              'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile Image Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/remove-profile-image": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Remove Profile Image",
                "description": "Remove Profile Image",
                "operationId": "removeProfileImage",
                "requestBody": {
                    "description": "Remove profile image data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "image",
                                    "jwtToken"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Profile Image has been Removed Successfully!',\r\n     *       'data': {\r\n     *          userData: {\r\n     *              'id': 2,\r\n     *              'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *              'name': 'John Doe',\r\n     *              'first_name': 'John',\r\n     *              'last_name': Doe',\r\n     *              'email': 'johndoe@gmail.com',\r\n     *              'phone_no': '+11236547891',\r\n     *              'role': null,\r\n     *              'bio': 'john doe',\r\n     *              'birth_date': null,\r\n     *              'country': 'canada',\r\n     *              'website': 'cloudrepai.com',\r\n     *              'twitter': null,\r\n     *              'facebook': null,\r\n     *              'google': null,\r\n     *              'linkedin': null,\r\n     *              'instagram': null,\r\n     *              'quora': null,\r\n     *              'profile_photo': 'http://127.0.0.1:8000/storage/user/profile/SJDgCRdeoiG8isTkezKbyufF6rRaYb.png',\r\n     *              'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *              'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile Image Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-personal-information": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "update Personal Information",
                "description": "Update Personal Information",
                "operationId": "updatePersonalInformation",
                "requestBody": {
                    "description": "Pass user data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "bio",
                                    "birth_date",
                                    "jwtToken"
                                ],
                                "properties": {
                                    "bio": {
                                        "type": "string",
                                        "format": "bio",
                                        "example": "john doe"
                                    },
                                    "birth_date": {
                                        "type": "string",
                                        "format": "birth_date",
                                        "example": "2022-06-04"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "country",
                                        "example": "canada"
                                    },
                                    "website": {
                                        "type": "string",
                                        "format": "website",
                                        "example": "cloudrepai.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Personal Information has been updated Successfully!',\r\n     *       'data': {\r\n     *          userData: {\r\n     *              'id': 2,\r\n     *              'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *              'name': 'John Doe',\r\n     *              'first_name': 'John',\r\n     *              'last_name': Doe',\r\n     *              'email': 'johndoe@gmail.com',\r\n     *              'phone_no': '+11236547891',\r\n     *              'role': null,\r\n     *              'profile_photo': uploads/users/1654705018327223787.jpg,\r\n     *              'bio': 'john doe',\r\n     *              'birth_date': null,\r\n     *              'country': 'canada',\r\n     *              'website': 'cloudrepai.com',\r\n     *              'twitter': null,\r\n     *              'facebook': null,\r\n     *              'google': null,\r\n     *              'linkedin': null,\r\n     *              'instagram': null,\r\n     *              'quora': null,\r\n     *              'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *              'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/update-social-link": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "update Social Link",
                "description": "Update Social Link",
                "operationId": "updateSocialLink",
                "requestBody": {
                    "description": "Pass user data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "jwtToken"
                                ],
                                "properties": {
                                    "twitter": {
                                        "type": "string",
                                        "format": "twitter",
                                        "example": "twitter.com/john"
                                    },
                                    "facebook": {
                                        "type": "string",
                                        "format": "facebook",
                                        "example": "facebook.com/john"
                                    },
                                    "google": {
                                        "type": "string",
                                        "format": "google",
                                        "example": "google.com/john"
                                    },
                                    "instagram": {
                                        "type": "string",
                                        "format": "instagram",
                                        "example": "instagram.com/john"
                                    },
                                    "linkedin": {
                                        "type": "string",
                                        "format": "linkedin",
                                        "example": "linkedin.com/john"
                                    },
                                    "quora": {
                                        "type": "string",
                                        "format": "quora",
                                        "example": "quora.com/john"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'Social link has been updated Successfully!',\r\n     *       'data': {\r\n     *          userData: {\r\n     *              'id': 2,\r\n     *              'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *              'name': 'John Doe',\r\n     *              'first_name': 'John',\r\n     *              'last_name': Doe',\r\n     *              'email': 'johndoe@gmail.com',\r\n     *              'phone_no': '+11236547891',\r\n     *              'role': null,\r\n     *              'profile_photo': uploads/users/1654705018327223787.jpg,\r\n     *              'bio': 'john doe',\r\n     *              'birth_date': null,\r\n     *              'country': 'canada',\r\n     *              'website': 'cloudrepai.com',\r\n     *              'twitter': null,\r\n     *              'facebook': null,\r\n     *              'google': null,\r\n     *              'linkedin': null,\r\n     *              'instagram': null,\r\n     *              'quora': null,\r\n     *              'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *              'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/my-detail": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get Current User Detail",
                "description": "Get Current User Detail",
                "operationId": "GetCurrentUserDetail",
                "requestBody": {
                    "description": "Pass user data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "jwtToken"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          userData: {\r\n     *              'id': 2,\r\n     *              'uuid': 'fb5700d7-d543-4d41-8192-f9d962517f14',\r\n     *              'name': 'John Doe',\r\n     *              'first_name': 'John',\r\n     *              'last_name': Doe',\r\n     *              'email': 'johndoe@gmail.com',\r\n     *              'phone_no': '+11236547891',\r\n     *              'role': null,\r\n     *              'profile_photo': uploads/users/1654705018327223787.jpg,\r\n     *              'bio': 'john doe',\r\n     *              'birth_date': null,\r\n     *              'country': 'canada',\r\n     *              'website': 'cloudrepai.com',\r\n     *              'twitter': null,\r\n     *              'facebook': null,\r\n     *              'google': null,\r\n     *              'linkedin': null,\r\n     *              'instagram': null,\r\n     *              'quora': null,\r\n     *              'created_at': '2022-06-04T18:32:20.000000Z',\r\n     *              'updated_at': '2022-06-04T18:36:16.000000Z',\r\n     *              'deleted_at': null\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get-user-detail/{uuid}": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "summary": "Get User Detail By Uuid",
                "description": "Get User Detail By uuid",
                "operationId": "getUserByUuid",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid of User",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        },
                        "example": "6e3cd84f-b3e5-4387-87da-0b7654f248d2"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\r\n     * {\r\n     *       'status': true,\r\n     *       'message': 'User has been Fetched Successfully!',\r\n     *       'data': {\r\n     *          'user_detail': {\r\n     *              'uuid': 'd326b430-0197-4fcc-8be8-dc7a0c7d636f',\r\n     *              'bussines_name': 'Isadora Simpson',\r\n     *              'bussines_address': 'Autem veniam quo ex',\r\n     *              'bussines_phone_no': '+1 (379) 665-4454',\r\n     *              'google_my_bussines': '+1 (585) 395-4826',\r\n     *              'crunchbase': 'Culpa excepteur mini',\r\n     *              'linkedin': 'Veniam labore id ma',\r\n     *              'twitter': 'Qui a recusandae Su',\r\n     *              'step': 3,\r\n     *              'user_id': 56,\r\n     *              'user': {\r\n     *                  'uuid': '2b57d931-d73e-41e7-b278-c2272c2513c4',\r\n     *                  'name': 'Elaine Baxter',\r\n     *                  'first_name': 'Elaine',\r\n     *                  'last_name': 'Baxter',\r\n     *                  'email': 'kyxe@mailinator.com',\r\n     *                  'phone_no': '4878965412',\r\n     *                  'role': null,\r\n     *                  'profile_photo': {},\r\n     *                  'created_at': '2022-07-13T19:21:21.000000Z'\r\n     *              },\r\n     *              'created_at': '2022-07-13T19:21:53.000000Z'\r\n     *          }\r\n     *      }\r\n     * }",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}